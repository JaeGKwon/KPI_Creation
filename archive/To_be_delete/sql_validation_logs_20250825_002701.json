[
  {
    "kpi_name": "Cart Completion Time",
    "table_name": "tb_market_cart",
    "sql_query": "SELECT AVG(DATEDIFF(purchase_date, create_date)) FROM tb_market_cart JOIN tb_purchase ON tb_market_cart.user_id = tb_purchase.user_id WHERE purchase_date IS NOT NULL AND create_date IS NOT NULL AND purchase_date > create_date",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:22:51.365498"
  },
  {
    "kpi_name": "Cart Retention Rate",
    "table_name": "tb_market_cart",
    "sql_query": "SELECT COUNT(DISTINCT CASE WHEN DATEDIFF(return_date, create_date) <= 7 THEN user_id END) / COUNT(DISTINCT user_id) FROM tb_market_cart JOIN tb_user ON tb_market_cart.user_id = tb_user.user_id WHERE return_date IS NOT NULL AND create_date IS NOT NULL AND return_date > create_date",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:22:53.533682"
  },
  {
    "kpi_name": "Cart Item Return Rate",
    "table_name": "tb_market_cart",
    "sql_query": "SELECT COUNT(CASE WHEN status = 'returned' THEN 1 END) / COUNT(*) FROM tb_market_cart WHERE status IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:22:55.133541"
  },
  {
    "kpi_name": "Cart Item Exchange Rate",
    "table_name": "tb_market_cart",
    "sql_query": "SELECT COUNT(CASE WHEN status = 'exchanged' THEN 1 END) / COUNT(*) FROM tb_market_cart WHERE status IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:22:56.807345"
  },
  {
    "kpi_name": "Cart Item Refund Rate",
    "table_name": "tb_market_cart",
    "sql_query": "SELECT COUNT(CASE WHEN status = 'refunded' THEN 1 END) / COUNT(*) FROM tb_market_cart WHERE status IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:22:58.524874"
  },
  {
    "kpi_name": "Total Deliveries",
    "table_name": "tb_user_delivery",
    "sql_query": "SELECT COUNT(*) FROM tb_user_delivery WHERE delivery_id IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:22:59.916855"
  },
  {
    "kpi_name": "Total Unique Users",
    "table_name": "tb_user_delivery",
    "sql_query": "SELECT COUNT(DISTINCT user_id) FROM tb_user_delivery WHERE user_id IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:23:01.629664"
  },
  {
    "kpi_name": "Default Delivery Addresses",
    "table_name": "tb_user_delivery",
    "sql_query": "SELECT COUNT(*) FROM tb_user_delivery WHERE is_default = TRUE",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:23:03.898952"
  },
  {
    "kpi_name": "Deliveries with Refund or Exchange",
    "table_name": "tb_user_delivery",
    "sql_query": "SELECT COUNT(*) FROM tb_user_delivery WHERE is_exchange_refund = TRUE",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:23:05.529026"
  },
  {
    "kpi_name": "Most Common Delivery Zip Code",
    "table_name": "tb_user_delivery",
    "sql_query": "SELECT zip_code, COUNT(*) as count FROM tb_user_delivery GROUP BY zip_code ORDER BY count DESC LIMIT 1",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:23:10.239530"
  },
  {
    "kpi_name": "Latest Delivery Update",
    "table_name": "tb_user_delivery",
    "sql_query": "SELECT MAX(update_date) FROM tb_user_delivery WHERE update_date IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:23:11.780812"
  },
  {
    "kpi_name": "Deliveries with Multiple Contact Numbers",
    "table_name": "tb_user_delivery",
    "sql_query": "SELECT COUNT(*) FROM tb_user_delivery WHERE cellphone_1 IS NOT NULL AND cellphone_2 IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:23:15.036794"
  },
  {
    "kpi_name": "Deliveries with Missing Contact Numbers",
    "table_name": "tb_user_delivery",
    "sql_query": "SELECT COUNT(*) FROM tb_user_delivery WHERE cellphone_1 IS NULL AND cellphone_2 IS NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:23:17.628664"
  },
  {
    "kpi_name": "Deliveries by User with Most Deliveries",
    "table_name": "tb_user_delivery",
    "sql_query": "SELECT user_id, COUNT(*) as count FROM tb_user_delivery GROUP BY user_id ORDER BY count DESC LIMIT 1",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:23:19.088703"
  },
  {
    "kpi_name": "Deliveries with Detailed Address",
    "table_name": "tb_user_delivery",
    "sql_query": "SELECT COUNT(*) FROM tb_user_delivery WHERE address_detail IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:23:21.719118"
  },
  {
    "kpi_name": "Deliveries without Detailed Address",
    "table_name": "tb_user_delivery",
    "sql_query": "SELECT COUNT(*) FROM tb_user_delivery WHERE address_detail IS NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:23:23.240804"
  },
  {
    "kpi_name": "Deliveries with Same Receiver and User",
    "table_name": "tb_user_delivery",
    "sql_query": "SELECT COUNT(*) FROM tb_user_delivery JOIN tb_user ON tb_user_delivery.user_id = tb_user.user_id WHERE tb_user_delivery.receiver = tb_user.user_name",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:23:25.688626"
  },
  {
    "kpi_name": "Deliveries with Different Receiver and User",
    "table_name": "tb_user_delivery",
    "sql_query": "SELECT COUNT(*) FROM tb_user_delivery JOIN tb_user ON tb_user_delivery.user_id = tb_user.user_id WHERE tb_user_delivery.receiver <> tb_user.user_name",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:23:27.454195"
  },
  {
    "kpi_name": "Deliveries with Missing Receiver",
    "table_name": "tb_user_delivery",
    "sql_query": "SELECT COUNT(*) FROM tb_user_delivery WHERE receiver IS NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:23:29.491107"
  },
  {
    "kpi_name": "Deliveries with Missing Address",
    "table_name": "tb_user_delivery",
    "sql_query": "SELECT COUNT(*) FROM tb_user_delivery WHERE address IS NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:23:31.435018"
  },
  {
    "kpi_name": "Deliveries with Missing Zip Code",
    "table_name": "tb_user_delivery",
    "sql_query": "SELECT COUNT(*) FROM tb_user_delivery WHERE zip_code IS NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:23:32.876858"
  },
  {
    "kpi_name": "Deliveries with Missing Contact Number",
    "table_name": "tb_user_delivery",
    "sql_query": "SELECT COUNT(*) FROM tb_user_delivery WHERE cellphone_1 IS NULL AND cellphone_2 IS NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:23:34.297802"
  },
  {
    "kpi_name": "Total Equipment Count",
    "table_name": "tb_partner_equipment",
    "sql_query": "SELECT COUNT(*) FROM tb_partner_equipment WHERE equipment_cnt IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:23:35.803347"
  },
  {
    "kpi_name": "Total Likes Count",
    "table_name": "tb_partner_equipment",
    "sql_query": "SELECT SUM(like_cnt) FROM tb_partner_equipment WHERE like_cnt IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:23:37.264370"
  },
  {
    "kpi_name": "Total Comments Count",
    "table_name": "tb_partner_equipment",
    "sql_query": "SELECT SUM(comment_cnt) FROM tb_partner_equipment WHERE comment_cnt IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:23:39.065345"
  },
  {
    "kpi_name": "Average Likes Per Equipment",
    "table_name": "tb_partner_equipment",
    "sql_query": "SELECT AVG(like_cnt) FROM tb_partner_equipment WHERE like_cnt IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:23:40.615454"
  },
  {
    "kpi_name": "Average Comments Per Equipment",
    "table_name": "tb_partner_equipment",
    "sql_query": "SELECT AVG(comment_cnt) FROM tb_partner_equipment WHERE comment_cnt IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:23:43.114235"
  },
  {
    "kpi_name": "New Equipment Count",
    "table_name": "tb_partner_equipment",
    "sql_query": "SELECT COUNT(*) FROM tb_partner_equipment WHERE create_date IS NOT NULL AND create_date > NOW() - INTERVAL '30 days'",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:23:49.861909"
  },
  {
    "kpi_name": "Updated Equipment Count",
    "table_name": "tb_partner_equipment",
    "sql_query": "SELECT COUNT(*) FROM tb_partner_equipment WHERE update_date IS NOT NULL AND update_date > NOW() - INTERVAL '30 days'",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:23:51.281387"
  },
  {
    "kpi_name": "Engagement Rate",
    "table_name": "tb_partner_equipment",
    "sql_query": "SELECT (SUM(comment_cnt) + SUM(like_cnt)) / COUNT(*) FROM tb_partner_equipment WHERE comment_cnt IS NOT NULL AND like_cnt IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:23:53.148332"
  },
  {
    "kpi_name": "Equipment Per Partner",
    "table_name": "tb_partner_equipment",
    "sql_query": "SELECT AVG(equipment_cnt) FROM tb_partner_equipment WHERE partner_id IS NOT NULL GROUP BY partner_id",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:23:54.733097"
  },
  {
    "kpi_name": "Most Active Partner",
    "table_name": "tb_partner_equipment",
    "sql_query": "SELECT partner_id FROM tb_partner_equipment WHERE partner_id IS NOT NULL GROUP BY partner_id ORDER BY COUNT(*) DESC LIMIT 1",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:23:56.229072"
  },
  {
    "kpi_name": "Total RFQs",
    "table_name": "tb_statistics_user",
    "sql_query": "SELECT COUNT(rfq_cnt) FROM tb_statistics_user WHERE rfq_cnt IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:23:59.490103"
  },
  {
    "kpi_name": "Total Quotations",
    "table_name": "tb_statistics_user",
    "sql_query": "SELECT COUNT(quot_cnt) FROM tb_statistics_user WHERE quot_cnt IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:01.833424"
  },
  {
    "kpi_name": "Total POs",
    "table_name": "tb_statistics_user",
    "sql_query": "SELECT COUNT(po_cnt) FROM tb_statistics_user WHERE po_cnt IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:03.600466"
  },
  {
    "kpi_name": "Total Transaction Amount",
    "table_name": "tb_statistics_user",
    "sql_query": "SELECT SUM(cu_amount) FROM tb_statistics_user WHERE cu_amount IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:05.610740"
  },
  {
    "kpi_name": "Total Partners Redealed",
    "table_name": "tb_statistics_user",
    "sql_query": "SELECT COUNT(partner_redeal_cnt) FROM tb_statistics_user WHERE partner_redeal_cnt IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:07.472636"
  },
  {
    "kpi_name": "Total Chats",
    "table_name": "tb_statistics_user",
    "sql_query": "SELECT COUNT(chat_cnt) FROM tb_statistics_user WHERE chat_cnt IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:09.163014"
  },
  {
    "kpi_name": "Total Points Saved",
    "table_name": "tb_statistics_user",
    "sql_query": "SELECT SUM(point_save_amount) FROM tb_statistics_user WHERE point_save_amount IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:10.771992"
  },
  {
    "kpi_name": "Total Points Used",
    "table_name": "tb_statistics_user",
    "sql_query": "SELECT SUM(point_use_amount) FROM tb_statistics_user WHERE point_use_amount IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:12.507227"
  },
  {
    "kpi_name": "Total Deals Completed",
    "table_name": "tb_statistics_user",
    "sql_query": "SELECT COUNT(deal_complete_cnt) FROM tb_statistics_user WHERE deal_complete_cnt IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:14.129510"
  },
  {
    "kpi_name": "Average Consulting Rate",
    "table_name": "tb_statistics_user",
    "sql_query": "SELECT AVG(consulting_rate) FROM tb_statistics_user WHERE consulting_rate IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:15.565754"
  },
  {
    "kpi_name": "RFQ to Quotation Conversion Rate",
    "table_name": "tb_statistics_user",
    "sql_query": "SELECT (COUNT(quot_cnt)*1.0/COUNT(rfq_cnt)) as conversion_rate FROM tb_statistics_user WHERE rfq_cnt IS NOT NULL AND quot_cnt IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:17.488067"
  },
  {
    "kpi_name": "Quotation to PO Conversion Rate",
    "table_name": "tb_statistics_user",
    "sql_query": "SELECT (COUNT(po_cnt)*1.0/COUNT(quot_cnt)) as conversion_rate FROM tb_statistics_user WHERE quot_cnt IS NOT NULL AND po_cnt IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:19.478484"
  },
  {
    "kpi_name": "PO to Deal Completion Conversion Rate",
    "table_name": "tb_statistics_user",
    "sql_query": "SELECT (COUNT(deal_complete_cnt)*1.0/COUNT(po_cnt)) as conversion_rate FROM tb_statistics_user WHERE po_cnt IS NOT NULL AND deal_complete_cnt IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:21.097324"
  },
  {
    "kpi_name": "Average RFQs per User",
    "table_name": "tb_statistics_user",
    "sql_query": "SELECT AVG(rfq_cnt) FROM tb_statistics_user WHERE rfq_cnt IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:22.541903"
  },
  {
    "kpi_name": "Average Quotations per User",
    "table_name": "tb_statistics_user",
    "sql_query": "SELECT AVG(quot_cnt) FROM tb_statistics_user WHERE quot_cnt IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:24.131700"
  },
  {
    "kpi_name": "Average POs per User",
    "table_name": "tb_statistics_user",
    "sql_query": "SELECT AVG(po_cnt) FROM tb_statistics_user WHERE po_cnt IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:25.901564"
  },
  {
    "kpi_name": "Average Transaction Amount per User",
    "table_name": "tb_statistics_user",
    "sql_query": "SELECT AVG(cu_amount) FROM tb_statistics_user WHERE cu_amount IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:27.563724"
  },
  {
    "kpi_name": "Average Chats per User",
    "table_name": "tb_statistics_user",
    "sql_query": "SELECT AVG(chat_cnt) FROM tb_statistics_user WHERE chat_cnt IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:28.767504"
  },
  {
    "kpi_name": "Average Points Saved per User",
    "table_name": "tb_statistics_user",
    "sql_query": "SELECT AVG(point_save_amount) FROM tb_statistics_user WHERE point_save_amount IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:29.988169"
  },
  {
    "kpi_name": "Average Points Used per User",
    "table_name": "tb_statistics_user",
    "sql_query": "SELECT AVG(point_use_amount) FROM tb_statistics_user WHERE point_use_amount IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:31.538368"
  },
  {
    "kpi_name": "Total Tax Invoices Issued",
    "table_name": "tb_payment_tax_invoice",
    "sql_query": "SELECT COUNT(*) FROM tb_payment_tax_invoice WHERE status IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:33.215292"
  },
  {
    "kpi_name": "Total Tax Invoices by Type",
    "table_name": "tb_payment_tax_invoice",
    "sql_query": "SELECT issue_type, COUNT(*) FROM tb_payment_tax_invoice WHERE issue_type IS NOT NULL GROUP BY issue_type",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:35.045105"
  },
  {
    "kpi_name": "Total Tax Invoices by Purpose",
    "table_name": "tb_payment_tax_invoice",
    "sql_query": "SELECT purpose_type, COUNT(*) FROM tb_payment_tax_invoice WHERE purpose_type IS NOT NULL GROUP BY purpose_type",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:37.881646"
  },
  {
    "kpi_name": "Total Tax Invoices by Tax Type",
    "table_name": "tb_payment_tax_invoice",
    "sql_query": "SELECT tax_type, COUNT(*) FROM tb_payment_tax_invoice WHERE tax_type IS NOT NULL GROUP BY tax_type",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:39.509785"
  },
  {
    "kpi_name": "Total Tax Invoices by Invoicee Type",
    "table_name": "tb_payment_tax_invoice",
    "sql_query": "SELECT invoicee_type, COUNT(*) FROM tb_payment_tax_invoice WHERE invoicee_type IS NOT NULL GROUP BY invoicee_type",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:40.877014"
  },
  {
    "kpi_name": "Total Tax Invoices by Status",
    "table_name": "tb_payment_tax_invoice",
    "sql_query": "SELECT status, COUNT(*) FROM tb_payment_tax_invoice WHERE status IS NOT NULL GROUP BY status",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:42.716721"
  },
  {
    "kpi_name": "Total Tax Invoices by Payment Service Type",
    "table_name": "tb_payment_tax_invoice",
    "sql_query": "SELECT payment_service_type_id, COUNT(*) FROM tb_payment_tax_invoice WHERE payment_service_type_id IS NOT NULL GROUP BY payment_service_type_id",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:44.530746"
  },
  {
    "kpi_name": "Total Tax Invoices by Creation Date",
    "table_name": "tb_payment_tax_invoice",
    "sql_query": "SELECT DATE(create_date), COUNT(*) FROM tb_payment_tax_invoice WHERE create_date IS NOT NULL GROUP BY DATE(create_date)",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:46.444780"
  },
  {
    "kpi_name": "Total Tax Invoices by Update Date",
    "table_name": "tb_payment_tax_invoice",
    "sql_query": "SELECT DATE(update_date), COUNT(*) FROM tb_payment_tax_invoice WHERE update_date IS NOT NULL GROUP BY DATE(update_date)",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:48.168746"
  },
  {
    "kpi_name": "Average Time Between Creation and Update",
    "table_name": "tb_payment_tax_invoice",
    "sql_query": "SELECT AVG(DATEDIFF(update_date, create_date)) FROM tb_payment_tax_invoice WHERE create_date IS NOT NULL AND update_date IS NOT NULL AND update_date > create_date",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:49.793105"
  },
  {
    "kpi_name": "Total Tax Invoices with NTS Confirmation",
    "table_name": "tb_payment_tax_invoice",
    "sql_query": "SELECT COUNT(*) FROM tb_payment_tax_invoice WHERE nts_confirm_num IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:51.362253"
  },
  {
    "kpi_name": "Total Tax Invoices without NTS Confirmation",
    "table_name": "tb_payment_tax_invoice",
    "sql_query": "SELECT COUNT(*) FROM tb_payment_tax_invoice WHERE nts_confirm_num IS NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:53.737508"
  },
  {
    "kpi_name": "Total Tax Invoices by Target ID",
    "table_name": "tb_payment_tax_invoice",
    "sql_query": "SELECT target_id, COUNT(*) FROM tb_payment_tax_invoice WHERE target_id IS NOT NULL GROUP BY target_id",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:55.626629"
  },
  {
    "kpi_name": "Total Tax Invoices by Tax Invoice ID",
    "table_name": "tb_payment_tax_invoice",
    "sql_query": "SELECT tax_invoice_id, COUNT(*) FROM tb_payment_tax_invoice WHERE tax_invoice_id IS NOT NULL GROUP BY tax_invoice_id",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:24:58.349797"
  },
  {
    "kpi_name": "Total Commission Earned",
    "table_name": "tb_oem_market_payment",
    "sql_query": "SELECT SUM(commission) FROM tb_oem_market_payment WHERE commission IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:25:00.494271"
  },
  {
    "kpi_name": "Total Payout to Partners",
    "table_name": "tb_oem_market_payment",
    "sql_query": "SELECT SUM(payout_amount_to_partner) FROM tb_oem_market_payment WHERE payout_amount_to_partner IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:25:02.353648"
  },
  {
    "kpi_name": "Total Payout to Capa",
    "table_name": "tb_oem_market_payment",
    "sql_query": "SELECT SUM(payout_amount_to_capa) FROM tb_oem_market_payment WHERE payout_amount_to_capa IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:25:04.423050"
  },
  {
    "kpi_name": "Total Deduction Amount",
    "table_name": "tb_oem_market_payment",
    "sql_query": "SELECT SUM(deduction_amount) FROM tb_oem_market_payment WHERE deduction_amount IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:25:06.461290"
  },
  {
    "kpi_name": "Average Commission per Order",
    "table_name": "tb_oem_market_payment",
    "sql_query": "SELECT AVG(commission) FROM tb_oem_market_payment WHERE commission IS NOT NULL AND order_id IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:25:07.950511"
  },
  {
    "kpi_name": "Number of Completed Payouts to Partners",
    "table_name": "tb_oem_market_payment",
    "sql_query": "SELECT COUNT(*) FROM tb_oem_market_payment WHERE is_payout_complete_to_partner = true",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:25:10.848456"
  },
  {
    "kpi_name": "Number of Completed Payouts to Capa",
    "table_name": "tb_oem_market_payment",
    "sql_query": "SELECT COUNT(*) FROM tb_oem_market_payment WHERE is_payout_complete_to_capa = true",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:25:13.325722"
  },
  {
    "kpi_name": "Average Payout Time to Partners",
    "table_name": "tb_oem_market_payment",
    "sql_query": "SELECT AVG(DATEDIFF(payout_date_to_partner, confirm_date)) FROM tb_oem_market_payment WHERE payout_date_to_partner IS NOT NULL AND confirm_date IS NOT NULL AND payout_date_to_partner > confirm_date",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:25:15.003641"
  },
  {
    "kpi_name": "Average Payout Time to Capa",
    "table_name": "tb_oem_market_payment",
    "sql_query": "SELECT AVG(DATEDIFF(payout_date_to_capa, confirm_date)) FROM tb_oem_market_payment WHERE payout_date_to_capa IS NOT NULL AND confirm_date IS NOT NULL AND payout_date_to_capa > confirm_date",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:25:16.387007"
  },
  {
    "kpi_name": "Number of Payments by Method",
    "table_name": "tb_oem_market_payment",
    "sql_query": "SELECT method_id, COUNT(*) FROM tb_oem_market_payment WHERE method_id IS NOT NULL GROUP BY method_id",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:25:18.032817"
  },
  {
    "kpi_name": "Number of Payments by Strategy Type",
    "table_name": "tb_oem_market_payment",
    "sql_query": "SELECT payment_strategy_type_id, COUNT(*) FROM tb_oem_market_payment WHERE payment_strategy_type_id IS NOT NULL GROUP BY payment_strategy_type_id",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:25:19.942542"
  },
  {
    "kpi_name": "Total Commission by Method",
    "table_name": "tb_oem_market_payment",
    "sql_query": "SELECT method_id, SUM(commission) FROM tb_oem_market_payment WHERE commission IS NOT NULL AND method_id IS NOT NULL GROUP BY method_id",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:25:21.919106"
  },
  {
    "kpi_name": "Total Commission by Strategy Type",
    "table_name": "tb_oem_market_payment",
    "sql_query": "SELECT payment_strategy_type_id, SUM(commission) FROM tb_oem_market_payment WHERE commission IS NOT NULL AND payment_strategy_type_id IS NOT NULL GROUP BY payment_strategy_type_id",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:25:23.991991"
  },
  {
    "kpi_name": "Average Payout to Partners by Method",
    "table_name": "tb_oem_market_payment",
    "sql_query": "SELECT method_id, AVG(payout_amount_to_partner) FROM tb_oem_market_payment WHERE payout_amount_to_partner IS NOT NULL AND method_id IS NOT NULL GROUP BY method_id",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:25:25.422022"
  },
  {
    "kpi_name": "Average Payout to Capa by Method",
    "table_name": "tb_oem_market_payment",
    "sql_query": "SELECT method_id, AVG(payout_amount_to_capa) FROM tb_oem_market_payment WHERE payout_amount_to_capa IS NOT NULL AND method_id IS NOT NULL GROUP BY method_id",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:25:27.382290"
  },
  {
    "kpi_name": "Total Orders",
    "table_name": "tb_market_order_address",
    "sql_query": "SELECT COUNT(order_id) FROM tb_market_order_address WHERE order_id IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:25:29.058469"
  },
  {
    "kpi_name": "Unique Receivers",
    "table_name": "tb_market_order_address",
    "sql_query": "SELECT COUNT(DISTINCT receiver) FROM tb_market_order_address WHERE receiver IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:25:30.828531"
  },
  {
    "kpi_name": "Unique Delivery Locations",
    "table_name": "tb_market_order_address",
    "sql_query": "SELECT COUNT(DISTINCT address) FROM tb_market_order_address WHERE address IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:25:35.339978"
  },
  {
    "kpi_name": "Unique Zipcodes",
    "table_name": "tb_market_order_address",
    "sql_query": "SELECT COUNT(DISTINCT zipcode) FROM tb_market_order_address WHERE zipcode IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:25:39.812898"
  },
  {
    "kpi_name": "Unique Delivery Names",
    "table_name": "tb_market_order_address",
    "sql_query": "SELECT COUNT(DISTINCT delivery_name) FROM tb_market_order_address WHERE delivery_name IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:25:45.334845"
  },
  {
    "kpi_name": "Unique Cellphone Numbers",
    "table_name": "tb_market_order_address",
    "sql_query": "SELECT COUNT(DISTINCT cellphone1) FROM tb_market_order_address WHERE cellphone1 IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:25:50.724597"
  },
  {
    "kpi_name": "Unique Receiver-Cellphone Combinations",
    "table_name": "tb_market_order_address",
    "sql_query": "SELECT COUNT(DISTINCT CONCAT(receiver, '_', cellphone1)) FROM tb_market_order_address WHERE receiver IS NOT NULL AND cellphone1 IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:25:56.241779"
  },
  {
    "kpi_name": "Unique Receiver-Delivery Name Combinations",
    "table_name": "tb_market_order_address",
    "sql_query": "SELECT COUNT(DISTINCT CONCAT(receiver, '_', delivery_name)) FROM tb_market_order_address WHERE receiver IS NOT NULL AND delivery_name IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:26:01.386765"
  },
  {
    "kpi_name": "Total RFQ Files",
    "table_name": "tb_rfq_file",
    "sql_query": "SELECT COUNT(*) FROM tb_rfq_file WHERE file_id IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:26:06.164022"
  },
  {
    "kpi_name": "Total Unique RFQs",
    "table_name": "tb_rfq_file",
    "sql_query": "SELECT COUNT(DISTINCT rfq_id) FROM tb_rfq_file WHERE rfq_id IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:26:08.512873"
  },
  {
    "kpi_name": "Average File Count per RFQ",
    "table_name": "tb_rfq_file",
    "sql_query": "SELECT AVG(cnt) FROM tb_rfq_file WHERE rfq_id IS NOT NULL AND cnt IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:26:09.951244"
  },
  {
    "kpi_name": "Total Processed Files",
    "table_name": "tb_rfq_file",
    "sql_query": "SELECT COUNT(*) FROM tb_rfq_file WHERE is_processed_file = TRUE",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:26:11.477951"
  },
  {
    "kpi_name": "RFQs by File Type",
    "table_name": "tb_rfq_file",
    "sql_query": "SELECT file_type, COUNT(DISTINCT rfq_id) FROM tb_rfq_file WHERE file_type IS NOT NULL AND rfq_id IS NOT NULL GROUP BY file_type",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:26:15.473453"
  },
  {
    "kpi_name": "Files Created Over Time",
    "table_name": "tb_rfq_file",
    "sql_query": "SELECT DATE(create_date) as date, COUNT(*) FROM tb_rfq_file WHERE create_date IS NOT NULL GROUP BY DATE(create_date) ORDER BY date",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:26:17.008562"
  },
  {
    "kpi_name": "RFQs with Post Processing",
    "table_name": "tb_rfq_file",
    "sql_query": "SELECT COUNT(DISTINCT rfq_id) FROM tb_rfq_file WHERE post_processing IS NOT NULL AND rfq_id IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:26:19.029210"
  },
  {
    "kpi_name": "Average File Count per Material Type",
    "table_name": "tb_rfq_file",
    "sql_query": "SELECT material_type_id, AVG(cnt) FROM tb_rfq_file WHERE material_type_id IS NOT NULL AND cnt IS NOT NULL GROUP BY material_type_id",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:26:20.489293"
  },
  {
    "kpi_name": "RFQs by Creation Date",
    "table_name": "tb_rfq_file",
    "sql_query": "SELECT DATE(create_date) as date, COUNT(DISTINCT rfq_id) FROM tb_rfq_file WHERE create_date IS NOT NULL AND rfq_id IS NOT NULL GROUP BY DATE(create_date) ORDER BY date",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:26:25.530538"
  },
  {
    "kpi_name": "RFQs with Post Processing Over Time",
    "table_name": "tb_rfq_file",
    "sql_query": "SELECT DATE(create_date) as date, COUNT(DISTINCT rfq_id) FROM tb_rfq_file WHERE create_date IS NOT NULL AND rfq_id IS NOT NULL AND post_processing IS NOT NULL GROUP BY DATE(create_date) ORDER BY date",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:26:30.739268"
  },
  {
    "kpi_name": "RFQs with Processed Files",
    "table_name": "tb_rfq_file",
    "sql_query": "SELECT COUNT(DISTINCT rfq_id) FROM tb_rfq_file WHERE is_processed_file = TRUE AND rfq_id IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:26:32.673734"
  },
  {
    "kpi_name": "Total Products",
    "table_name": "tb_partner_product",
    "sql_query": "SELECT COUNT(*) FROM tb_partner_product WHERE product_id IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:26:34.420978"
  },
  {
    "kpi_name": "Unique Partners",
    "table_name": "tb_partner_product",
    "sql_query": "SELECT COUNT(DISTINCT partner_id) FROM tb_partner_product WHERE partner_id IS NOT NULL",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:26:36.591213"
  },
  {
    "kpi_name": "New Products per Month",
    "table_name": "tb_partner_product",
    "sql_query": "SELECT DATE_TRUNC('month', create_date) as month, COUNT(*) FROM tb_partner_product WHERE create_date IS NOT NULL AND create_date > '1900-01-01' GROUP BY month",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:26:40.839524"
  },
  {
    "kpi_name": "New Partners per Month",
    "table_name": "tb_partner_product",
    "sql_query": "SELECT DATE_TRUNC('month', create_date) as month, COUNT(DISTINCT partner_id) FROM tb_partner_product WHERE create_date IS NOT NULL AND create_date > '1900-01-01' GROUP BY month",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:26:42.182595"
  },
  {
    "kpi_name": "Product Lifespan",
    "table_name": "tb_partner_product",
    "sql_query": "SELECT AVG(DATE_PART('day', CURRENT_DATE - create_date)) FROM tb_partner_product WHERE create_date IS NOT NULL AND create_date > '1900-01-01'",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:26:43.640865"
  },
  {
    "kpi_name": "Partner Lifespan",
    "table_name": "tb_partner_product",
    "sql_query": "SELECT AVG(DATE_PART('day', CURRENT_DATE - MIN(create_date))) FROM tb_partner_product WHERE partner_id IS NOT NULL AND create_date IS NOT NULL AND create_date > '1900-01-01' GROUP BY partner_id",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:26:46.203852"
  },
  {
    "kpi_name": "Most Popular Products",
    "table_name": "tb_partner_product",
    "sql_query": "SELECT product, COUNT(*) FROM tb_partner_product WHERE product IS NOT NULL GROUP BY product ORDER BY COUNT(*) DESC LIMIT 10",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:26:52.653556"
  },
  {
    "kpi_name": "Most Active Partners",
    "table_name": "tb_partner_product",
    "sql_query": "SELECT partner_id, COUNT(*) FROM tb_partner_product WHERE partner_id IS NOT NULL GROUP BY partner_id ORDER BY COUNT(*) DESC LIMIT 10",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:26:54.498452"
  },
  {
    "kpi_name": "Product Creation Trend",
    "table_name": "tb_partner_product",
    "sql_query": "SELECT DATE_TRUNC('month', create_date) as month, COUNT(*) FROM tb_partner_product WHERE create_date IS NOT NULL AND create_date > '1900-01-01' GROUP BY month ORDER BY month",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:26:55.924565"
  },
  {
    "kpi_name": "Partner Creation Trend",
    "table_name": "tb_partner_product",
    "sql_query": "SELECT DATE_TRUNC('month', create_date) as month, COUNT(DISTINCT partner_id) FROM tb_partner_product WHERE create_date IS NOT NULL AND create_date > '1900-01-01' GROUP BY month ORDER BY month",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:26:57.911671"
  },
  {
    "kpi_name": "Product Churn Rate",
    "table_name": "tb_partner_product",
    "sql_query": "SELECT COUNT(*) FROM tb_partner_product WHERE create_date IS NOT NULL AND create_date > '1900-01-01' AND create_date < DATE_TRUNC('year', CURRENT_DATE) - INTERVAL '1 year'",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:26:59.740763"
  },
  {
    "kpi_name": "Partner Churn Rate",
    "table_name": "tb_partner_product",
    "sql_query": "SELECT COUNT(DISTINCT partner_id) FROM tb_partner_product WHERE create_date IS NOT NULL AND create_date > '1900-01-01' AND create_date < DATE_TRUNC('year', CURRENT_DATE) - INTERVAL '1 year'",
    "issues": [],
    "status": "passed",
    "timestamp": "2025-08-25T00:27:01.354186"
  }
]