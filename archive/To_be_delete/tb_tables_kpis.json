{
  "tb_market_order": {
    "table_info": {
      "name": "tb_market_order",
      "description": "마켓 주문서",
      "total_fields": 19,
      "fields_used": 19,
      "foreign_keys": 3,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "order_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/PK"
      },
      {
        "name": "user_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 218,
          "target_field": "user_id",
          "relationship": "FK to user_id"
        }
      },
      {
        "name": "status",
        "type": "type/Integer",
        "description": "1: 구매문의 / 2: 견적완료 / 3: 견적만료 / 4: 결제완료 / 5: 입금대기(무통장) / 6: 결제취소 / 7: 배송",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 90,
          "target_field": "market_order_status_type_id",
          "relationship": "FK to market_order_status_type_id"
        }
      },
      {
        "name": "payment_total",
        "type": "type/BigInteger",
        "description": "결제 예정 금액 -> 총 금액 (견적금액 + 배송비)",
        "semantic_type": null
      },
      {
        "name": "create_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "구매문의 일자",
        "semantic_type": "type/CreationTimestamp"
      },
      {
        "name": "quotation_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "견적완료 일자",
        "semantic_type": null
      },
      {
        "name": "purchase_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "주문완료 일자",
        "semantic_type": null
      },
      {
        "name": "update_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "No description",
        "semantic_type": "type/UpdatedTimestamp"
      },
      {
        "name": "total_shipping_cost",
        "type": "type/Integer",
        "description": "배송비 합계 (각 판매자 배송비 총합)",
        "semantic_type": "type/Cost"
      },
      {
        "name": "is_issued_tax_invoice",
        "type": "type/Boolean",
        "description": "세금계산서 발행 여부",
        "semantic_type": null
      },
      {
        "name": "expiration_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "만료일자 (quotation_date + 7일)",
        "semantic_type": null
      },
      {
        "name": "sub_total",
        "type": "type/BigInteger",
        "description": "상품 합계 (배송비를 제외한 금액)",
        "semantic_type": null
      },
      {
        "name": "paid_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "결제완료일자 (입금완료일자 포함)",
        "semantic_type": null
      },
      {
        "name": "add_info",
        "type": "type/JSON",
        "description": "추가 정보",
        "semantic_type": "type/SerializedJSON"
      },
      {
        "name": "is_issued_cash_receipt",
        "type": "type/Boolean",
        "description": "현금영수증 발행여부",
        "semantic_type": null
      },
      {
        "name": "is_test",
        "type": "type/Boolean",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "partner_id",
        "type": "type/Integer",
        "description": "주문할때 당시 partner_id",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 68,
          "target_field": "partner_id",
          "relationship": "FK to partner_id"
        }
      },
      {
        "name": "order_type",
        "type": "type/Text",
        "description": "'바로구매' or '구매문의'",
        "semantic_type": "type/Category"
      },
      {
        "name": "unique_order_name",
        "type": "type/Text",
        "description": "고유주문번호",
        "semantic_type": "type/Category"
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total Orders",
        "description": "Total number of orders placed",
        "business_value": "Understand the volume of business",
        "sql_query": "SELECT COUNT(order_id) FROM tb_market_order WHERE order_id IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_market_order"
      },
      {
        "kpi_name": "Total Sales",
        "description": "Total sales value",
        "business_value": "Understand the total revenue generated",
        "sql_query": "SELECT SUM(payment_total) FROM tb_market_order WHERE payment_total IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_market_order"
      },
      {
        "kpi_name": "Average Order Value",
        "description": "Average value of an order",
        "business_value": "Understand the average revenue per order",
        "sql_query": "SELECT AVG(payment_total) FROM tb_market_order WHERE payment_total IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_market_order"
      },
      {
        "kpi_name": "Total Shipping Cost",
        "description": "Total cost of shipping",
        "business_value": "Understand the total cost of shipping",
        "sql_query": "SELECT SUM(total_shipping_cost) FROM tb_market_order WHERE total_shipping_cost IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_market_order"
      },
      {
        "kpi_name": "Average Shipping Cost per Order",
        "description": "Average shipping cost per order",
        "business_value": "Understand the average cost of shipping per order",
        "sql_query": "SELECT AVG(total_shipping_cost) FROM tb_market_order WHERE total_shipping_cost IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_market_order"
      },
      {
        "kpi_name": "Total Tax Invoices Issued",
        "description": "Total number of tax invoices issued",
        "business_value": "Understand the total number of tax invoices issued",
        "sql_query": "SELECT COUNT(order_id) FROM tb_market_order WHERE is_issued_tax_invoice = TRUE",
        "output_format": "Single integer value",
        "table_name": "tb_market_order"
      },
      {
        "kpi_name": "Total Cash Receipts Issued",
        "description": "Total number of cash receipts issued",
        "business_value": "Understand the total number of cash receipts issued",
        "sql_query": "SELECT COUNT(order_id) FROM tb_market_order WHERE is_issued_cash_receipt = TRUE",
        "output_format": "Single integer value",
        "table_name": "tb_market_order"
      },
      {
        "kpi_name": "Total Orders by Status",
        "description": "Total number of orders by status",
        "business_value": "Understand the distribution of orders by status",
        "sql_query": "SELECT status, COUNT(order_id) FROM tb_market_order WHERE status IS NOT NULL GROUP BY status",
        "output_format": "List of status with corresponding count",
        "table_name": "tb_market_order"
      },
      {
        "kpi_name": "Total Orders by Partner",
        "description": "Total number of orders by partner",
        "business_value": "Understand the distribution of orders by partner",
        "sql_query": "SELECT partner_id, COUNT(order_id) FROM tb_market_order WHERE partner_id IS NOT NULL GROUP BY partner_id",
        "output_format": "List of partners with corresponding count",
        "table_name": "tb_market_order"
      },
      {
        "kpi_name": "Total Orders by User",
        "description": "Total number of orders by user",
        "business_value": "Understand the distribution of orders by user",
        "sql_query": "SELECT user_id, COUNT(order_id) FROM tb_market_order WHERE user_id IS NOT NULL GROUP BY user_id",
        "output_format": "List of users with corresponding count",
        "table_name": "tb_market_order"
      },
      {
        "kpi_name": "Total Sales by User",
        "description": "Total sales value by user",
        "business_value": "Understand the distribution of sales by user",
        "sql_query": "SELECT user_id, SUM(payment_total) FROM tb_market_order WHERE user_id IS NOT NULL AND payment_total IS NOT NULL GROUP BY user_id",
        "output_format": "List of users with corresponding total sales",
        "table_name": "tb_market_order"
      },
      {
        "kpi_name": "Total Sales by Partner",
        "description": "Total sales value by partner",
        "business_value": "Understand the distribution of sales by partner",
        "sql_query": "SELECT partner_id, SUM(payment_total) FROM tb_market_order WHERE partner_id IS NOT NULL AND payment_total IS NOT NULL GROUP BY partner_id",
        "output_format": "List of partners with corresponding total sales",
        "table_name": "tb_market_order"
      },
      {
        "kpi_name": "Total Sales by Status",
        "description": "Total sales value by status",
        "business_value": "Understand the distribution of sales by status",
        "sql_query": "SELECT status, SUM(payment_total) FROM tb_market_order WHERE status IS NOT NULL AND payment_total IS NOT NULL GROUP BY status",
        "output_format": "List of status with corresponding total sales",
        "table_name": "tb_market_order"
      },
      {
        "kpi_name": "Average Order Value by User",
        "description": "Average order value by user",
        "business_value": "Understand the average order value by user",
        "sql_query": "SELECT user_id, AVG(payment_total) FROM tb_market_order WHERE user_id IS NOT NULL AND payment_total IS NOT NULL GROUP BY user_id",
        "output_format": "List of users with corresponding average order value",
        "table_name": "tb_market_order"
      },
      {
        "kpi_name": "Average Order Value by Partner",
        "description": "Average order value by partner",
        "business_value": "Understand the average order value by partner",
        "sql_query": "SELECT partner_id, AVG(payment_total) FROM tb_market_order WHERE partner_id IS NOT NULL AND payment_total IS NOT NULL GROUP BY partner_id",
        "output_format": "List of partners with corresponding average order value",
        "table_name": "tb_market_order"
      },
      {
        "kpi_name": "Average Order Value by Status",
        "description": "Average order value by status",
        "business_value": "Understand the average order value by status",
        "sql_query": "SELECT status, AVG(payment_total) FROM tb_market_order WHERE status IS NOT NULL AND payment_total IS NOT NULL GROUP BY status",
        "output_format": "List of status with corresponding average order value",
        "table_name": "tb_market_order"
      },
      {
        "kpi_name": "Total Orders by Order Type",
        "description": "Total number of orders by order type",
        "business_value": "Understand the distribution of orders by order type",
        "sql_query": "SELECT order_type, COUNT(order_id) FROM tb_market_order WHERE order_type IS NOT NULL GROUP BY order_type",
        "output_format": "List of order types with corresponding count",
        "table_name": "tb_market_order"
      },
      {
        "kpi_name": "Total Sales by Order Type",
        "description": "Total sales value by order type",
        "business_value": "Understand the distribution of sales by order type",
        "sql_query": "SELECT order_type, SUM(payment_total) FROM tb_market_order WHERE order_type IS NOT NULL AND payment_total IS NOT NULL GROUP BY order_type",
        "output_format": "List of order types with corresponding total sales",
        "table_name": "tb_market_order"
      },
      {
        "kpi_name": "Average Order Value by Order Type",
        "description": "Average order value by order type",
        "business_value": "Understand the average order value by order type",
        "sql_query": "SELECT order_type, AVG(payment_total) FROM tb_market_order WHERE order_type IS NOT NULL AND payment_total IS NOT NULL GROUP BY order_type",
        "output_format": "List of order types with corresponding average order value",
        "table_name": "tb_market_order"
      },
      {
        "kpi_name": "Total Test Orders",
        "description": "Total number of test orders",
        "business_value": "Understand the volume of test orders",
        "sql_query": "SELECT COUNT(order_id) FROM tb_market_order WHERE is_test = TRUE",
        "output_format": "Single integer value",
        "table_name": "tb_market_order"
      }
    ],
    "join_analysis": {
      "total_kpis": 20,
      "kpis_with_joins": 0,
      "join_percentage": 0.0
    }
  },
  "tb_user": {
    "table_info": {
      "name": "tb_user",
      "description": null,
      "total_fields": 2,
      "fields_used": 2,
      "foreign_keys": 0,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "log_date",
        "type": "type/Date",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "user_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": null
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total Users",
        "description": "Total number of users",
        "business_value": "Understand the size of the user base",
        "sql_query": "SELECT COUNT(DISTINCT user_id) FROM tb_user WHERE user_id IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_user"
      },
      {
        "kpi_name": "Daily Active Users",
        "description": "Number of users active on a given day",
        "business_value": "Measure daily user engagement",
        "sql_query": "SELECT log_date, COUNT(DISTINCT user_id) FROM tb_user WHERE log_date IS NOT NULL AND user_id IS NOT NULL GROUP BY log_date",
        "output_format": "Date and corresponding user count",
        "table_name": "tb_user"
      },
      {
        "kpi_name": "Monthly Active Users",
        "description": "Number of users active in a given month",
        "business_value": "Measure monthly user engagement",
        "sql_query": "SELECT DATE_TRUNC('month', log_date) AS month, COUNT(DISTINCT user_id) FROM tb_user WHERE log_date IS NOT NULL AND user_id IS NOT NULL GROUP BY month",
        "output_format": "Month and corresponding user count",
        "table_name": "tb_user"
      },
      {
        "kpi_name": "Yearly Active Users",
        "description": "Number of users active in a given year",
        "business_value": "Measure yearly user engagement",
        "sql_query": "SELECT DATE_TRUNC('year', log_date) AS year, COUNT(DISTINCT user_id) FROM tb_user WHERE log_date IS NOT NULL AND user_id IS NOT NULL GROUP BY year",
        "output_format": "Year and corresponding user count",
        "table_name": "tb_user"
      },
      {
        "kpi_name": "User Growth Rate",
        "description": "Rate at which new users are added",
        "business_value": "Measure the growth of the user base",
        "sql_query": "SELECT DATE_TRUNC('month', log_date) AS month, COUNT(DISTINCT user_id) - LAG(COUNT(DISTINCT user_id), 1) OVER (ORDER BY month) AS growth_rate FROM tb_user WHERE log_date IS NOT NULL AND user_id IS NOT NULL GROUP BY month",
        "output_format": "Month and corresponding growth rate",
        "table_name": "tb_user"
      },
      {
        "kpi_name": "User Churn Rate",
        "description": "Rate at which users become inactive",
        "business_value": "Measure user retention",
        "sql_query": "SELECT DATE_TRUNC('month', log_date) AS month, COUNT(DISTINCT user_id) - LEAD(COUNT(DISTINCT user_id), 1) OVER (ORDER BY month) AS churn_rate FROM tb_user WHERE log_date IS NOT NULL AND user_id IS NOT NULL GROUP BY month",
        "output_format": "Month and corresponding churn rate",
        "table_name": "tb_user"
      },
      {
        "kpi_name": "User Retention Rate",
        "description": "Rate at which users remain active",
        "business_value": "Measure user loyalty",
        "sql_query": "SELECT DATE_TRUNC('month', log_date) AS month, COUNT(DISTINCT user_id) / LAG(COUNT(DISTINCT user_id), 1) OVER (ORDER BY month) AS retention_rate FROM tb_user WHERE log_date IS NOT NULL AND user_id IS NOT NULL GROUP BY month",
        "output_format": "Month and corresponding retention rate",
        "table_name": "tb_user"
      },
      {
        "kpi_name": "User Engagement Rate",
        "description": "Rate at which users are active",
        "business_value": "Measure user activity",
        "sql_query": "SELECT DATE_TRUNC('month', log_date) AS month, COUNT(DISTINCT user_id) / (SELECT COUNT(DISTINCT user_id) FROM tb_user WHERE user_id IS NOT NULL) AS engagement_rate FROM tb_user WHERE log_date IS NOT NULL AND user_id IS NOT NULL GROUP BY month",
        "output_format": "Month and corresponding engagement rate",
        "table_name": "tb_user"
      },
      {
        "kpi_name": "Average User Activity per Day",
        "description": "Average number of activities per user per day",
        "business_value": "Measure user activity intensity",
        "sql_query": "SELECT log_date, COUNT(*) / COUNT(DISTINCT user_id) AS avg_activity FROM tb_user WHERE log_date IS NOT NULL AND user_id IS NOT NULL GROUP BY log_date",
        "output_format": "Date and corresponding average activity",
        "table_name": "tb_user"
      },
      {
        "kpi_name": "Average User Activity per Month",
        "description": "Average number of activities per user per month",
        "business_value": "Measure user activity intensity on a monthly basis",
        "sql_query": "SELECT DATE_TRUNC('month', log_date) AS month, COUNT(*) / COUNT(DISTINCT user_id) AS avg_activity FROM tb_user WHERE log_date IS NOT NULL AND user_id IS NOT NULL GROUP BY month",
        "output_format": "Month and corresponding average activity",
        "table_name": "tb_user"
      },
      {
        "kpi_name": "Average User Activity per Year",
        "description": "Average number of activities per user per year",
        "business_value": "Measure user activity intensity on a yearly basis",
        "sql_query": "SELECT DATE_TRUNC('year', log_date) AS year, COUNT(*) / COUNT(DISTINCT user_id) AS avg_activity FROM tb_user WHERE log_date IS NOT NULL AND user_id IS NOT NULL GROUP BY year",
        "output_format": "Year and corresponding average activity",
        "table_name": "tb_user"
      },
      {
        "kpi_name": "Peak User Activity Day",
        "description": "Day with the highest user activity",
        "business_value": "Identify peak usage times",
        "sql_query": "SELECT log_date, COUNT(*) AS activity FROM tb_user WHERE log_date IS NOT NULL AND user_id IS NOT NULL GROUP BY log_date ORDER BY activity DESC LIMIT 1",
        "output_format": "Date and corresponding activity count",
        "table_name": "tb_user"
      },
      {
        "kpi_name": "Peak User Activity Month",
        "description": "Month with the highest user activity",
        "business_value": "Identify peak usage periods",
        "sql_query": "SELECT DATE_TRUNC('month', log_date) AS month, COUNT(*) AS activity FROM tb_user WHERE log_date IS NOT NULL AND user_id IS NOT NULL GROUP BY month ORDER BY activity DESC LIMIT 1",
        "output_format": "Month and corresponding activity count",
        "table_name": "tb_user"
      },
      {
        "kpi_name": "Peak User Activity Year",
        "description": "Year with the highest user activity",
        "business_value": "Identify peak usage years",
        "sql_query": "SELECT DATE_TRUNC('year', log_date) AS year, COUNT(*) AS activity FROM tb_user WHERE log_date IS NOT NULL AND user_id IS NOT NULL GROUP BY year ORDER BY activity DESC LIMIT 1",
        "output_format": "Year and corresponding activity count",
        "table_name": "tb_user"
      },
      {
        "kpi_name": "User Activity Trend",
        "description": "Trend of user activity over time",
        "business_value": "Understand user activity patterns",
        "sql_query": "SELECT DATE_TRUNC('month', log_date) AS month, COUNT(*) AS activity FROM tb_user WHERE log_date IS NOT NULL AND user_id IS NOT NULL GROUP BY month ORDER BY month",
        "output_format": "Month and corresponding activity count",
        "table_name": "tb_user"
      }
    ],
    "join_analysis": {
      "total_kpis": 15,
      "kpis_with_joins": 0,
      "join_percentage": 0.0
    }
  },
  "tb_payment": {
    "table_info": {
      "name": "tb_payment",
      "description": "결제 - ollie",
      "total_fields": 43,
      "fields_used": 20,
      "foreign_keys": 9,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "card_info → card_code",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "card_info → card_name",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "card_info → card_number",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "card_info → card_quota",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "card_info → card_type",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "payment_id",
        "type": "type/Integer",
        "description": "결제 - ollie",
        "semantic_type": "type/PK"
      },
      {
        "name": "transaction_id",
        "type": "type/Text",
        "description": "나이스페이 주문번호",
        "semantic_type": null
      },
      {
        "name": "imp_uid",
        "type": "type/Text",
        "description": "아임포트 주문번호",
        "semantic_type": null
      },
      {
        "name": "user_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 218,
          "target_field": "user_id",
          "relationship": "FK to user_id"
        }
      },
      {
        "name": "partner_user_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 305,
          "target_field": "partner_id",
          "relationship": "FK to partner_id"
        }
      },
      {
        "name": "partner_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 305,
          "target_field": "partner_user_id",
          "relationship": "FK to partner_user_id"
        }
      },
      {
        "name": "rfq_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 172,
          "target_field": "rfq_id",
          "relationship": "FK to rfq_id"
        }
      },
      {
        "name": "quotation_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 341,
          "target_field": "quotation_id",
          "relationship": "FK to quotation_id"
        }
      },
      {
        "name": "purchase_order_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 294,
          "target_field": "purchase_order_id",
          "relationship": "FK to purchase_order_id"
        }
      },
      {
        "name": "chatroom_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 45,
          "target_field": "chatroom_id",
          "relationship": "FK to chatroom_id"
        }
      },
      {
        "name": "card_info",
        "type": "type/JSON",
        "description": "{\"cardCode\": \"381\", \"cardName\": \"국민KB카드\", \"cardType\": 1, \"cardQuota\": 0, \"cardNumber\": \"52728925****9280\"}",
        "semantic_type": "type/SerializedJSON"
      },
      {
        "name": "virtual_account_id",
        "type": "type/Integer",
        "description": "가상계좌",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 92,
          "target_field": "bank_account_id",
          "relationship": "FK to bank_account_id"
        }
      },
      {
        "name": "total_amount",
        "type": "type/BigInteger",
        "description": "tb_quotation (cost) -> 고객이 결제한 총 금액",
        "semantic_type": null
      },
      {
        "name": "commission",
        "type": "type/BigInteger",
        "description": "캐파 결제관리 수수료 (구간별 결제 수수료 총합) - https://www.notion.so/ateamventures/220223-90daf50e12ad485a92b3c3b0fc7c3f58?pvs=4",
        "semantic_type": null
      },
      {
        "name": "delivery_cost",
        "type": "type/BigInteger",
        "description": "No description",
        "semantic_type": "type/Cost"
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total Transactions",
        "description": "Total number of transactions",
        "business_value": "Overall transaction volume",
        "sql_query": "SELECT COUNT(*) FROM tb_payment WHERE transaction_id IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_payment"
      },
      {
        "kpi_name": "Total Revenue",
        "description": "Total revenue from all transactions",
        "business_value": "Overall business revenue",
        "sql_query": "SELECT SUM(total_amount) FROM tb_payment WHERE total_amount IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_payment"
      },
      {
        "kpi_name": "Average Transaction Value",
        "description": "Average value of transactions",
        "business_value": "Average revenue per transaction",
        "sql_query": "SELECT AVG(total_amount) FROM tb_payment WHERE total_amount IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_payment"
      },
      {
        "kpi_name": "Total Commission",
        "description": "Total commission from all transactions",
        "business_value": "Overall business commission",
        "sql_query": "SELECT SUM(commission) FROM tb_payment WHERE commission IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_payment"
      },
      {
        "kpi_name": "Average Commission per Transaction",
        "description": "Average commission per transaction",
        "business_value": "Average commission per transaction",
        "sql_query": "SELECT AVG(commission) FROM tb_payment WHERE commission IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_payment"
      },
      {
        "kpi_name": "Total Delivery Cost",
        "description": "Total delivery cost for all transactions",
        "business_value": "Overall business delivery cost",
        "sql_query": "SELECT SUM(delivery_cost) FROM tb_payment WHERE delivery_cost IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_payment"
      },
      {
        "kpi_name": "Average Delivery Cost per Transaction",
        "description": "Average delivery cost per transaction",
        "business_value": "Average delivery cost per transaction",
        "sql_query": "SELECT AVG(delivery_cost) FROM tb_payment WHERE delivery_cost IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_payment"
      },
      {
        "kpi_name": "Total Users",
        "description": "Total number of users who made transactions",
        "business_value": "Overall user count",
        "sql_query": "SELECT COUNT(DISTINCT user_id) FROM tb_payment WHERE user_id IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_payment"
      },
      {
        "kpi_name": "Total Partners",
        "description": "Total number of partners involved in transactions",
        "business_value": "Overall partner count",
        "sql_query": "SELECT COUNT(DISTINCT partner_id) FROM tb_payment WHERE partner_id IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_payment"
      },
      {
        "kpi_name": "Average Transactions per User",
        "description": "Average number of transactions per user",
        "business_value": "User transaction frequency",
        "sql_query": "SELECT COUNT(*)/COUNT(DISTINCT user_id) FROM tb_payment WHERE user_id IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_payment"
      },
      {
        "kpi_name": "Average Transactions per Partner",
        "description": "Average number of transactions per partner",
        "business_value": "Partner transaction frequency",
        "sql_query": "SELECT COUNT(*)/COUNT(DISTINCT partner_id) FROM tb_payment WHERE partner_id IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_payment"
      },
      {
        "kpi_name": "Total Unique Cards Used",
        "description": "Total number of unique cards used for transactions",
        "business_value": "Card diversity",
        "sql_query": "SELECT COUNT(DISTINCT card_info ->> 'card_number') FROM tb_payment WHERE card_info ->> 'card_number' IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_payment"
      },
      {
        "kpi_name": "Most Used Card",
        "description": "Most used card for transactions",
        "business_value": "Most popular card",
        "sql_query": "SELECT card_info ->> 'card_number' FROM tb_payment GROUP BY card_info ->> 'card_number' ORDER BY COUNT(*) DESC LIMIT 1",
        "output_format": "Single string value",
        "table_name": "tb_payment"
      },
      {
        "kpi_name": "Least Used Card",
        "description": "Least used card for transactions",
        "business_value": "Least popular card",
        "sql_query": "SELECT card_info ->> 'card_number' FROM tb_payment GROUP BY card_info ->> 'card_number' ORDER BY COUNT(*) ASC LIMIT 1",
        "output_format": "Single string value",
        "table_name": "tb_payment"
      },
      {
        "kpi_name": "Average Card Quota",
        "description": "Average quota of cards used for transactions",
        "business_value": "Average card quota",
        "sql_query": "SELECT AVG(card_info ->> 'card_quota')::integer FROM tb_payment WHERE card_info ->> 'card_quota' IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_payment"
      },
      {
        "kpi_name": "Most Common Card Type",
        "description": "Most common type of card used for transactions",
        "business_value": "Most common card type",
        "sql_query": "SELECT card_info ->> 'card_type' FROM tb_payment GROUP BY card_info ->> 'card_type' ORDER BY COUNT(*) DESC LIMIT 1",
        "output_format": "Single string value",
        "table_name": "tb_payment"
      },
      {
        "kpi_name": "Least Common Card Type",
        "description": "Least common type of card used for transactions",
        "business_value": "Least common card type",
        "sql_query": "SELECT card_info ->> 'card_type' FROM tb_payment GROUP BY card_info ->> 'card_type' ORDER BY COUNT(*) ASC LIMIT 1",
        "output_format": "Single string value",
        "table_name": "tb_payment"
      },
      {
        "kpi_name": "Total Virtual Accounts Used",
        "description": "Total number of virtual accounts used for transactions",
        "business_value": "Virtual account usage",
        "sql_query": "SELECT COUNT(DISTINCT virtual_account_id) FROM tb_payment WHERE virtual_account_id IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_payment"
      },
      {
        "kpi_name": "Average Transactions per Virtual Account",
        "description": "Average number of transactions per virtual account",
        "business_value": "Virtual account transaction frequency",
        "sql_query": "SELECT COUNT(*)/COUNT(DISTINCT virtual_account_id) FROM tb_payment WHERE virtual_account_id IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_payment"
      },
      {
        "kpi_name": "Total Chatrooms Involved",
        "description": "Total number of chatrooms involved in transactions",
        "business_value": "Chatroom involvement",
        "sql_query": "SELECT COUNT(DISTINCT chatroom_id) FROM tb_payment WHERE chatroom_id IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_payment"
      }
    ],
    "join_analysis": {
      "total_kpis": 20,
      "kpis_with_joins": 0,
      "join_percentage": 0.0
    }
  },
  "tb_market_order_detail": {
    "table_info": {
      "name": "tb_market_order_detail",
      "description": "상품 주문 관계 테이블 (주문에 포함된 상품 리스트)",
      "total_fields": 9,
      "fields_used": 9,
      "foreign_keys": 4,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "product_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 378,
          "target_field": "product_id",
          "relationship": "FK to product_id"
        }
      },
      {
        "name": "order_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 237,
          "target_field": "order_id",
          "relationship": "FK to order_id"
        }
      },
      {
        "name": "unit_price",
        "type": "type/Integer",
        "description": "단가",
        "semantic_type": null
      },
      {
        "name": "cnt",
        "type": "type/Integer",
        "description": "수량",
        "semantic_type": null
      },
      {
        "name": "item_total_price",
        "type": "type/Integer",
        "description": "금액 (수량 * 단가)",
        "semantic_type": null
      },
      {
        "name": "create_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "No description",
        "semantic_type": "type/CreationTimestamp"
      },
      {
        "name": "shipping_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 70,
          "target_field": "shipping_id",
          "relationship": "FK to shipping_id"
        }
      },
      {
        "name": "attribute_id",
        "type": "type/Integer",
        "description": "주문 옵션 속성 id (like 포장방식) ",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 185,
          "target_field": "attribute_id",
          "relationship": "FK to attribute_id"
        }
      },
      {
        "name": "order_item_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/PK"
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total Sales",
        "description": "Total sales revenue",
        "business_value": "Overall income from sales",
        "sql_query": "SELECT SUM(item_total_price) FROM tb_market_order_detail WHERE item_total_price IS NOT NULL",
        "output_format": "Total revenue",
        "table_name": "tb_market_order_detail"
      },
      {
        "kpi_name": "Average Sales Price",
        "description": "Average sales price per product",
        "business_value": "Insight into the average income per product sold",
        "sql_query": "SELECT AVG(unit_price) FROM tb_market_order_detail WHERE unit_price IS NOT NULL",
        "output_format": "Average price",
        "table_name": "tb_market_order_detail"
      },
      {
        "kpi_name": "Total Units Sold",
        "description": "Total number of units sold",
        "business_value": "Insight into the volume of sales",
        "sql_query": "SELECT SUM(cnt) FROM tb_market_order_detail WHERE cnt IS NOT NULL",
        "output_format": "Total units",
        "table_name": "tb_market_order_detail"
      },
      {
        "kpi_name": "Average Units per Order",
        "description": "Average number of units per order",
        "business_value": "Insight into the average order size",
        "sql_query": "SELECT AVG(cnt) FROM tb_market_order_detail WHERE cnt IS NOT NULL",
        "output_format": "Average units per order",
        "table_name": "tb_market_order_detail"
      },
      {
        "kpi_name": "Total Orders",
        "description": "Total number of orders",
        "business_value": "Insight into the volume of orders",
        "sql_query": "SELECT COUNT(DISTINCT order_id) FROM tb_market_order_detail WHERE order_id IS NOT NULL",
        "output_format": "Total orders",
        "table_name": "tb_market_order_detail"
      },
      {
        "kpi_name": "Total Products",
        "description": "Total number of unique products sold",
        "business_value": "Insight into the variety of products sold",
        "sql_query": "SELECT COUNT(DISTINCT product_id) FROM tb_market_order_detail WHERE product_id IS NOT NULL",
        "output_format": "Total unique products",
        "table_name": "tb_market_order_detail"
      },
      {
        "kpi_name": "Sales by Product",
        "description": "Total sales revenue by product",
        "business_value": "Insight into the revenue contribution of each product",
        "sql_query": "SELECT product_id, SUM(item_total_price) FROM tb_market_order_detail WHERE item_total_price IS NOT NULL GROUP BY product_id",
        "output_format": "Product ID and corresponding total revenue",
        "table_name": "tb_market_order_detail"
      },
      {
        "kpi_name": "Units Sold by Product",
        "description": "Total units sold by product",
        "business_value": "Insight into the volume contribution of each product",
        "sql_query": "SELECT product_id, SUM(cnt) FROM tb_market_order_detail WHERE cnt IS NOT NULL GROUP BY product_id",
        "output_format": "Product ID and corresponding total units",
        "table_name": "tb_market_order_detail"
      },
      {
        "kpi_name": "Sales by Order",
        "description": "Total sales revenue by order",
        "business_value": "Insight into the revenue contribution of each order",
        "sql_query": "SELECT order_id, SUM(item_total_price) FROM tb_market_order_detail WHERE item_total_price IS NOT NULL GROUP BY order_id",
        "output_format": "Order ID and corresponding total revenue",
        "table_name": "tb_market_order_detail"
      },
      {
        "kpi_name": "Units Sold by Order",
        "description": "Total units sold by order",
        "business_value": "Insight into the volume contribution of each order",
        "sql_query": "SELECT order_id, SUM(cnt) FROM tb_market_order_detail WHERE cnt IS NOT NULL GROUP BY order_id",
        "output_format": "Order ID and corresponding total units",
        "table_name": "tb_market_order_detail"
      },
      {
        "kpi_name": "Sales by Shipping Method",
        "description": "Total sales revenue by shipping method",
        "business_value": "Insight into the revenue contribution of each shipping method",
        "sql_query": "SELECT shipping_id, SUM(item_total_price) FROM tb_market_order_detail WHERE item_total_price IS NOT NULL GROUP BY shipping_id",
        "output_format": "Shipping ID and corresponding total revenue",
        "table_name": "tb_market_order_detail"
      },
      {
        "kpi_name": "Units Sold by Shipping Method",
        "description": "Total units sold by shipping method",
        "business_value": "Insight into the volume contribution of each shipping method",
        "sql_query": "SELECT shipping_id, SUM(cnt) FROM tb_market_order_detail WHERE cnt IS NOT NULL GROUP BY shipping_id",
        "output_format": "Shipping ID and corresponding total units",
        "table_name": "tb_market_order_detail"
      },
      {
        "kpi_name": "Sales by Attribute",
        "description": "Total sales revenue by attribute",
        "business_value": "Insight into the revenue contribution of each attribute",
        "sql_query": "SELECT attribute_id, SUM(item_total_price) FROM tb_market_order_detail WHERE item_total_price IS NOT NULL GROUP BY attribute_id",
        "output_format": "Attribute ID and corresponding total revenue",
        "table_name": "tb_market_order_detail"
      },
      {
        "kpi_name": "Units Sold by Attribute",
        "description": "Total units sold by attribute",
        "business_value": "Insight into the volume contribution of each attribute",
        "sql_query": "SELECT attribute_id, SUM(cnt) FROM tb_market_order_detail WHERE cnt IS NOT NULL GROUP BY attribute_id",
        "output_format": "Attribute ID and corresponding total units",
        "table_name": "tb_market_order_detail"
      },
      {
        "kpi_name": "Sales by Date",
        "description": "Total sales revenue by date",
        "business_value": "Insight into the revenue trend over time",
        "sql_query": "SELECT create_date, SUM(item_total_price) FROM tb_market_order_detail WHERE item_total_price IS NOT NULL AND create_date IS NOT NULL AND create_date > '1900-01-01' GROUP BY create_date",
        "output_format": "Date and corresponding total revenue",
        "table_name": "tb_market_order_detail"
      },
      {
        "kpi_name": "Units Sold by Date",
        "description": "Total units sold by date",
        "business_value": "Insight into the volume trend over time",
        "sql_query": "SELECT create_date, SUM(cnt) FROM tb_market_order_detail WHERE cnt IS NOT NULL AND create_date IS NOT NULL AND create_date > '1900-01-01' GROUP BY create_date",
        "output_format": "Date and corresponding total units",
        "table_name": "tb_market_order_detail"
      },
      {
        "kpi_name": "Average Sales Price by Date",
        "description": "Average sales price by date",
        "business_value": "Insight into the price trend over time",
        "sql_query": "SELECT create_date, AVG(unit_price) FROM tb_market_order_detail WHERE unit_price IS NOT NULL AND create_date IS NOT NULL AND create_date > '1900-01-01' GROUP BY create_date",
        "output_format": "Date and corresponding average price",
        "table_name": "tb_market_order_detail"
      },
      {
        "kpi_name": "Average Units per Order by Date",
        "description": "Average units per order by date",
        "business_value": "Insight into the order size trend over time",
        "sql_query": "SELECT create_date, AVG(cnt) FROM tb_market_order_detail WHERE cnt IS NOT NULL AND create_date IS NOT NULL AND create_date > '1900-01-01' GROUP BY create_date",
        "output_format": "Date and corresponding average units per order",
        "table_name": "tb_market_order_detail"
      },
      {
        "kpi_name": "Total Orders by Date",
        "description": "Total number of orders by date",
        "business_value": "Insight into the order volume trend over time",
        "sql_query": "SELECT create_date, COUNT(DISTINCT order_id) FROM tb_market_order_detail WHERE order_id IS NOT NULL AND create_date IS NOT NULL AND create_date > '1900-01-01' GROUP BY create_date",
        "output_format": "Date and corresponding total orders",
        "table_name": "tb_market_order_detail"
      },
      {
        "kpi_name": "Total Products by Date",
        "description": "Total number of unique products sold by date",
        "business_value": "Insight into the product variety trend over time",
        "sql_query": "SELECT create_date, COUNT(DISTINCT product_id) FROM tb_market_order_detail WHERE product_id IS NOT NULL AND create_date IS NOT NULL AND create_date > '1900-01-01' GROUP BY create_date",
        "output_format": "Date and corresponding total unique products",
        "table_name": "tb_market_order_detail"
      }
    ],
    "join_analysis": {
      "total_kpis": 20,
      "kpis_with_joins": 0,
      "join_percentage": 0.0
    }
  },
  "tb_market_order_log": {
    "table_info": {
      "name": "tb_market_order_log",
      "description": "마켓 주문 히스토리",
      "total_fields": 3,
      "fields_used": 3,
      "foreign_keys": 2,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "order_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 237,
          "target_field": "order_id",
          "relationship": "FK to order_id"
        }
      },
      {
        "name": "status",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 90,
          "target_field": "market_order_status_type_id",
          "relationship": "FK to market_order_status_type_id"
        }
      },
      {
        "name": "create_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "No description",
        "semantic_type": "type/CreationTimestamp"
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total Orders",
        "description": "Total number of orders",
        "business_value": "To understand the total volume of orders",
        "sql_query": "SELECT COUNT(order_id) FROM tb_market_order_log WHERE order_id IS NOT NULL",
        "output_format": "Single number representing total orders",
        "table_name": "tb_market_order_log"
      },
      {
        "kpi_name": "Total Unique Orders",
        "description": "Total number of unique orders",
        "business_value": "To understand the total unique orders",
        "sql_query": "SELECT COUNT(DISTINCT order_id) FROM tb_market_order_log WHERE order_id IS NOT NULL",
        "output_format": "Single number representing total unique orders",
        "table_name": "tb_market_order_log"
      },
      {
        "kpi_name": "Orders Per Day",
        "description": "Average number of orders per day",
        "business_value": "To understand the daily volume of orders",
        "sql_query": "SELECT COUNT(order_id)/COUNT(DISTINCT DATE(create_date)) FROM tb_market_order_log WHERE order_id IS NOT NULL AND create_date IS NOT NULL AND create_date > '1900-01-01'",
        "output_format": "Single number representing average orders per day",
        "table_name": "tb_market_order_log"
      },
      {
        "kpi_name": "Order Completion Rate",
        "description": "Percentage of orders that are completed",
        "business_value": "To understand the efficiency of the order completion process",
        "sql_query": "SELECT COUNT(CASE WHEN status = 'completed' THEN 1 END) / COUNT(*) FROM tb_market_order_log WHERE status IS NOT NULL",
        "output_format": "Percentage representing order completion rate",
        "table_name": "tb_market_order_log"
      },
      {
        "kpi_name": "Order Cancellation Rate",
        "description": "Percentage of orders that are cancelled",
        "business_value": "To understand the efficiency of the order process and customer satisfaction",
        "sql_query": "SELECT COUNT(CASE WHEN status = 'cancelled' THEN 1 END) / COUNT(*) FROM tb_market_order_log WHERE status IS NOT NULL",
        "output_format": "Percentage representing order cancellation rate",
        "table_name": "tb_market_order_log"
      },
      {
        "kpi_name": "Average Time to Complete Order",
        "description": "Average time taken to complete an order",
        "business_value": "To understand the efficiency of the order process",
        "sql_query": "SELECT AVG(DATEDIFF('second', create_date, completed_date)) FROM tb_market_order_log WHERE status = 'completed' AND create_date IS NOT NULL AND completed_date IS NOT NULL AND completed_date > create_date",
        "output_format": "Average time in seconds",
        "table_name": "tb_market_order_log"
      },
      {
        "kpi_name": "Average Time to Cancel Order",
        "description": "Average time taken to cancel an order",
        "business_value": "To understand the efficiency of the order process and customer satisfaction",
        "sql_query": "SELECT AVG(DATEDIFF('second', create_date, cancelled_date)) FROM tb_market_order_log WHERE status = 'cancelled' AND create_date IS NOT NULL AND cancelled_date IS NOT NULL AND cancelled_date > create_date",
        "output_format": "Average time in seconds",
        "table_name": "tb_market_order_log"
      },
      {
        "kpi_name": "Orders by Status",
        "description": "Number of orders by status",
        "business_value": "To understand the distribution of orders by status",
        "sql_query": "SELECT status, COUNT(order_id) FROM tb_market_order_log WHERE order_id IS NOT NULL AND status IS NOT NULL GROUP BY status",
        "output_format": "List of statuses with corresponding order counts",
        "table_name": "tb_market_order_log"
      },
      {
        "kpi_name": "Orders by Day of Week",
        "description": "Number of orders by day of week",
        "business_value": "To understand the distribution of orders by day of week",
        "sql_query": "SELECT DATE_PART('dow', create_date), COUNT(order_id) FROM tb_market_order_log WHERE order_id IS NOT NULL AND create_date IS NOT NULL AND create_date > '1900-01-01' GROUP BY DATE_PART('dow', create_date)",
        "output_format": "List of days of week with corresponding order counts",
        "table_name": "tb_market_order_log"
      },
      {
        "kpi_name": "Orders by Hour of Day",
        "description": "Number of orders by hour of day",
        "business_value": "To understand the distribution of orders by hour of day",
        "sql_query": "SELECT DATE_PART('hour', create_date), COUNT(order_id) FROM tb_market_order_log WHERE order_id IS NOT NULL AND create_date IS NOT NULL AND create_date > '1900-01-01' GROUP BY DATE_PART('hour', create_date)",
        "output_format": "List of hours with corresponding order counts",
        "table_name": "tb_market_order_log"
      },
      {
        "kpi_name": "Orders by Month",
        "description": "Number of orders by month",
        "business_value": "To understand the distribution of orders by month",
        "sql_query": "SELECT DATE_PART('month', create_date), COUNT(order_id) FROM tb_market_order_log WHERE order_id IS NOT NULL AND create_date IS NOT NULL AND create_date > '1900-01-01' GROUP BY DATE_PART('month', create_date)",
        "output_format": "List of months with corresponding order counts",
        "table_name": "tb_market_order_log"
      },
      {
        "kpi_name": "Orders by Year",
        "description": "Number of orders by year",
        "business_value": "To understand the distribution of orders by year",
        "sql_query": "SELECT DATE_PART('year', create_date), COUNT(order_id) FROM tb_market_order_log WHERE order_id IS NOT NULL AND create_date IS NOT NULL AND create_date > '1900-01-01' GROUP BY DATE_PART('year', create_date)",
        "output_format": "List of years with corresponding order counts",
        "table_name": "tb_market_order_log"
      },
      {
        "kpi_name": "Average Order Value",
        "description": "Average value of orders",
        "business_value": "To understand the average revenue per order",
        "sql_query": "SELECT AVG(order_value) FROM tb_market_order_log JOIN tb_order ON tb_market_order_log.order_id = tb_order.order_id WHERE tb_market_order_log.order_id IS NOT NULL AND tb_order.order_value IS NOT NULL",
        "output_format": "Average order value",
        "table_name": "tb_market_order_log"
      },
      {
        "kpi_name": "Total Order Value",
        "description": "Total value of orders",
        "business_value": "To understand the total revenue from orders",
        "sql_query": "SELECT SUM(order_value) FROM tb_market_order_log JOIN tb_order ON tb_market_order_log.order_id = tb_order.order_id WHERE tb_market_order_log.order_id IS NOT NULL AND tb_order.order_value IS NOT NULL",
        "output_format": "Total order value",
        "table_name": "tb_market_order_log"
      },
      {
        "kpi_name": "Order Value by Status",
        "description": "Total value of orders by status",
        "business_value": "To understand the revenue distribution by order status",
        "sql_query": "SELECT status, SUM(order_value) FROM tb_market_order_log JOIN tb_order ON tb_market_order_log.order_id = tb_order.order_id WHERE tb_market_order_log.order_id IS NOT NULL AND tb_order.order_value IS NOT NULL AND status IS NOT NULL GROUP BY status",
        "output_format": "List of statuses with corresponding total order values",
        "table_name": "tb_market_order_log"
      }
    ],
    "join_analysis": {
      "total_kpis": 15,
      "kpis_with_joins": 3,
      "join_percentage": 20.0
    }
  },
  "tb_payment_market": {
    "table_info": {
      "name": "tb_payment_market",
      "description": "마켓 결제",
      "total_fields": 19,
      "fields_used": 19,
      "foreign_keys": 3,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "payment_market_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/PK"
      },
      {
        "name": "tax_invoice_info → ein",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "tax_invoice_info → email",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "tax_invoice_info → partner_name",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "tax_invoice_info → user_name",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "payment_root_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 169,
          "target_field": "payment_root_id",
          "relationship": "FK to payment_root_id"
        }
      },
      {
        "name": "payment_strategy_type_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 98,
          "target_field": "strategy_type_id",
          "relationship": "FK to strategy_type_id"
        }
      },
      {
        "name": "order_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 237,
          "target_field": "order_id",
          "relationship": "FK to order_id"
        }
      },
      {
        "name": "payment_total",
        "type": "type/BigInteger",
        "description": "총 결제금액",
        "semantic_type": null
      },
      {
        "name": "shipping_cost",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/Cost"
      },
      {
        "name": "commission",
        "type": "type/BigInteger",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "fee_history_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "create_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "No description",
        "semantic_type": "type/CreationTimestamp"
      },
      {
        "name": "update_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "No description",
        "semantic_type": "type/UpdatedTimestamp"
      },
      {
        "name": "paid_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "tax_invoice_info",
        "type": "type/JSON",
        "description": "세금계산서 정보 (임시)",
        "semantic_type": "type/SerializedJSON"
      },
      {
        "name": "payout_date_to_capa",
        "type": "type/DateTimeWithLocalTZ",
        "description": "캐파 정산일자",
        "semantic_type": null
      },
      {
        "name": "is_payout_complete_to_capa",
        "type": "type/Boolean",
        "description": "캐파 정산여부",
        "semantic_type": null
      },
      {
        "name": "payout_amount_to_capa",
        "type": "type/BigInteger",
        "description": "캐파 정산금액",
        "semantic_type": null
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total Payments",
        "description": "Total amount of payments made",
        "business_value": "Overall revenue generated from payments",
        "sql_query": "SELECT SUM(payment_total) FROM tb_payment_market WHERE payment_total IS NOT NULL",
        "output_format": "Total sum of payments",
        "table_name": "tb_payment_market"
      },
      {
        "kpi_name": "Average Payment",
        "description": "Average amount of payments made",
        "business_value": "Average revenue per payment",
        "sql_query": "SELECT AVG(payment_total) FROM tb_payment_market WHERE payment_total IS NOT NULL",
        "output_format": "Average value of payments",
        "table_name": "tb_payment_market"
      },
      {
        "kpi_name": "Total Shipping Cost",
        "description": "Total cost of shipping",
        "business_value": "Overall cost incurred for shipping",
        "sql_query": "SELECT SUM(shipping_cost) FROM tb_payment_market WHERE shipping_cost IS NOT NULL",
        "output_format": "Total sum of shipping costs",
        "table_name": "tb_payment_market"
      },
      {
        "kpi_name": "Average Shipping Cost",
        "description": "Average cost of shipping",
        "business_value": "Average cost per shipping",
        "sql_query": "SELECT AVG(shipping_cost) FROM tb_payment_market WHERE shipping_cost IS NOT NULL",
        "output_format": "Average value of shipping costs",
        "table_name": "tb_payment_market"
      },
      {
        "kpi_name": "Total Commission",
        "description": "Total commission earned",
        "business_value": "Overall commission earned from payments",
        "sql_query": "SELECT SUM(commission) FROM tb_payment_market WHERE commission IS NOT NULL",
        "output_format": "Total sum of commissions",
        "table_name": "tb_payment_market"
      },
      {
        "kpi_name": "Average Commission",
        "description": "Average commission earned",
        "business_value": "Average commission per payment",
        "sql_query": "SELECT AVG(commission) FROM tb_payment_market WHERE commission IS NOT NULL",
        "output_format": "Average value of commissions",
        "table_name": "tb_payment_market"
      },
      {
        "kpi_name": "Total Payout to Capa",
        "description": "Total payout made to Capa",
        "business_value": "Overall payout made to Capa",
        "sql_query": "SELECT SUM(payout_amount_to_capa) FROM tb_payment_market WHERE payout_amount_to_capa IS NOT NULL",
        "output_format": "Total sum of payouts to Capa",
        "table_name": "tb_payment_market"
      },
      {
        "kpi_name": "Average Payout to Capa",
        "description": "Average payout made to Capa",
        "business_value": "Average payout per payment to Capa",
        "sql_query": "SELECT AVG(payout_amount_to_capa) FROM tb_payment_market WHERE payout_amount_to_capa IS NOT NULL",
        "output_format": "Average value of payouts to Capa",
        "table_name": "tb_payment_market"
      },
      {
        "kpi_name": "Count of Completed Payouts to Capa",
        "description": "Count of payouts to Capa that have been completed",
        "business_value": "Number of completed transactions with Capa",
        "sql_query": "SELECT COUNT(*) FROM tb_payment_market WHERE is_payout_complete_to_capa = true",
        "output_format": "Count of completed payouts to Capa",
        "table_name": "tb_payment_market"
      },
      {
        "kpi_name": "Count of Incomplete Payouts to Capa",
        "description": "Count of payouts to Capa that are not yet completed",
        "business_value": "Number of pending transactions with Capa",
        "sql_query": "SELECT COUNT(*) FROM tb_payment_market WHERE is_payout_complete_to_capa = false",
        "output_format": "Count of incomplete payouts to Capa",
        "table_name": "tb_payment_market"
      },
      {
        "kpi_name": "Count of Unique Partners",
        "description": "Count of unique partners involved in payments",
        "business_value": "Number of unique partners contributing to revenue",
        "sql_query": "SELECT COUNT(DISTINCT tax_invoice_info → partner_name) FROM tb_payment_market WHERE tax_invoice_info → partner_name IS NOT NULL",
        "output_format": "Count of unique partners",
        "table_name": "tb_payment_market"
      },
      {
        "kpi_name": "Count of Unique Users",
        "description": "Count of unique users involved in payments",
        "business_value": "Number of unique users contributing to revenue",
        "sql_query": "SELECT COUNT(DISTINCT tax_invoice_info → user_name) FROM tb_payment_market WHERE tax_invoice_info → user_name IS NOT NULL",
        "output_format": "Count of unique users",
        "table_name": "tb_payment_market"
      },
      {
        "kpi_name": "Count of Payments by Strategy Type",
        "description": "Count of payments grouped by strategy type",
        "business_value": "Insight into most and least popular payment strategies",
        "sql_query": "SELECT payment_strategy_type_id, COUNT(*) FROM tb_payment_market GROUP BY payment_strategy_type_id",
        "output_format": "Count of payments per strategy type",
        "table_name": "tb_payment_market"
      },
      {
        "kpi_name": "Count of Payments by Order",
        "description": "Count of payments grouped by order",
        "business_value": "Insight into orders with most and least payments",
        "sql_query": "SELECT order_id, COUNT(*) FROM tb_payment_market GROUP BY order_id",
        "output_format": "Count of payments per order",
        "table_name": "tb_payment_market"
      },
      {
        "kpi_name": "Count of Payments by Month",
        "description": "Count of payments grouped by month",
        "business_value": "Insight into busiest and slowest months for payments",
        "sql_query": "SELECT DATE_TRUNC('month', create_date) AS month, COUNT(*) FROM tb_payment_market WHERE create_date IS NOT NULL GROUP BY month",
        "output_format": "Count of payments per month",
        "table_name": "tb_payment_market"
      },
      {
        "kpi_name": "Count of Payments by Day of Week",
        "description": "Count of payments grouped by day of week",
        "business_value": "Insight into busiest and slowest days for payments",
        "sql_query": "SELECT DATE_TRUNC('day', create_date) AS day, COUNT(*) FROM tb_payment_market WHERE create_date IS NOT NULL GROUP BY day",
        "output_format": "Count of payments per day of week",
        "table_name": "tb_payment_market"
      },
      {
        "kpi_name": "Count of Payments by Hour of Day",
        "description": "Count of payments grouped by hour of day",
        "business_value": "Insight into busiest and slowest hours for payments",
        "sql_query": "SELECT DATE_TRUNC('hour', create_date) AS hour, COUNT(*) FROM tb_payment_market WHERE create_date IS NOT NULL GROUP BY hour",
        "output_format": "Count of payments per hour of day",
        "table_name": "tb_payment_market"
      },
      {
        "kpi_name": "Count of Payments by Minute of Hour",
        "description": "Count of payments grouped by minute of hour",
        "business_value": "Insight into busiest and slowest minutes for payments",
        "sql_query": "SELECT DATE_TRUNC('minute', create_date) AS minute, COUNT(*) FROM tb_payment_market WHERE create_date IS NOT NULL GROUP BY minute",
        "output_format": "Count of payments per minute of hour",
        "table_name": "tb_payment_market"
      },
      {
        "kpi_name": "Count of Payments by Second of Minute",
        "description": "Count of payments grouped by second of minute",
        "business_value": "Insight into busiest and slowest seconds for payments",
        "sql_query": "SELECT DATE_TRUNC('second', create_date) AS second, COUNT(*) FROM tb_payment_market WHERE create_date IS NOT NULL GROUP BY second",
        "output_format": "Count of payments per second of minute",
        "table_name": "tb_payment_market"
      }
    ],
    "join_analysis": {
      "total_kpis": 19,
      "kpis_with_joins": 0,
      "join_percentage": 0.0
    }
  },
  "tb_user_activity_log": {
    "table_info": {
      "name": "tb_user_activity_log",
      "description": null,
      "total_fields": 2,
      "fields_used": 2,
      "foreign_keys": 0,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "log_date",
        "type": "type/Date",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "user_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": null
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total Unique Users",
        "description": "Count of unique users",
        "business_value": "Understanding the total user base",
        "sql_query": "SELECT COUNT(DISTINCT user_id) FROM tb_user_activity_log WHERE user_id IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_user_activity_log"
      },
      {
        "kpi_name": "Daily Active Users",
        "description": "Count of unique users per day",
        "business_value": "Understanding daily user engagement",
        "sql_query": "SELECT log_date, COUNT(DISTINCT user_id) FROM tb_user_activity_log WHERE user_id IS NOT NULL AND log_date IS NOT NULL GROUP BY log_date",
        "output_format": "Date and corresponding integer value",
        "table_name": "tb_user_activity_log"
      },
      {
        "kpi_name": "Weekly Active Users",
        "description": "Count of unique users per week",
        "business_value": "Understanding weekly user engagement",
        "sql_query": "SELECT DATE_TRUNC('week', log_date) AS week_start, COUNT(DISTINCT user_id) FROM tb_user_activity_log WHERE user_id IS NOT NULL AND log_date IS NOT NULL GROUP BY week_start",
        "output_format": "Week start date and corresponding integer value",
        "table_name": "tb_user_activity_log"
      },
      {
        "kpi_name": "Monthly Active Users",
        "description": "Count of unique users per month",
        "business_value": "Understanding monthly user engagement",
        "sql_query": "SELECT DATE_TRUNC('month', log_date) AS month_start, COUNT(DISTINCT user_id) FROM tb_user_activity_log WHERE user_id IS NOT NULL AND log_date IS NOT NULL GROUP BY month_start",
        "output_format": "Month start date and corresponding integer value",
        "table_name": "tb_user_activity_log"
      },
      {
        "kpi_name": "User Activity Frequency",
        "description": "Average number of activities per user",
        "business_value": "Understanding user engagement level",
        "sql_query": "SELECT AVG(count) FROM (SELECT user_id, COUNT(*) as count FROM tb_user_activity_log WHERE user_id IS NOT NULL GROUP BY user_id) as subquery",
        "output_format": "Single decimal value",
        "table_name": "tb_user_activity_log"
      },
      {
        "kpi_name": "User Activity Distribution",
        "description": "Distribution of user activity counts",
        "business_value": "Understanding user engagement distribution",
        "sql_query": "SELECT count, COUNT(*) as user_count FROM (SELECT user_id, COUNT(*) as count FROM tb_user_activity_log WHERE user_id IS NOT NULL GROUP BY user_id) as subquery GROUP BY count",
        "output_format": "Activity count and corresponding user count",
        "table_name": "tb_user_activity_log"
      },
      {
        "kpi_name": "User Activity Trend",
        "description": "Trend of total user activities over time",
        "business_value": "Understanding user activity trend",
        "sql_query": "SELECT log_date, COUNT(*) FROM tb_user_activity_log WHERE user_id IS NOT NULL AND log_date IS NOT NULL GROUP BY log_date ORDER BY log_date",
        "output_format": "Date and corresponding activity count",
        "table_name": "tb_user_activity_log"
      },
      {
        "kpi_name": "User Activity Peak Time",
        "description": "Time of day with highest user activity",
        "business_value": "Identifying peak user activity time",
        "sql_query": "SELECT DATE_PART('hour', log_date) as hour, COUNT(*) FROM tb_user_activity_log WHERE user_id IS NOT NULL AND log_date IS NOT NULL GROUP BY hour ORDER BY COUNT(*) DESC LIMIT 1",
        "output_format": "Hour of day and corresponding activity count",
        "table_name": "tb_user_activity_log"
      },
      {
        "kpi_name": "User Activity Day of Week",
        "description": "Day of week with highest user activity",
        "business_value": "Identifying peak user activity day",
        "sql_query": "SELECT DATE_PART('dow', log_date) as day_of_week, COUNT(*) FROM tb_user_activity_log WHERE user_id IS NOT NULL AND log_date IS NOT NULL GROUP BY day_of_week ORDER BY COUNT(*) DESC LIMIT 1",
        "output_format": "Day of week and corresponding activity count",
        "table_name": "tb_user_activity_log"
      },
      {
        "kpi_name": "User Retention Rate",
        "description": "Percentage of users who return after their first activity",
        "business_value": "Understanding user retention",
        "sql_query": "SELECT COUNT(DISTINCT user_id) * 1.0 / (SELECT COUNT(DISTINCT user_id) FROM tb_user_activity_log WHERE user_id IS NOT NULL) FROM (SELECT user_id, COUNT(*) as count FROM tb_user_activity_log WHERE user_id IS NOT NULL GROUP BY user_id HAVING COUNT(*) > 1) as subquery",
        "output_format": "Single decimal value",
        "table_name": "tb_user_activity_log"
      }
    ],
    "join_analysis": {
      "total_kpis": 10,
      "kpis_with_joins": 0,
      "join_percentage": 0.0
    }
  },
  "tb_user_monthly_statistics": {
    "table_info": {
      "name": "tb_user_monthly_statistics",
      "description": "개인고객 월간 통계 집계 테이블",
      "total_fields": 10,
      "fields_used": 10,
      "foreign_keys": 0,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "year",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "month",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "user_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "rfq_cnt",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "quot_cnt",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "po_complete_cnt",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "total_deal_cnt",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "total_review_cnt",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "is_email",
        "type": "type/Boolean",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "is_kakao",
        "type": "type/Boolean",
        "description": "No description",
        "semantic_type": null
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total Users",
        "description": "Total number of unique users",
        "business_value": "Understanding the size of the user base",
        "sql_query": "SELECT COUNT(DISTINCT user_id) FROM tb_user_monthly_statistics WHERE user_id IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_user_monthly_statistics"
      },
      {
        "kpi_name": "Monthly RFQs",
        "description": "Total number of RFQs per month",
        "business_value": "Understanding the demand volume",
        "sql_query": "SELECT year, month, SUM(rfq_cnt) FROM tb_user_monthly_statistics WHERE rfq_cnt IS NOT NULL GROUP BY year, month",
        "output_format": "Year, Month, Total RFQs",
        "table_name": "tb_user_monthly_statistics"
      },
      {
        "kpi_name": "Monthly Quotations",
        "description": "Total number of quotations per month",
        "business_value": "Understanding the supply volume",
        "sql_query": "SELECT year, month, SUM(quot_cnt) FROM tb_user_monthly_statistics WHERE quot_cnt IS NOT NULL GROUP BY year, month",
        "output_format": "Year, Month, Total Quotations",
        "table_name": "tb_user_monthly_statistics"
      },
      {
        "kpi_name": "Monthly Completed POs",
        "description": "Total number of completed POs per month",
        "business_value": "Understanding the completion rate",
        "sql_query": "SELECT year, month, SUM(po_complete_cnt) FROM tb_user_monthly_statistics WHERE po_complete_cnt IS NOT NULL GROUP BY year, month",
        "output_format": "Year, Month, Total Completed POs",
        "table_name": "tb_user_monthly_statistics"
      },
      {
        "kpi_name": "Monthly Deal Count",
        "description": "Total number of deals per month",
        "business_value": "Understanding the deal volume",
        "sql_query": "SELECT year, month, SUM(total_deal_cnt) FROM tb_user_monthly_statistics WHERE total_deal_cnt IS NOT NULL GROUP BY year, month",
        "output_format": "Year, Month, Total Deals",
        "table_name": "tb_user_monthly_statistics"
      },
      {
        "kpi_name": "Monthly Review Count",
        "description": "Total number of reviews per month",
        "business_value": "Understanding the user engagement",
        "sql_query": "SELECT year, month, SUM(total_review_cnt) FROM tb_user_monthly_statistics WHERE total_review_cnt IS NOT NULL GROUP BY year, month",
        "output_format": "Year, Month, Total Reviews",
        "table_name": "tb_user_monthly_statistics"
      },
      {
        "kpi_name": "Email Users",
        "description": "Total number of users who have email",
        "business_value": "Understanding the user contact preference",
        "sql_query": "SELECT COUNT(DISTINCT user_id) FROM tb_user_monthly_statistics WHERE is_email = TRUE",
        "output_format": "Single integer value",
        "table_name": "tb_user_monthly_statistics"
      },
      {
        "kpi_name": "Kakao Users",
        "description": "Total number of users who have Kakao",
        "business_value": "Understanding the user contact preference",
        "sql_query": "SELECT COUNT(DISTINCT user_id) FROM tb_user_monthly_statistics WHERE is_kakao = TRUE",
        "output_format": "Single integer value",
        "table_name": "tb_user_monthly_statistics"
      },
      {
        "kpi_name": "RFQ to Quotation Conversion Rate",
        "description": "Conversion rate from RFQs to quotations",
        "business_value": "Understanding the efficiency of the quotation process",
        "sql_query": "SELECT SUM(quot_cnt) / NULLIF(SUM(rfq_cnt), 0) FROM tb_user_monthly_statistics WHERE rfq_cnt IS NOT NULL AND quot_cnt IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_user_monthly_statistics"
      },
      {
        "kpi_name": "Quotation to PO Completion Conversion Rate",
        "description": "Conversion rate from quotations to completed POs",
        "business_value": "Understanding the efficiency of the PO completion process",
        "sql_query": "SELECT SUM(po_complete_cnt) / NULLIF(SUM(quot_cnt), 0) FROM tb_user_monthly_statistics WHERE quot_cnt IS NOT NULL AND po_complete_cnt IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_user_monthly_statistics"
      },
      {
        "kpi_name": "PO Completion to Deal Conversion Rate",
        "description": "Conversion rate from completed POs to deals",
        "business_value": "Understanding the efficiency of the deal process",
        "sql_query": "SELECT SUM(total_deal_cnt) / NULLIF(SUM(po_complete_cnt), 0) FROM tb_user_monthly_statistics WHERE po_complete_cnt IS NOT NULL AND total_deal_cnt IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_user_monthly_statistics"
      },
      {
        "kpi_name": "Deal to Review Conversion Rate",
        "description": "Conversion rate from deals to reviews",
        "business_value": "Understanding the user engagement after a deal",
        "sql_query": "SELECT SUM(total_review_cnt) / NULLIF(SUM(total_deal_cnt), 0) FROM tb_user_monthly_statistics WHERE total_deal_cnt IS NOT NULL AND total_review_cnt IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_user_monthly_statistics"
      },
      {
        "kpi_name": "Average RFQs per User",
        "description": "Average number of RFQs per user",
        "business_value": "Understanding the user demand behavior",
        "sql_query": "SELECT AVG(rfq_cnt) FROM tb_user_monthly_statistics WHERE rfq_cnt IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_user_monthly_statistics"
      },
      {
        "kpi_name": "Average Quotations per User",
        "description": "Average number of quotations per user",
        "business_value": "Understanding the user supply behavior",
        "sql_query": "SELECT AVG(quot_cnt) FROM tb_user_monthly_statistics WHERE quot_cnt IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_user_monthly_statistics"
      },
      {
        "kpi_name": "Average Completed POs per User",
        "description": "Average number of completed POs per user",
        "business_value": "Understanding the user completion behavior",
        "sql_query": "SELECT AVG(po_complete_cnt) FROM tb_user_monthly_statistics WHERE po_complete_cnt IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_user_monthly_statistics"
      },
      {
        "kpi_name": "Average Deals per User",
        "description": "Average number of deals per user",
        "business_value": "Understanding the user deal behavior",
        "sql_query": "SELECT AVG(total_deal_cnt) FROM tb_user_monthly_statistics WHERE total_deal_cnt IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_user_monthly_statistics"
      },
      {
        "kpi_name": "Average Reviews per User",
        "description": "Average number of reviews per user",
        "business_value": "Understanding the user review behavior",
        "sql_query": "SELECT AVG(total_review_cnt) FROM tb_user_monthly_statistics WHERE total_review_cnt IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_user_monthly_statistics"
      },
      {
        "kpi_name": "Email User Percentage",
        "description": "Percentage of users who have email",
        "business_value": "Understanding the user contact preference",
        "sql_query": "SELECT COUNT(DISTINCT CASE WHEN is_email = TRUE THEN user_id END) / NULLIF(COUNT(DISTINCT user_id), 0) FROM tb_user_monthly_statistics WHERE user_id IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_user_monthly_statistics"
      },
      {
        "kpi_name": "Kakao User Percentage",
        "description": "Percentage of users who have Kakao",
        "business_value": "Understanding the user contact preference",
        "sql_query": "SELECT COUNT(DISTINCT CASE WHEN is_kakao = TRUE THEN user_id END) / NULLIF(COUNT(DISTINCT user_id), 0) FROM tb_user_monthly_statistics WHERE user_id IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_user_monthly_statistics"
      },
      {
        "kpi_name": "User Activity Rate",
        "description": "Percentage of users who have at least one RFQ, quotation, completed PO, deal, or review",
        "business_value": "Understanding the user activity level",
        "sql_query": "SELECT COUNT(DISTINCT CASE WHEN rfq_cnt > 0 OR quot_cnt > 0 OR po_complete_cnt > 0 OR total_deal_cnt > 0 OR total_review_cnt > 0 THEN user_id END) / NULLIF(COUNT(DISTINCT user_id), 0) FROM tb_user_monthly_statistics WHERE user_id IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_user_monthly_statistics"
      }
    ],
    "join_analysis": {
      "total_kpis": 20,
      "kpis_with_joins": 0,
      "join_percentage": 0.0
    }
  },
  "tb_rfq": {
    "table_info": {
      "name": "tb_rfq",
      "description": "견적요청서 - ollie, eddie",
      "total_fields": 56,
      "fields_used": 20,
      "foreign_keys": 7,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "add_info → assembleType",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "add_info → assemblyCnt",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "add_info → isProvideMask",
        "type": "type/Boolean",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "add_info → manufactureCnt",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "add_info → supplyMethodType",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "rfq_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/PK"
      },
      {
        "name": "service_type_history → service_type_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "service_type_history → sub_service_type_ids",
        "type": "type/Array",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "user_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 218,
          "target_field": "user_id",
          "relationship": "FK to user_id"
        }
      },
      {
        "name": "status_type_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 27,
          "target_field": "status_type_id",
          "relationship": "FK to status_type_id"
        }
      },
      {
        "name": "project_name",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "service_type_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 176,
          "target_field": "service_type_id",
          "relationship": "FK to service_type_id"
        }
      },
      {
        "name": "drawing_file_auth",
        "type": "type/Text",
        "description": "도면파일 권한설정 ('11' : 전체허용, '10' : 뷰어 허용, 다운로드 권한필요, '00' : 뷰어, 다운로드 모두 권한 필요)",
        "semantic_type": "type/Category"
      },
      {
        "name": "request_detail",
        "type": "type/Text",
        "description": "상세 요청 사항 (첨부 파일)",
        "semantic_type": null
      },
      {
        "name": "use_type_id",
        "type": "type/Integer",
        "description": "제품 용도",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 189,
          "target_field": "use_type_id",
          "relationship": "FK to use_type_id"
        }
      },
      {
        "name": "use_detail",
        "type": "type/Text",
        "description": "제품 용도 상세",
        "semantic_type": null
      },
      {
        "name": "due_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "납기일",
        "semantic_type": null
      },
      {
        "name": "is_negotiable",
        "type": "type/Boolean",
        "description": "납기일 협의 가능 여부",
        "semantic_type": null
      },
      {
        "name": "estimated_budget",
        "type": "type/BigInteger",
        "description": "추정 예산",
        "semantic_type": null
      },
      {
        "name": "is_open_budget",
        "type": "type/Boolean",
        "description": "추정 예산 공개 여부",
        "semantic_type": null
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total RFQs",
        "description": "Total number of RFQs",
        "business_value": "Understand the total volume of RFQs",
        "sql_query": "SELECT COUNT(*) FROM tb_rfq",
        "output_format": "Single integer value",
        "table_name": "tb_rfq"
      },
      {
        "kpi_name": "Total Unique Users",
        "description": "Total number of unique users who have made RFQs",
        "business_value": "Understand the total number of unique users",
        "sql_query": "SELECT COUNT(DISTINCT user_id) FROM tb_rfq",
        "output_format": "Single integer value",
        "table_name": "tb_rfq"
      },
      {
        "kpi_name": "Average Assembly Count",
        "description": "Average assembly count per RFQ",
        "business_value": "Understand the complexity of RFQs",
        "sql_query": "SELECT AVG(add_info -> assemblyCnt) FROM tb_rfq WHERE add_info -> assemblyCnt IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_rfq"
      },
      {
        "kpi_name": "RFQs with Mask Provided",
        "description": "Number of RFQs where mask is provided",
        "business_value": "Understand the proportion of RFQs where mask is provided",
        "sql_query": "SELECT COUNT(*) FROM tb_rfq WHERE add_info -> isProvideMask = true",
        "output_format": "Single integer value",
        "table_name": "tb_rfq"
      },
      {
        "kpi_name": "Average Manufacture Count",
        "description": "Average manufacture count per RFQ",
        "business_value": "Understand the manufacturing volume of RFQs",
        "sql_query": "SELECT AVG(add_info -> manufactureCnt) FROM tb_rfq WHERE add_info -> manufactureCnt IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_rfq"
      },
      {
        "kpi_name": "RFQs by Supply Method Type",
        "description": "Number of RFQs by supply method type",
        "business_value": "Understand the distribution of RFQs by supply method type",
        "sql_query": "SELECT add_info -> supplyMethodType, COUNT(*) FROM tb_rfq GROUP BY add_info -> supplyMethodType",
        "output_format": "List of supply method types and their counts",
        "table_name": "tb_rfq"
      },
      {
        "kpi_name": "RFQs by Status Type",
        "description": "Number of RFQs by status type",
        "business_value": "Understand the distribution of RFQs by status type",
        "sql_query": "SELECT status_type_id, COUNT(*) FROM tb_rfq GROUP BY status_type_id",
        "output_format": "List of status types and their counts",
        "table_name": "tb_rfq"
      },
      {
        "kpi_name": "RFQs by Service Type",
        "description": "Number of RFQs by service type",
        "business_value": "Understand the distribution of RFQs by service type",
        "sql_query": "SELECT service_type_id, COUNT(*) FROM tb_rfq GROUP BY service_type_id",
        "output_format": "List of service types and their counts",
        "table_name": "tb_rfq"
      },
      {
        "kpi_name": "Average Estimated Budget",
        "description": "Average estimated budget for RFQs",
        "business_value": "Understand the average budget for RFQs",
        "sql_query": "SELECT AVG(estimated_budget) FROM tb_rfq WHERE estimated_budget IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_rfq"
      },
      {
        "kpi_name": "RFQs with Open Budget",
        "description": "Number of RFQs with open budget",
        "business_value": "Understand the proportion of RFQs with open budget",
        "sql_query": "SELECT COUNT(*) FROM tb_rfq WHERE is_open_budget = true",
        "output_format": "Single integer value",
        "table_name": "tb_rfq"
      },
      {
        "kpi_name": "RFQs by Due Date",
        "description": "Number of RFQs by due date",
        "business_value": "Understand the distribution of RFQs by due date",
        "sql_query": "SELECT due_date, COUNT(*) FROM tb_rfq WHERE due_date IS NOT NULL GROUP BY due_date",
        "output_format": "List of due dates and their counts",
        "table_name": "tb_rfq"
      },
      {
        "kpi_name": "RFQs with Negotiable Due Date",
        "description": "Number of RFQs with negotiable due date",
        "business_value": "Understand the flexibility of RFQs",
        "sql_query": "SELECT COUNT(*) FROM tb_rfq WHERE is_negotiable = true",
        "output_format": "Single integer value",
        "table_name": "tb_rfq"
      },
      {
        "kpi_name": "RFQs by User and Status",
        "description": "Number of RFQs by user and status",
        "business_value": "Understand the distribution of RFQs by user and status",
        "sql_query": "SELECT user_id, status_type_id, COUNT(*) FROM tb_rfq GROUP BY user_id, status_type_id",
        "output_format": "List of users, status types and their counts",
        "table_name": "tb_rfq"
      },
      {
        "kpi_name": "RFQs by User and Service Type",
        "description": "Number of RFQs by user and service type",
        "business_value": "Understand the distribution of RFQs by user and service type",
        "sql_query": "SELECT user_id, service_type_id, COUNT(*) FROM tb_rfq GROUP BY user_id, service_type_id",
        "output_format": "List of users, service types and their counts",
        "table_name": "tb_rfq"
      },
      {
        "kpi_name": "RFQs by Project Name",
        "description": "Number of RFQs by project name",
        "business_value": "Understand the distribution of RFQs by project name",
        "sql_query": "SELECT project_name, COUNT(*) FROM tb_rfq GROUP BY project_name",
        "output_format": "List of project names and their counts",
        "table_name": "tb_rfq"
      }
    ]
  },
  "tb_quotation": {
    "table_info": {
      "name": "tb_quotation",
      "description": "견적서 - ollie",
      "total_fields": 35,
      "fields_used": 20,
      "foreign_keys": 4,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "detail → additional_items",
        "type": "type/Array",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "detail → assembly_items",
        "type": "type/Array",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "detail → assembly_total_cost",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/Cost"
      },
      {
        "name": "detail → design_scope",
        "type": "type/Array",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "detail → drawing_files",
        "type": "type/Array",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "detail → manufacture_total_cost",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/Cost"
      },
      {
        "name": "detail → modification_max_cnt",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "detail → modification_standard",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "quotation_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/PK"
      },
      {
        "name": "rfq_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 172,
          "target_field": "rfq_id",
          "relationship": "FK to rfq_id"
        }
      },
      {
        "name": "cost",
        "type": "type/BigInteger",
        "description": "견적 가격 (supply_value * 1.1 + delivery_cost) -> 부가세 포함",
        "semantic_type": "type/Cost"
      },
      {
        "name": "description",
        "type": "type/Text",
        "description": "견적 설명",
        "semantic_type": "type/Description"
      },
      {
        "name": "create_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "No description",
        "semantic_type": "type/CreationTimestamp"
      },
      {
        "name": "is_read",
        "type": "type/Boolean",
        "description": "읽음 여부",
        "semantic_type": null
      },
      {
        "name": "delivery_cost",
        "type": "type/BigInteger",
        "description": "배송비",
        "semantic_type": "type/Cost"
      },
      {
        "name": "pre_save",
        "type": "type/Boolean",
        "description": "임시저장여부 - T:임시저장x, F:임시저장o",
        "semantic_type": null
      },
      {
        "name": "partner_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 305,
          "target_field": "partner_id",
          "relationship": "FK to partner_id"
        }
      },
      {
        "name": "partner_user_id",
        "type": "type/Integer",
        "description": "발행인 user_id",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 305,
          "target_field": "partner_id",
          "relationship": "FK to partner_id"
        }
      },
      {
        "name": "is_available",
        "type": "type/Boolean",
        "description": "유효한지. 재작성을 하면 기존에 작성된 견적서는 false 처리 해줌",
        "semantic_type": null
      },
      {
        "name": "flow_status",
        "type": "type/Integer",
        "description": "현재 이 견적서의 진행 상황이 어느정도 인지 \nhttps://www.notion.so/ateamventures/column-eaed008fb5514e48940406e30f13ade9?pvs=4\n견적-1 발주-2 제조-3 배송-4 완료-5",
        "semantic_type": null
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total Quotations",
        "description": "Total number of quotations made",
        "business_value": "Understand the volume of quotations",
        "sql_query": "SELECT COUNT(*) FROM tb_quotation WHERE quotation_id IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_quotation"
      },
      {
        "kpi_name": "Total Cost of Quotations",
        "description": "Total cost of all quotations",
        "business_value": "Understand the total cost incurred in quotations",
        "sql_query": "SELECT SUM(cost) FROM tb_quotation WHERE cost IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_quotation"
      },
      {
        "kpi_name": "Average Quotation Cost",
        "description": "Average cost of quotations",
        "business_value": "Understand the average cost per quotation",
        "sql_query": "SELECT AVG(cost) FROM tb_quotation WHERE cost IS NOT NULL",
        "output_format": "Single float value",
        "table_name": "tb_quotation"
      },
      {
        "kpi_name": "Total Delivery Cost",
        "description": "Total delivery cost of all quotations",
        "business_value": "Understand the total delivery cost incurred in quotations",
        "sql_query": "SELECT SUM(delivery_cost) FROM tb_quotation WHERE delivery_cost IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_quotation"
      },
      {
        "kpi_name": "Average Delivery Cost",
        "description": "Average delivery cost of quotations",
        "business_value": "Understand the average delivery cost per quotation",
        "sql_query": "SELECT AVG(delivery_cost) FROM tb_quotation WHERE delivery_cost IS NOT NULL",
        "output_format": "Single float value",
        "table_name": "tb_quotation"
      },
      {
        "kpi_name": "Quotations by Partner",
        "description": "Number of quotations made by each partner",
        "business_value": "Understand the distribution of quotations across partners",
        "sql_query": "SELECT partner_id, COUNT(*) FROM tb_quotation WHERE partner_id IS NOT NULL GROUP BY partner_id",
        "output_format": "List of partner_id and count",
        "table_name": "tb_quotation"
      },
      {
        "kpi_name": "Quotations by Status",
        "description": "Number of quotations by their status",
        "business_value": "Understand the distribution of quotations across different statuses",
        "sql_query": "SELECT flow_status, COUNT(*) FROM tb_quotation WHERE flow_status IS NOT NULL GROUP BY flow_status",
        "output_format": "List of flow_status and count",
        "table_name": "tb_quotation"
      },
      {
        "kpi_name": "Quotations Read Status",
        "description": "Number of quotations read and unread",
        "business_value": "Understand the read status of quotations",
        "sql_query": "SELECT is_read, COUNT(*) FROM tb_quotation WHERE is_read IS NOT NULL GROUP BY is_read",
        "output_format": "List of is_read status and count",
        "table_name": "tb_quotation"
      },
      {
        "kpi_name": "Quotations Available Status",
        "description": "Number of quotations available and not available",
        "business_value": "Understand the availability status of quotations",
        "sql_query": "SELECT is_available, COUNT(*) FROM tb_quotation WHERE is_available IS NOT NULL GROUP BY is_available",
        "output_format": "List of is_available status and count",
        "table_name": "tb_quotation"
      },
      {
        "kpi_name": "Quotations Pre-save Status",
        "description": "Number of quotations pre-saved and not pre-saved",
        "business_value": "Understand the pre-save status of quotations",
        "sql_query": "SELECT pre_save, COUNT(*) FROM tb_quotation WHERE pre_save IS NOT NULL GROUP BY pre_save",
        "output_format": "List of pre_save status and count",
        "table_name": "tb_quotation"
      },
      {
        "kpi_name": "Quotations by Month",
        "description": "Number of quotations made each month",
        "business_value": "Understand the monthly trend of quotations",
        "sql_query": "SELECT DATE_TRUNC('month', create_date) AS month, COUNT(*) FROM tb_quotation WHERE create_date IS NOT NULL GROUP BY month",
        "output_format": "List of month and count",
        "table_name": "tb_quotation"
      },
      {
        "kpi_name": "Quotations by Day of Week",
        "description": "Number of quotations made each day of the week",
        "business_value": "Understand the weekly trend of quotations",
        "sql_query": "SELECT DATE_PART('dow', create_date) AS day_of_week, COUNT(*) FROM tb_quotation WHERE create_date IS NOT NULL GROUP BY day_of_week",
        "output_format": "List of day_of_week and count",
        "table_name": "tb_quotation"
      },
      {
        "kpi_name": "Quotations by Hour of Day",
        "description": "Number of quotations made each hour of the day",
        "business_value": "Understand the daily trend of quotations",
        "sql_query": "SELECT DATE_PART('hour', create_date) AS hour_of_day, COUNT(*) FROM tb_quotation WHERE create_date IS NOT NULL GROUP BY hour_of_day",
        "output_format": "List of hour_of_day and count",
        "table_name": "tb_quotation"
      },
      {
        "kpi_name": "Quotations by RFQ",
        "description": "Number of quotations made for each RFQ",
        "business_value": "Understand the distribution of quotations across RFQs",
        "sql_query": "SELECT rfq_id, COUNT(*) FROM tb_quotation WHERE rfq_id IS NOT NULL GROUP BY rfq_id",
        "output_format": "List of rfq_id and count",
        "table_name": "tb_quotation"
      },
      {
        "kpi_name": "Quotations by Partner User",
        "description": "Number of quotations made by each partner user",
        "business_value": "Understand the distribution of quotations across partner users",
        "sql_query": "SELECT partner_user_id, COUNT(*) FROM tb_quotation WHERE partner_user_id IS NOT NULL GROUP BY partner_user_id",
        "output_format": "List of partner_user_id and count",
        "table_name": "tb_quotation"
      }
    ]
  },
  "tb_market_product": {
    "table_info": {
      "name": "tb_market_product",
      "description": "마켓 상품",
      "total_fields": 19,
      "fields_used": 19,
      "foreign_keys": 3,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "product_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/PK"
      },
      {
        "name": "product_name",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "category_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 123,
          "target_field": "category_id",
          "relationship": "FK to category_id"
        }
      },
      {
        "name": "seller_id",
        "type": "type/Integer",
        "description": "판매 업체",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 59,
          "target_field": "seller_id",
          "relationship": "FK to seller_id"
        }
      },
      {
        "name": "product_code",
        "type": "type/Text",
        "description": "제품 코드",
        "semantic_type": null
      },
      {
        "name": "thumbnail_url",
        "type": "type/Text",
        "description": "대표 이미지",
        "semantic_type": "type/URL"
      },
      {
        "name": "description",
        "type": "type/Text",
        "description": "상품 설명",
        "semantic_type": "type/Description"
      },
      {
        "name": "create_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "No description",
        "semantic_type": "type/CreationTimestamp"
      },
      {
        "name": "properties",
        "type": "type/JSON",
        "description": "Record<string, string> (상품 커스텀 속성)",
        "semantic_type": "type/SerializedJSON"
      },
      {
        "name": "details",
        "type": "type/Text",
        "description": "상품 상세 (HTML형태)",
        "semantic_type": null
      },
      {
        "name": "slug",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "img_urls",
        "type": "type/*",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "is_display",
        "type": "type/Boolean",
        "description": "사용자 공개 여부",
        "semantic_type": null
      },
      {
        "name": "base_price",
        "type": "type/Integer",
        "description": "할인이나 추가 금액 붙기 전 기본 가격",
        "semantic_type": null
      },
      {
        "name": "discounted_price",
        "type": "type/Integer",
        "description": "할인된 가격",
        "semantic_type": "type/Discount"
      },
      {
        "name": "moq",
        "type": "type/Integer",
        "description": "Minimum Order Quantity (최소주문수량)",
        "semantic_type": null
      },
      {
        "name": "max_price",
        "type": "type/Integer",
        "description": "최고 금액",
        "semantic_type": null
      },
      {
        "name": "smartstore_url",
        "type": "type/Text",
        "description": "네이버 스마트스토어 url",
        "semantic_type": "type/URL"
      },
      {
        "name": "policy_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 323,
          "target_field": "policy_id",
          "relationship": "FK to policy_id"
        }
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total Products",
        "description": "Total number of products",
        "business_value": "Understand the size of the product catalog",
        "sql_query": "SELECT COUNT(*) FROM tb_market_product WHERE product_id IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_market_product"
      },
      {
        "kpi_name": "Total Active Products",
        "description": "Total number of active products",
        "business_value": "Understand how many products are currently available",
        "sql_query": "SELECT COUNT(*) FROM tb_market_product WHERE is_display = TRUE",
        "output_format": "Single integer value",
        "table_name": "tb_market_product"
      },
      {
        "kpi_name": "Average Base Price",
        "description": "Average base price of all products",
        "business_value": "Understand the average price point of products",
        "sql_query": "SELECT AVG(base_price) FROM tb_market_product WHERE base_price IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_market_product"
      },
      {
        "kpi_name": "Average Discounted Price",
        "description": "Average discounted price of all products",
        "business_value": "Understand the average discounted price point of products",
        "sql_query": "SELECT AVG(discounted_price) FROM tb_market_product WHERE discounted_price IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_market_product"
      },
      {
        "kpi_name": "Total Categories",
        "description": "Total number of unique product categories",
        "business_value": "Understand the diversity of product categories",
        "sql_query": "SELECT COUNT(DISTINCT category_id) FROM tb_market_product WHERE category_id IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_market_product"
      },
      {
        "kpi_name": "Total Sellers",
        "description": "Total number of unique sellers",
        "business_value": "Understand the diversity of sellers",
        "sql_query": "SELECT COUNT(DISTINCT seller_id) FROM tb_market_product WHERE seller_id IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_market_product"
      },
      {
        "kpi_name": "Product Creation Rate",
        "description": "Number of products created per month",
        "business_value": "Understand the rate of product catalog growth",
        "sql_query": "SELECT COUNT(*)/COUNT(DISTINCT DATE_TRUNC('month', create_date)) FROM tb_market_product WHERE create_date IS NOT NULL AND create_date > '1900-01-01'",
        "output_format": "Single decimal value",
        "table_name": "tb_market_product"
      },
      {
        "kpi_name": "Average MOQ",
        "description": "Average minimum order quantity of all products",
        "business_value": "Understand the average MOQ requirement",
        "sql_query": "SELECT AVG(moq) FROM tb_market_product WHERE moq IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_market_product"
      },
      {
        "kpi_name": "Max Price Product",
        "description": "Product with the highest price",
        "business_value": "Identify the most expensive product",
        "sql_query": "SELECT product_name FROM tb_market_product WHERE max_price = (SELECT MAX(max_price) FROM tb_market_product WHERE max_price IS NOT NULL)",
        "output_format": "Single string value",
        "table_name": "tb_market_product"
      },
      {
        "kpi_name": "Min Price Product",
        "description": "Product with the lowest price",
        "business_value": "Identify the least expensive product",
        "sql_query": "SELECT product_name FROM tb_market_product WHERE base_price = (SELECT MIN(base_price) FROM tb_market_product WHERE base_price IS NOT NULL)",
        "output_format": "Single string value",
        "table_name": "tb_market_product"
      },
      {
        "kpi_name": "Average Discount Rate",
        "description": "Average discount rate across all products",
        "business_value": "Understand the average discount offered",
        "sql_query": "SELECT AVG((base_price - discounted_price) / base_price) FROM tb_market_product WHERE base_price IS NOT NULL AND discounted_price IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_market_product"
      },
      {
        "kpi_name": "Product Count by Category",
        "description": "Number of products in each category",
        "business_value": "Understand the distribution of products across categories",
        "sql_query": "SELECT category_id, COUNT(*) FROM tb_market_product WHERE category_id IS NOT NULL GROUP BY category_id",
        "output_format": "List of category IDs and corresponding counts",
        "table_name": "tb_market_product"
      },
      {
        "kpi_name": "Product Count by Seller",
        "description": "Number of products from each seller",
        "business_value": "Understand the distribution of products across sellers",
        "sql_query": "SELECT seller_id, COUNT(*) FROM tb_market_product WHERE seller_id IS NOT NULL GROUP BY seller_id",
        "output_format": "List of seller IDs and corresponding counts",
        "table_name": "tb_market_product"
      },
      {
        "kpi_name": "Products with No Discount",
        "description": "Number of products without any discount",
        "business_value": "Identify products that are not discounted",
        "sql_query": "SELECT COUNT(*) FROM tb_market_product WHERE base_price = discounted_price OR discounted_price IS NULL",
        "output_format": "Single integer value",
        "table_name": "tb_market_product"
      },
      {
        "kpi_name": "Products with Maximum Discount",
        "description": "Number of products with the maximum discount rate",
        "business_value": "Identify products that are heavily discounted",
        "sql_query": "SELECT COUNT(*) FROM tb_market_product WHERE (base_price - discounted_price) / base_price = (SELECT MAX((base_price - discounted_price) / base_price) FROM tb_market_product WHERE base_price IS NOT NULL AND discounted_price IS NOT NULL)",
        "output_format": "Single integer value",
        "table_name": "tb_market_product"
      }
    ]
  },
  "tb_purchase_order": {
    "table_info": {
      "name": "tb_purchase_order",
      "description": "발주서",
      "total_fields": 21,
      "fields_used": 20,
      "foreign_keys": 5,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "purchase_order_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/PK"
      },
      {
        "name": "transfer_info → transfer_terms",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "quotation_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 341,
          "target_field": "quotation_id",
          "relationship": "FK to quotation_id"
        }
      },
      {
        "name": "user_id",
        "type": "type/Integer",
        "description": "발주한 사람",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 218,
          "target_field": "user_id",
          "relationship": "FK to user_id"
        }
      },
      {
        "name": "is_read",
        "type": "type/Boolean",
        "description": "읽었는지 여부 - f:unread / t:read",
        "semantic_type": null
      },
      {
        "name": "status",
        "type": "type/Integer",
        "description": "발주상태",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 29,
          "target_field": "purchaser_order_status_type_id",
          "relationship": "FK to purchaser_order_status_type_id"
        }
      },
      {
        "name": "is_issued_tax_bill",
        "type": "type/Boolean",
        "description": "세금계산서 발행 신청 여부",
        "semantic_type": null
      },
      {
        "name": "create_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "No description",
        "semantic_type": "type/CreationTimestamp"
      },
      {
        "name": "update_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "No description",
        "semantic_type": "type/UpdatedTimestamp"
      },
      {
        "name": "partner_id",
        "type": "type/Integer",
        "description": "누구한테 발주하는지 ",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 68,
          "target_field": "partner_id",
          "relationship": "FK to partner_id"
        }
      },
      {
        "name": "transfer_info",
        "type": "type/JSON",
        "description": "이관 정보 (주조, 금형사출에서만 입력받음) ",
        "semantic_type": "type/SerializedJSON"
      },
      {
        "name": "address",
        "type": "type/Text",
        "description": "배송지 주소",
        "semantic_type": null
      },
      {
        "name": "address_detail",
        "type": "type/Text",
        "description": "배송지 상세 주소",
        "semantic_type": "type/Category"
      },
      {
        "name": "ship_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "납품일자",
        "semantic_type": null
      },
      {
        "name": "zipcode",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/ZipCode"
      },
      {
        "name": "receiver",
        "type": "type/Text",
        "description": "수령인",
        "semantic_type": "type/Category"
      },
      {
        "name": "cellphone1",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "cellphone2",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "id",
        "type": "type/UUID",
        "description": "마이그레이션",
        "semantic_type": "type/PK"
      },
      {
        "name": "payment_strategy_type_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 98,
          "target_field": "strategy_type_id",
          "relationship": "FK to strategy_type_id"
        }
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total Purchase Orders",
        "description": "Total number of purchase orders",
        "business_value": "Understanding the total volume of purchase orders",
        "sql_query": "SELECT COUNT(*) FROM tb_purchase_order WHERE purchase_order_id IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_purchase_order"
      },
      {
        "kpi_name": "Total Unique Users",
        "description": "Total number of unique users who made a purchase order",
        "business_value": "Understanding the total unique users making purchase orders",
        "sql_query": "SELECT COUNT(DISTINCT user_id) FROM tb_purchase_order WHERE user_id IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_purchase_order"
      },
      {
        "kpi_name": "Total Unread Purchase Orders",
        "description": "Total number of unread purchase orders",
        "business_value": "Understanding the number of unread purchase orders",
        "sql_query": "SELECT COUNT(*) FROM tb_purchase_order WHERE is_read = false",
        "output_format": "Single integer value",
        "table_name": "tb_purchase_order"
      },
      {
        "kpi_name": "Total Issued Tax Bills",
        "description": "Total number of issued tax bills",
        "business_value": "Understanding the number of issued tax bills",
        "sql_query": "SELECT COUNT(*) FROM tb_purchase_order WHERE is_issued_tax_bill = true",
        "output_format": "Single integer value",
        "table_name": "tb_purchase_order"
      },
      {
        "kpi_name": "Total Purchase Orders by Status",
        "description": "Total number of purchase orders by status",
        "business_value": "Understanding the distribution of purchase orders by status",
        "sql_query": "SELECT status, COUNT(*) FROM tb_purchase_order GROUP BY status",
        "output_format": "List of status with their respective counts",
        "table_name": "tb_purchase_order"
      },
      {
        "kpi_name": "Total Purchase Orders by User",
        "description": "Total number of purchase orders by user",
        "business_value": "Understanding the distribution of purchase orders by user",
        "sql_query": "SELECT user_id, COUNT(*) FROM tb_purchase_order GROUP BY user_id",
        "output_format": "List of users with their respective counts",
        "table_name": "tb_purchase_order"
      },
      {
        "kpi_name": "Total Purchase Orders by Partner",
        "description": "Total number of purchase orders by partner",
        "business_value": "Understanding the distribution of purchase orders by partner",
        "sql_query": "SELECT partner_id, COUNT(*) FROM tb_purchase_order GROUP BY partner_id",
        "output_format": "List of partners with their respective counts",
        "table_name": "tb_purchase_order"
      },
      {
        "kpi_name": "Total Purchase Orders by Quotation",
        "description": "Total number of purchase orders by quotation",
        "business_value": "Understanding the distribution of purchase orders by quotation",
        "sql_query": "SELECT quotation_id, COUNT(*) FROM tb_purchase_order GROUP BY quotation_id",
        "output_format": "List of quotations with their respective counts",
        "table_name": "tb_purchase_order"
      },
      {
        "kpi_name": "Total Purchase Orders by Payment Strategy",
        "description": "Total number of purchase orders by payment strategy",
        "business_value": "Understanding the distribution of purchase orders by payment strategy",
        "sql_query": "SELECT payment_strategy_type_id, COUNT(*) FROM tb_purchase_order GROUP BY payment_strategy_type_id",
        "output_format": "List of payment strategies with their respective counts",
        "table_name": "tb_purchase_order"
      },
      {
        "kpi_name": "Total Purchase Orders by Month",
        "description": "Total number of purchase orders by month",
        "business_value": "Understanding the distribution of purchase orders by month",
        "sql_query": "SELECT DATE_TRUNC('month', create_date) AS month, COUNT(*) FROM tb_purchase_order GROUP BY month",
        "output_format": "List of months with their respective counts",
        "table_name": "tb_purchase_order"
      },
      {
        "kpi_name": "Total Purchase Orders by Day of Week",
        "description": "Total number of purchase orders by day of week",
        "business_value": "Understanding the distribution of purchase orders by day of week",
        "sql_query": "SELECT DATE_TRUNC('day', create_date) AS day, COUNT(*) FROM tb_purchase_order GROUP BY day",
        "output_format": "List of days with their respective counts",
        "table_name": "tb_purchase_order"
      },
      {
        "kpi_name": "Average Time Between Creation and Update",
        "description": "Average time in days between creation and update of purchase orders",
        "business_value": "Understanding the average time taken to update a purchase order",
        "sql_query": "SELECT AVG(DATE_PART('day', update_date - create_date)) FROM tb_purchase_order WHERE create_date IS NOT NULL AND update_date IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_purchase_order"
      },
      {
        "kpi_name": "Total Purchase Orders with Shipping Information",
        "description": "Total number of purchase orders with shipping information",
        "business_value": "Understanding the number of purchase orders with shipping information",
        "sql_query": "SELECT COUNT(*) FROM tb_purchase_order WHERE address IS NOT NULL AND address_detail IS NOT NULL AND ship_date IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_purchase_order"
      },
      {
        "kpi_name": "Total Purchase Orders with Complete Contact Information",
        "description": "Total number of purchase orders with complete contact information",
        "business_value": "Understanding the number of purchase orders with complete contact information",
        "sql_query": "SELECT COUNT(*) FROM tb_purchase_order WHERE receiver IS NOT NULL AND cellphone1 IS NOT NULL AND cellphone2 IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_purchase_order"
      },
      {
        "kpi_name": "Total Purchase Orders with Transfer Information",
        "description": "Total number of purchase orders with transfer information",
        "business_value": "Understanding the number of purchase orders with transfer information",
        "sql_query": "SELECT COUNT(*) FROM tb_purchase_order WHERE transfer_info IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_purchase_order"
      }
    ]
  },
  "tb_oem_market_product": {
    "table_info": {
      "name": "tb_oem_market_product",
      "description": "oem 마켓 상품테이블",
      "total_fields": 101,
      "fields_used": 20,
      "foreign_keys": 9,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "kc_value → certificate_number",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "kc_value → certification_authority",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Author"
      },
      {
        "name": "kc_value → certification_date",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "kc_value → certification_type",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "kc_value → certified_company_name",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Company"
      },
      {
        "name": "kc_value → import_type",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "kc_value → no_kc_reason",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "kc_value → use_kc_mark",
        "type": "type/Boolean",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "max_price_info → price",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "min_price_info → discount_amount",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/Discount"
      },
      {
        "name": "min_price_info → discounted_price",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/Discount"
      },
      {
        "name": "min_price_info → discount_rate",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/Discount"
      },
      {
        "name": "min_price_info → price",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "product_id",
        "type": "type/Integer",
        "description": "상품 고유번호",
        "semantic_type": "type/PK"
      },
      {
        "name": "product_notice → consumer_dispute_resolution_details → custom_input",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "product_notice → consumer_dispute_resolution_details → value",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "product_notice → consumerDisputeResolutionDetails → value",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "product_notice → exchange_return_warranty_terms → custom_input",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "product_notice → exchangeReturnWarrantyTerms → customInput",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "product_notice → exchange_return_warranty_terms → value",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": null
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total Products",
        "description": "Total number of products in the database",
        "business_value": "Understanding the size of the product portfolio",
        "sql_query": "SELECT COUNT(*) FROM tb_oem_market_product WHERE product_id IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_oem_market_product"
      },
      {
        "kpi_name": "Certified Products",
        "description": "Number of products with a certification",
        "business_value": "Understanding the proportion of products that are certified",
        "sql_query": "SELECT COUNT(*) FROM tb_oem_market_product WHERE kc_value → certificate_number IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_oem_market_product"
      },
      {
        "kpi_name": "Average Product Price",
        "description": "Average price of all products",
        "business_value": "Understanding the average price point for products",
        "sql_query": "SELECT AVG(max_price_info → price) FROM tb_oem_market_product WHERE max_price_info → price IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_oem_market_product"
      },
      {
        "kpi_name": "Discounted Products",
        "description": "Number of products with a discount",
        "business_value": "Understanding the proportion of products that are discounted",
        "sql_query": "SELECT COUNT(*) FROM tb_oem_market_product WHERE min_price_info → discount_rate > 0",
        "output_format": "Single integer value",
        "table_name": "tb_oem_market_product"
      },
      {
        "kpi_name": "Average Discount Rate",
        "description": "Average discount rate for discounted products",
        "business_value": "Understanding the average discount offered on products",
        "sql_query": "SELECT AVG(min_price_info → discount_rate) FROM tb_oem_market_product WHERE min_price_info → discount_rate > 0",
        "output_format": "Single decimal value",
        "table_name": "tb_oem_market_product"
      },
      {
        "kpi_name": "Products without KC Mark",
        "description": "Number of products without a KC mark",
        "business_value": "Understanding the proportion of products that do not have a KC mark",
        "sql_query": "SELECT COUNT(*) FROM tb_oem_market_product WHERE kc_value → use_kc_mark = false",
        "output_format": "Single integer value",
        "table_name": "tb_oem_market_product"
      },
      {
        "kpi_name": "Certification Authorities",
        "description": "Number of unique certification authorities for certified products",
        "business_value": "Understanding the diversity of certification authorities",
        "sql_query": "SELECT COUNT(DISTINCT kc_value → certification_authority) FROM tb_oem_market_product WHERE kc_value → certification_authority IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_oem_market_product"
      },
      {
        "kpi_name": "Certified Companies",
        "description": "Number of unique companies with certified products",
        "business_value": "Understanding the diversity of companies with certified products",
        "sql_query": "SELECT COUNT(DISTINCT kc_value → certified_company_name) FROM tb_oem_market_product WHERE kc_value → certified_company_name IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_oem_market_product"
      },
      {
        "kpi_name": "Imported Products",
        "description": "Number of products that are imported",
        "business_value": "Understanding the proportion of products that are imported",
        "sql_query": "SELECT COUNT(*) FROM tb_oem_market_product WHERE kc_value → import_type = 'imported'",
        "output_format": "Single integer value",
        "table_name": "tb_oem_market_product"
      },
      {
        "kpi_name": "Domestic Products",
        "description": "Number of products that are domestically produced",
        "business_value": "Understanding the proportion of products that are domestically produced",
        "sql_query": "SELECT COUNT(*) FROM tb_oem_market_product WHERE kc_value → import_type = 'domestic'",
        "output_format": "Single integer value",
        "table_name": "tb_oem_market_product"
      },
      {
        "kpi_name": "Products with Consumer Dispute Resolution Details",
        "description": "Number of products with consumer dispute resolution details",
        "business_value": "Understanding the proportion of products that have consumer dispute resolution details",
        "sql_query": "SELECT COUNT(*) FROM tb_oem_market_product WHERE product_notice → consumer_dispute_resolution_details → custom_input IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_oem_market_product"
      },
      {
        "kpi_name": "Products with Exchange Return Warranty Terms",
        "description": "Number of products with exchange return warranty terms",
        "business_value": "Understanding the proportion of products that have exchange return warranty terms",
        "sql_query": "SELECT COUNT(*) FROM tb_oem_market_product WHERE product_notice → exchange_return_warranty_terms → custom_input IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_oem_market_product"
      },
      {
        "kpi_name": "Average Discount Amount",
        "description": "Average discount amount for discounted products",
        "business_value": "Understanding the average discount amount offered on products",
        "sql_query": "SELECT AVG(min_price_info → discount_amount) FROM tb_oem_market_product WHERE min_price_info → discount_amount > 0",
        "output_format": "Single decimal value",
        "table_name": "tb_oem_market_product"
      },
      {
        "kpi_name": "Products with No KC Reason",
        "description": "Number of products with a specified reason for not having a KC mark",
        "business_value": "Understanding the reasons for products not having a KC mark",
        "sql_query": "SELECT COUNT(*) FROM tb_oem_market_product WHERE kc_value → no_kc_reason IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_oem_market_product"
      },
      {
        "kpi_name": "Average Discounted Price",
        "description": "Average discounted price for discounted products",
        "business_value": "Understanding the average price after discount for products",
        "sql_query": "SELECT AVG(min_price_info → discounted_price) FROM tb_oem_market_product WHERE min_price_info → discounted_price > 0",
        "output_format": "Single decimal value",
        "table_name": "tb_oem_market_product"
      }
    ]
  },
  "tb_payment_root": {
    "table_info": {
      "name": "tb_payment_root",
      "description": "결제 부모 테이블 (통합)",
      "total_fields": 14,
      "fields_used": 14,
      "foreign_keys": 3,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "payment_root_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/PK"
      },
      {
        "name": "user_id",
        "type": "type/Integer",
        "description": "결제한 사람의 user_id",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 218,
          "target_field": "user_id",
          "relationship": "FK to user_id"
        }
      },
      {
        "name": "partner_user_id",
        "type": "type/Integer",
        "description": "결제 받는 파트너의 user_id",
        "semantic_type": null
      },
      {
        "name": "partner_id",
        "type": "type/Integer",
        "description": "결제 받는 파트너의 partner_id",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 68,
          "target_field": "partner_id",
          "relationship": "FK to partner_id"
        }
      },
      {
        "name": "target_id",
        "type": "type/Integer",
        "description": "purchase_order_id (RFQ, 대출), order_id (마켓),  subscribe_application_id(파트너과금(정기결제))",
        "semantic_type": null
      },
      {
        "name": "total_amount",
        "type": "type/BigInteger",
        "description": "tb_quotation (cost) -> 고객이 결제한 총 금액",
        "semantic_type": null
      },
      {
        "name": "create_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "No description",
        "semantic_type": "type/CreationTimestamp"
      },
      {
        "name": "update_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "No description",
        "semantic_type": "type/UpdatedTimestamp"
      },
      {
        "name": "is_partner_read",
        "type": "type/Boolean",
        "description": "파트너 결제정보 확인 여부",
        "semantic_type": null
      },
      {
        "name": "is_client_read",
        "type": "type/Boolean",
        "description": "고객 결제정보 확인 여부",
        "semantic_type": null
      },
      {
        "name": "specification_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "거래명세서에 나오는 결제일(고객의 요청에 따라 파트너가 수정가능)",
        "semantic_type": null
      },
      {
        "name": "payment_service_type_id",
        "type": "type/Integer",
        "description": "결제관리수수료(1), 마켓(2)(삭제예정), 파트너과금(수기(빌링/키인)결제)(3) , OEM 마켓(4), OEM 마켓 반품배송비(5)",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 180,
          "target_field": "service_type_id",
          "relationship": "FK to service_type_id"
        }
      },
      {
        "name": "m_uuid",
        "type": "type/UUID",
        "description": "결제테이블 이관으로 인한 검증 컬럼",
        "semantic_type": null
      },
      {
        "name": "refund_commission",
        "type": "type/Integer",
        "description": "환불수수료 (파트너 구독 후 사용후 or 1일 경과시 결제금액의 10% 제외한 금액만 환불해준다 이 컬럼은 10% 금액을 표현한다)",
        "semantic_type": null
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total Payments",
        "description": "Total number of payments made",
        "business_value": "Gives an overview of the total transactions",
        "sql_query": "SELECT COUNT(payment_root_id) FROM tb_payment_root WHERE payment_root_id IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_payment_root"
      },
      {
        "kpi_name": "Total Payment Amount",
        "description": "Total amount of payments made",
        "business_value": "Shows the total revenue generated",
        "sql_query": "SELECT SUM(total_amount) FROM tb_payment_root WHERE total_amount IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_payment_root"
      },
      {
        "kpi_name": "Average Payment Amount",
        "description": "Average amount of payments made",
        "business_value": "Shows the average revenue per transaction",
        "sql_query": "SELECT AVG(total_amount) FROM tb_payment_root WHERE total_amount IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_payment_root"
      },
      {
        "kpi_name": "Total Payments per User",
        "description": "Total number of payments made per user",
        "business_value": "Shows user engagement",
        "sql_query": "SELECT user_id, COUNT(payment_root_id) FROM tb_payment_root WHERE user_id IS NOT NULL GROUP BY user_id",
        "output_format": "List of user_id with their respective payment count",
        "table_name": "tb_payment_root"
      },
      {
        "kpi_name": "Total Payments per Partner",
        "description": "Total number of payments received per partner",
        "business_value": "Shows partner engagement",
        "sql_query": "SELECT partner_id, COUNT(payment_root_id) FROM tb_payment_root WHERE partner_id IS NOT NULL GROUP BY partner_id",
        "output_format": "List of partner_id with their respective payment count",
        "table_name": "tb_payment_root"
      },
      {
        "kpi_name": "Total Payment Amount per User",
        "description": "Total amount of payments made per user",
        "business_value": "Shows user spending",
        "sql_query": "SELECT user_id, SUM(total_amount) FROM tb_payment_root WHERE user_id IS NOT NULL AND total_amount IS NOT NULL GROUP BY user_id",
        "output_format": "List of user_id with their respective total payment amount",
        "table_name": "tb_payment_root"
      },
      {
        "kpi_name": "Total Payment Amount per Partner",
        "description": "Total amount of payments received per partner",
        "business_value": "Shows partner revenue",
        "sql_query": "SELECT partner_id, SUM(total_amount) FROM tb_payment_root WHERE partner_id IS NOT NULL AND total_amount IS NOT NULL GROUP BY partner_id",
        "output_format": "List of partner_id with their respective total payment amount",
        "table_name": "tb_payment_root"
      },
      {
        "kpi_name": "Average Payment Amount per User",
        "description": "Average amount of payments made per user",
        "business_value": "Shows user spending behavior",
        "sql_query": "SELECT user_id, AVG(total_amount) FROM tb_payment_root WHERE user_id IS NOT NULL AND total_amount IS NOT NULL GROUP BY user_id",
        "output_format": "List of user_id with their respective average payment amount",
        "table_name": "tb_payment_root"
      },
      {
        "kpi_name": "Average Payment Amount per Partner",
        "description": "Average amount of payments received per partner",
        "business_value": "Shows partner revenue behavior",
        "sql_query": "SELECT partner_id, AVG(total_amount) FROM tb_payment_root WHERE partner_id IS NOT NULL AND total_amount IS NOT NULL GROUP BY partner_id",
        "output_format": "List of partner_id with their respective average payment amount",
        "table_name": "tb_payment_root"
      },
      {
        "kpi_name": "Total Refund Commission",
        "description": "Total amount of refund commission",
        "business_value": "Shows the total cost of refunds",
        "sql_query": "SELECT SUM(refund_commission) FROM tb_payment_root WHERE refund_commission IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_payment_root"
      },
      {
        "kpi_name": "Average Refund Commission",
        "description": "Average amount of refund commission",
        "business_value": "Shows the average cost of refunds",
        "sql_query": "SELECT AVG(refund_commission) FROM tb_payment_root WHERE refund_commission IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_payment_root"
      },
      {
        "kpi_name": "Total Refund Commission per User",
        "description": "Total amount of refund commission per user",
        "business_value": "Shows user refund behavior",
        "sql_query": "SELECT user_id, SUM(refund_commission) FROM tb_payment_root WHERE user_id IS NOT NULL AND refund_commission IS NOT NULL GROUP BY user_id",
        "output_format": "List of user_id with their respective total refund commission",
        "table_name": "tb_payment_root"
      },
      {
        "kpi_name": "Total Refund Commission per Partner",
        "description": "Total amount of refund commission per partner",
        "business_value": "Shows partner refund behavior",
        "sql_query": "SELECT partner_id, SUM(refund_commission) FROM tb_payment_root WHERE partner_id IS NOT NULL AND refund_commission IS NOT NULL GROUP BY partner_id",
        "output_format": "List of partner_id with their respective total refund commission",
        "table_name": "tb_payment_root"
      },
      {
        "kpi_name": "Average Refund Commission per User",
        "description": "Average amount of refund commission per user",
        "business_value": "Shows user refund behavior",
        "sql_query": "SELECT user_id, AVG(refund_commission) FROM tb_payment_root WHERE user_id IS NOT NULL AND refund_commission IS NOT NULL GROUP BY user_id",
        "output_format": "List of user_id with their respective average refund commission",
        "table_name": "tb_payment_root"
      },
      {
        "kpi_name": "Average Refund Commission per Partner",
        "description": "Average amount of refund commission per partner",
        "business_value": "Shows partner refund behavior",
        "sql_query": "SELECT partner_id, AVG(refund_commission) FROM tb_payment_root WHERE partner_id IS NOT NULL AND refund_commission IS NOT NULL GROUP BY partner_id",
        "output_format": "List of partner_id with their respective average refund commission",
        "table_name": "tb_payment_root"
      },
      {
        "kpi_name": "Total Payments by Service Type",
        "description": "Total number of payments made per service type",
        "business_value": "Shows service type popularity",
        "sql_query": "SELECT payment_service_type_id, COUNT(payment_root_id) FROM tb_payment_root WHERE payment_service_type_id IS NOT NULL GROUP BY payment_service_type_id",
        "output_format": "List of service_type_id with their respective payment count",
        "table_name": "tb_payment_root"
      },
      {
        "kpi_name": "Total Payment Amount by Service Type",
        "description": "Total amount of payments made per service type",
        "business_value": "Shows revenue per service type",
        "sql_query": "SELECT payment_service_type_id, SUM(total_amount) FROM tb_payment_root WHERE payment_service_type_id IS NOT NULL AND total_amount IS NOT NULL GROUP BY payment_service_type_id",
        "output_format": "List of service_type_id with their respective total payment amount",
        "table_name": "tb_payment_root"
      },
      {
        "kpi_name": "Average Payment Amount by Service Type",
        "description": "Average amount of payments made per service type",
        "business_value": "Shows average revenue per service type",
        "sql_query": "SELECT payment_service_type_id, AVG(total_amount) FROM tb_payment_root WHERE payment_service_type_id IS NOT NULL AND total_amount IS NOT NULL GROUP BY payment_service_type_id",
        "output_format": "List of service_type_id with their respective average payment amount",
        "table_name": "tb_payment_root"
      },
      {
        "kpi_name": "Total Refund Commission by Service Type",
        "description": "Total amount of refund commission per service type",
        "business_value": "Shows cost of refunds per service type",
        "sql_query": "SELECT payment_service_type_id, SUM(refund_commission) FROM tb_payment_root WHERE payment_service_type_id IS NOT NULL AND refund_commission IS NOT NULL GROUP BY payment_service_type_id",
        "output_format": "List of service_type_id with their respective total refund commission",
        "table_name": "tb_payment_root"
      },
      {
        "kpi_name": "Average Refund Commission by Service Type",
        "description": "Average amount of refund commission per service type",
        "business_value": "Shows average cost of refunds per service type",
        "sql_query": "SELECT payment_service_type_id, AVG(refund_commission) FROM tb_payment_root WHERE payment_service_type_id IS NOT NULL AND refund_commission IS NOT NULL GROUP BY payment_service_type_id",
        "output_format": "List of service_type_id with their respective average refund commission",
        "table_name": "tb_payment_root"
      }
    ]
  },
  "tb_partner": {
    "table_info": {
      "name": "tb_partner",
      "description": "파트너 상세 정보",
      "total_fields": 55,
      "fields_used": 20,
      "foreign_keys": 3,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "partner_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/PK"
      },
      {
        "name": "partner_name",
        "type": "type/Text",
        "description": "파트너 이름",
        "semantic_type": null
      },
      {
        "name": "ein",
        "type": "type/Text",
        "description": "사업자등록번호(employer identification number)",
        "semantic_type": null
      },
      {
        "name": "ceo",
        "type": "type/Text",
        "description": "대표자명",
        "semantic_type": null
      },
      {
        "name": "address",
        "type": "type/Text",
        "description": "주소",
        "semantic_type": null
      },
      {
        "name": "address_detail",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "founded_in",
        "type": "type/Text",
        "description": "설립년도",
        "semantic_type": "type/Category"
      },
      {
        "name": "employees",
        "type": "type/Integer",
        "description": "사원수",
        "semantic_type": null
      },
      {
        "name": "introduction",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "factory_address",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "factory_address_detail",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "contact_cellphone",
        "type": "type/Text",
        "description": "연락처",
        "semantic_type": null
      },
      {
        "name": "create_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "No description",
        "semantic_type": "type/CreationTimestamp"
      },
      {
        "name": "update_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "No description",
        "semantic_type": "type/UpdatedTimestamp"
      },
      {
        "name": "approve_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "승인일",
        "semantic_type": null
      },
      {
        "name": "bo_user_id",
        "type": "type/Text",
        "description": "기업 승인한 BO user id",
        "semantic_type": null
      },
      {
        "name": "business_name",
        "type": "type/Text",
        "description": "업태명 ",
        "semantic_type": null
      },
      {
        "name": "industry_name",
        "type": "type/Text",
        "description": "업종명 or 종목명",
        "semantic_type": null
      },
      {
        "name": "status_type_id",
        "type": "type/Integer",
        "description": "파트너 상태 ( 대기, 승인요청,승인됨(등록됨) )",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 178,
          "target_field": "status_type_id",
          "relationship": "FK to status_type_id"
        }
      },
      {
        "name": "zip_code",
        "type": "type/Text",
        "description": "우편번호",
        "semantic_type": "type/ZipCode"
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total Number of Partners",
        "description": "This KPI measures the total number of partners in the database.",
        "business_value": "Understanding the total number of partners is crucial for business planning and strategy development.",
        "sql_query": "SELECT COUNT(*) FROM tb_partner WHERE partner_id IS NOT NULL",
        "output_format": "Single numeric value representing the total number of partners",
        "table_name": "tb_partner"
      },
      {
        "kpi_name": "Number of Employees per Partner",
        "description": "This KPI measures the number of employees for each partner.",
        "business_value": "This KPI provides insights into the size of each partner's business.",
        "sql_query": "SELECT partner_id, COUNT(employees) FROM tb_partner GROUP BY partner_id",
        "output_format": "List of partner IDs with corresponding employee counts",
        "table_name": "tb_partner"
      },
      {
        "kpi_name": "Number of Partners by Industry",
        "description": "This KPI measures the distribution of partners across different industries.",
        "business_value": "This KPI helps understand the business's exposure to different industries.",
        "sql_query": "SELECT industry_name, COUNT(partner_id) FROM tb_partner GROUP BY industry_name",
        "output_format": "List of industries with corresponding partner counts",
        "table_name": "tb_partner"
      },
      {
        "kpi_name": "Number of Partners by Status",
        "description": "This KPI measures the distribution of partners based on their status.",
        "business_value": "This KPI helps understand the current state of business relationships with partners.",
        "sql_query": "SELECT status_type_id, COUNT(partner_id) FROM tb_partner GROUP BY status_type_id",
        "output_format": "List of status types with corresponding partner counts",
        "table_name": "tb_partner"
      },
      {
        "kpi_name": "Average Age of Partnerships",
        "description": "This KPI measures the average duration of partnerships.",
        "business_value": "This KPI provides insights into the stability and longevity of business relationships.",
        "sql_query": "SELECT AVG(DATEDIFF(CURRENT_DATE, create_date)) FROM tb_partner WHERE create_date IS NOT NULL AND create_date > '1900-01-01'",
        "output_format": "Single numeric value representing the average age of partnerships in days",
        "table_name": "tb_partner"
      },
      {
        "kpi_name": "Number of New Partners per Month",
        "description": "This KPI measures the number of new partners added each month.",
        "business_value": "This KPI helps track the growth of the business's network of partners.",
        "sql_query": "SELECT DATE_TRUNC('month', create_date) AS month, COUNT(partner_id) FROM tb_partner WHERE create_date IS NOT NULL AND create_date > '1900-01-01' GROUP BY month",
        "output_format": "List of months with corresponding counts of new partners",
        "table_name": "tb_partner"
      },
      {
        "kpi_name": "Number of Partners by CEO",
        "description": "This KPI measures the distribution of partners by CEO.",
        "business_value": "This KPI provides insights into the leadership of partner organizations.",
        "sql_query": "SELECT ceo, COUNT(partner_id) FROM tb_partner GROUP BY ceo",
        "output_format": "List of CEOs with corresponding partner counts",
        "table_name": "tb_partner"
      },
      {
        "kpi_name": "Number of Partners by Zip Code",
        "description": "This KPI measures the distribution of partners by zip code.",
        "business_value": "This KPI provides insights into the geographical distribution of partners.",
        "sql_query": "SELECT zip_code, COUNT(partner_id) FROM tb_partner GROUP BY zip_code",
        "output_format": "List of zip codes with corresponding partner counts",
        "table_name": "tb_partner"
      },
      {
        "kpi_name": "Number of Partners by Year Founded",
        "description": "This KPI measures the distribution of partners by the year they were founded.",
        "business_value": "This KPI provides insights into the age of partner organizations.",
        "sql_query": "SELECT founded_in, COUNT(partner_id) FROM tb_partner GROUP BY founded_in",
        "output_format": "List of years with corresponding partner counts",
        "table_name": "tb_partner"
      },
      {
        "kpi_name": "Number of Partners by Business Name",
        "description": "This KPI measures the distribution of partners by business name.",
        "business_value": "This KPI provides insights into the diversity of partner businesses.",
        "sql_query": "SELECT business_name, COUNT(partner_id) FROM tb_partner GROUP BY business_name",
        "output_format": "List of business names with corresponding partner counts",
        "table_name": "tb_partner"
      },
      {
        "kpi_name": "Number of Partners by Contact Cellphone",
        "description": "This KPI measures the distribution of partners by contact cellphone.",
        "business_value": "This KPI provides insights into the contact information of partners.",
        "sql_query": "SELECT contact_cellphone, COUNT(partner_id) FROM tb_partner GROUP BY contact_cellphone",
        "output_format": "List of contact cellphones with corresponding partner counts",
        "table_name": "tb_partner"
      },
      {
        "kpi_name": "Number of Partners by Address",
        "description": "This KPI measures the distribution of partners by address.",
        "business_value": "This KPI provides insights into the geographical distribution of partners.",
        "sql_query": "SELECT address, COUNT(partner_id) FROM tb_partner GROUP BY address",
        "output_format": "List of addresses with corresponding partner counts",
        "table_name": "tb_partner"
      },
      {
        "kpi_name": "Number of Partners by Factory Address",
        "description": "This KPI measures the distribution of partners by factory address.",
        "business_value": "This KPI provides insights into the location of partner factories.",
        "sql_query": "SELECT factory_address, COUNT(partner_id) FROM tb_partner GROUP BY factory_address",
        "output_format": "List of factory addresses with corresponding partner counts",
        "table_name": "tb_partner"
      },
      {
        "kpi_name": "Number of Partners by Approval Date",
        "description": "This KPI measures the distribution of partners by approval date.",
        "business_value": "This KPI provides insights into the timeline of partner approvals.",
        "sql_query": "SELECT DATE_TRUNC('month', approve_date) AS month, COUNT(partner_id) FROM tb_partner WHERE approve_date IS NOT NULL AND approve_date > '1900-01-01' GROUP BY month",
        "output_format": "List of months with corresponding counts of partner approvals",
        "table_name": "tb_partner"
      },
      {
        "kpi_name": "Number of Partners by BO User ID",
        "description": "This KPI measures the distribution of partners by BO user ID.",
        "business_value": "This KPI provides insights into the users responsible for managing partners.",
        "sql_query": "SELECT bo_user_id, COUNT(partner_id) FROM tb_partner GROUP BY bo_user_id",
        "output_format": "List of BO user IDs with corresponding partner counts",
        "table_name": "tb_partner"
      }
    ]
  },
  "tb_user_info": {
    "table_info": {
      "name": "tb_user_info",
      "description": "고객 상세 정보 (주소가 나중 정보 추가고 1개면 여기있을 필요없지 않을까?, 그리고 배송지가 있는데 이게 필요할까?)",
      "total_fields": 8,
      "fields_used": 8,
      "foreign_keys": 1,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "user_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 218,
          "target_field": "user_id",
          "relationship": "FK to user_id"
        }
      },
      {
        "name": "address",
        "type": "type/Text",
        "description": "주소",
        "semantic_type": null
      },
      {
        "name": "address_detail",
        "type": "type/Text",
        "description": "상세주소",
        "semantic_type": null
      },
      {
        "name": "create_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "생성일",
        "semantic_type": "type/CreationTimestamp"
      },
      {
        "name": "update_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "갱신일",
        "semantic_type": "type/UpdatedTimestamp"
      },
      {
        "name": "zip_code",
        "type": "type/Text",
        "description": "우편번호",
        "semantic_type": "type/ZipCode"
      },
      {
        "name": "last_login_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "마지막 로그인 시간",
        "semantic_type": null
      },
      {
        "name": "area_code",
        "type": "type/Text",
        "description": "지역코드",
        "semantic_type": "type/Category"
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total Users",
        "description": "Total number of users",
        "business_value": "Understanding the total user base",
        "sql_query": "SELECT COUNT(user_id) FROM tb_user_info WHERE user_id IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_user_info"
      },
      {
        "kpi_name": "New Users",
        "description": "Number of new users in the last 30 days",
        "business_value": "Tracking user growth",
        "sql_query": "SELECT COUNT(user_id) FROM tb_user_info WHERE create_date > NOW() - INTERVAL '30 days'",
        "output_format": "Single numeric value",
        "table_name": "tb_user_info"
      },
      {
        "kpi_name": "Active Users",
        "description": "Number of users who logged in the last 30 days",
        "business_value": "Understanding active user base",
        "sql_query": "SELECT COUNT(user_id) FROM tb_user_info WHERE last_login_date > NOW() - INTERVAL '30 days'",
        "output_format": "Single numeric value",
        "table_name": "tb_user_info"
      },
      {
        "kpi_name": "User Churn Rate",
        "description": "Percentage of users who have not logged in for the last 90 days",
        "business_value": "Understanding user retention and churn",
        "sql_query": "SELECT COUNT(CASE WHEN last_login_date < NOW() - INTERVAL '90 days' THEN 1 END) / COUNT(*) FROM tb_user_info",
        "output_format": "Percentage",
        "table_name": "tb_user_info"
      },
      {
        "kpi_name": "User Area Distribution",
        "description": "Distribution of users by area code",
        "business_value": "Understanding geographical distribution of users",
        "sql_query": "SELECT area_code, COUNT(user_id) FROM tb_user_info GROUP BY area_code",
        "output_format": "List of area codes with corresponding user counts",
        "table_name": "tb_user_info"
      },
      {
        "kpi_name": "Average User Lifespan",
        "description": "Average number of days between account creation and last login",
        "business_value": "Understanding user engagement over time",
        "sql_query": "SELECT AVG(DATEDIFF(last_login_date, create_date)) FROM tb_user_info WHERE last_login_date IS NOT NULL AND create_date IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_user_info"
      },
      {
        "kpi_name": "User Update Frequency",
        "description": "Average number of days between account updates",
        "business_value": "Understanding frequency of user data updates",
        "sql_query": "SELECT AVG(DATEDIFF(update_date, create_date)) FROM tb_user_info WHERE update_date IS NOT NULL AND create_date IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_user_info"
      },
      {
        "kpi_name": "User Login Frequency",
        "description": "Average number of days between logins",
        "business_value": "Understanding user login frequency",
        "sql_query": "SELECT AVG(DATEDIFF(last_login_date, create_date)) FROM tb_user_info WHERE last_login_date IS NOT NULL AND create_date IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_user_info"
      },
      {
        "kpi_name": "User Login Recency",
        "description": "Number of days since last login for each user",
        "business_value": "Understanding user login recency",
        "sql_query": "SELECT user_id, DATEDIFF(NOW(), last_login_date) FROM tb_user_info WHERE last_login_date IS NOT NULL",
        "output_format": "List of user IDs with corresponding days since last login",
        "table_name": "tb_user_info"
      },
      {
        "kpi_name": "User Address Completeness",
        "description": "Percentage of users with complete address information",
        "business_value": "Understanding completeness of user data",
        "sql_query": "SELECT COUNT(CASE WHEN address IS NOT NULL AND address_detail IS NOT NULL THEN 1 END) / COUNT(*) FROM tb_user_info",
        "output_format": "Percentage",
        "table_name": "tb_user_info"
      },
      {
        "kpi_name": "User Zip Code Completeness",
        "description": "Percentage of users with zip code information",
        "business_value": "Understanding completeness of user data",
        "sql_query": "SELECT COUNT(CASE WHEN zip_code IS NOT NULL THEN 1 END) / COUNT(*) FROM tb_user_info",
        "output_format": "Percentage",
        "table_name": "tb_user_info"
      },
      {
        "kpi_name": "User Area Code Completeness",
        "description": "Percentage of users with area code information",
        "business_value": "Understanding completeness of user data",
        "sql_query": "SELECT COUNT(CASE WHEN area_code IS NOT NULL THEN 1 END) / COUNT(*) FROM tb_user_info",
        "output_format": "Percentage",
        "table_name": "tb_user_info"
      },
      {
        "kpi_name": "User Data Update Recency",
        "description": "Number of days since last data update for each user",
        "business_value": "Understanding user data update recency",
        "sql_query": "SELECT user_id, DATEDIFF(NOW(), update_date) FROM tb_user_info WHERE update_date IS NOT NULL",
        "output_format": "List of user IDs with corresponding days since last data update",
        "table_name": "tb_user_info"
      },
      {
        "kpi_name": "User Data Update Frequency",
        "description": "Average number of days between data updates for each user",
        "business_value": "Understanding user data update frequency",
        "sql_query": "SELECT user_id, AVG(DATEDIFF(update_date, create_date)) FROM tb_user_info WHERE update_date IS NOT NULL AND create_date IS NOT NULL GROUP BY user_id",
        "output_format": "List of user IDs with corresponding average days between data updates",
        "table_name": "tb_user_info"
      },
      {
        "kpi_name": "User Account Age",
        "description": "Number of days since account creation for each user",
        "business_value": "Understanding user account age",
        "sql_query": "SELECT user_id, DATEDIFF(NOW(), create_date) FROM tb_user_info WHERE create_date IS NOT NULL",
        "output_format": "List of user IDs with corresponding account age in days",
        "table_name": "tb_user_info"
      }
    ]
  },
  "tb_market_category": {
    "table_info": {
      "name": "tb_market_category",
      "description": "마켓 상품 카테고리",
      "total_fields": 7,
      "fields_used": 7,
      "foreign_keys": 0,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "category_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/PK"
      },
      {
        "name": "category_name",
        "type": "type/Text",
        "description": "카테고리 이름",
        "semantic_type": "type/Category"
      },
      {
        "name": "parent_category_id",
        "type": "type/Integer",
        "description": "부모 카테고리",
        "semantic_type": null
      },
      {
        "name": "slug",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "img_url",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/URL"
      },
      {
        "name": "is_display",
        "type": "type/Boolean",
        "description": "사용자 공개 여부",
        "semantic_type": null
      },
      {
        "name": "sort",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": null
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total Categories",
        "description": "Total number of categories in the market",
        "business_value": "Understanding the variety of categories available",
        "sql_query": "SELECT COUNT(*) FROM tb_market_category WHERE category_id IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_market_category"
      },
      {
        "kpi_name": "Total Displayed Categories",
        "description": "Total number of categories displayed to the user",
        "business_value": "Understanding the variety of categories exposed to the user",
        "sql_query": "SELECT COUNT(*) FROM tb_market_category WHERE is_display = TRUE",
        "output_format": "Single integer value",
        "table_name": "tb_market_category"
      },
      {
        "kpi_name": "Total Hidden Categories",
        "description": "Total number of categories not displayed to the user",
        "business_value": "Identifying potential categories to expose to the user",
        "sql_query": "SELECT COUNT(*) FROM tb_market_category WHERE is_display = FALSE",
        "output_format": "Single integer value",
        "table_name": "tb_market_category"
      },
      {
        "kpi_name": "Top Parent Categories",
        "description": "Top parent categories based on the number of child categories",
        "business_value": "Identifying the most diverse parent categories",
        "sql_query": "SELECT parent_category_id, COUNT(*) FROM tb_market_category GROUP BY parent_category_id ORDER BY COUNT(*) DESC",
        "output_format": "List of parent categories with their child count",
        "table_name": "tb_market_category"
      },
      {
        "kpi_name": "Orphan Categories",
        "description": "Categories that do not have a parent category",
        "business_value": "Identifying potential data integrity issues",
        "sql_query": "SELECT COUNT(*) FROM tb_market_category WHERE parent_category_id IS NULL",
        "output_format": "Single integer value",
        "table_name": "tb_market_category"
      },
      {
        "kpi_name": "Categories Without Images",
        "description": "Number of categories without an associated image",
        "business_value": "Identifying potential areas for improving user experience",
        "sql_query": "SELECT COUNT(*) FROM tb_market_category WHERE img_url IS NULL",
        "output_format": "Single integer value",
        "table_name": "tb_market_category"
      },
      {
        "kpi_name": "Categories With Images",
        "description": "Number of categories with an associated image",
        "business_value": "Understanding the visual appeal of the market",
        "sql_query": "SELECT COUNT(*) FROM tb_market_category WHERE img_url IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_market_category"
      },
      {
        "kpi_name": "Average Category Sort Value",
        "description": "Average sort value of all categories",
        "business_value": "Understanding the average priority of categories",
        "sql_query": "SELECT AVG(sort) FROM tb_market_category WHERE sort IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_market_category"
      },
      {
        "kpi_name": "Categories Above Average Sort Value",
        "description": "Number of categories with sort value above the average",
        "business_value": "Identifying high priority categories",
        "sql_query": "SELECT COUNT(*) FROM tb_market_category WHERE sort > (SELECT AVG(sort) FROM tb_market_category WHERE sort IS NOT NULL)",
        "output_format": "Single integer value",
        "table_name": "tb_market_category"
      },
      {
        "kpi_name": "Categories Below Average Sort Value",
        "description": "Number of categories with sort value below the average",
        "business_value": "Identifying low priority categories",
        "sql_query": "SELECT COUNT(*) FROM tb_market_category WHERE sort < (SELECT AVG(sort) FROM tb_market_category WHERE sort IS NOT NULL)",
        "output_format": "Single integer value",
        "table_name": "tb_market_category"
      },
      {
        "kpi_name": "Unique Slugs",
        "description": "Number of unique slugs",
        "business_value": "Identifying potential data integrity issues",
        "sql_query": "SELECT COUNT(DISTINCT slug) FROM tb_market_category WHERE slug IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_market_category"
      },
      {
        "kpi_name": "Duplicate Slugs",
        "description": "Number of duplicate slugs",
        "business_value": "Identifying potential data integrity issues",
        "sql_query": "SELECT COUNT(*) - COUNT(DISTINCT slug) FROM tb_market_category WHERE slug IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_market_category"
      },
      {
        "kpi_name": "Categories Without Slugs",
        "description": "Number of categories without a slug",
        "business_value": "Identifying potential areas for improving SEO",
        "sql_query": "SELECT COUNT(*) FROM tb_market_category WHERE slug IS NULL",
        "output_format": "Single integer value",
        "table_name": "tb_market_category"
      },
      {
        "kpi_name": "Categories With Slugs",
        "description": "Number of categories with a slug",
        "business_value": "Understanding the SEO readiness of the market",
        "sql_query": "SELECT COUNT(*) FROM tb_market_category WHERE slug IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_market_category"
      },
      {
        "kpi_name": "Categories Without Parent",
        "description": "Number of categories without a parent category",
        "business_value": "Identifying potential areas for improving category structure",
        "sql_query": "SELECT COUNT(*) FROM tb_market_category WHERE parent_category_id IS NULL",
        "output_format": "Single integer value",
        "table_name": "tb_market_category"
      },
      {
        "kpi_name": "Categories With Parent",
        "description": "Number of categories with a parent category",
        "business_value": "Understanding the structure of the market",
        "sql_query": "SELECT COUNT(*) FROM tb_market_category WHERE parent_category_id IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_market_category"
      },
      {
        "kpi_name": "Average Child Categories",
        "description": "Average number of child categories per parent category",
        "business_value": "Understanding the average diversity of parent categories",
        "sql_query": "SELECT AVG(child_count) FROM (SELECT parent_category_id, COUNT(*) as child_count FROM tb_market_category GROUP BY parent_category_id) as subquery",
        "output_format": "Single decimal value",
        "table_name": "tb_market_category"
      },
      {
        "kpi_name": "Parent Categories Without Children",
        "description": "Number of parent categories without any child categories",
        "business_value": "Identifying potential areas for improving category structure",
        "sql_query": "SELECT COUNT(*) FROM (SELECT parent_category_id, COUNT(*) as child_count FROM tb_market_category GROUP BY parent_category_id) as subquery WHERE child_count = 0",
        "output_format": "Single integer value",
        "table_name": "tb_market_category"
      },
      {
        "kpi_name": "Parent Categories With Children",
        "description": "Number of parent categories with at least one child category",
        "business_value": "Understanding the structure of the market",
        "sql_query": "SELECT COUNT(*) FROM (SELECT parent_category_id, COUNT(*) as child_count FROM tb_market_category GROUP BY parent_category_id) as subquery WHERE child_count > 0",
        "output_format": "Single integer value",
        "table_name": "tb_market_category"
      },
      {
        "kpi_name": "Top Categories By Sort Value",
        "description": "Top 5 categories based on sort value",
        "business_value": "Identifying the highest priority categories",
        "sql_query": "SELECT category_name, sort FROM tb_market_category ORDER BY sort DESC LIMIT 5",
        "output_format": "List of categories with their sort value",
        "table_name": "tb_market_category"
      }
    ]
  },
  "tb_statistics_partner": {
    "table_info": {
      "name": "tb_statistics_partner",
      "description": "파트너 통계",
      "total_fields": 21,
      "fields_used": 20,
      "foreign_keys": 0,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "partner_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/PK"
      },
      {
        "name": "total_deal_cnt",
        "type": "type/Integer",
        "description": "누적거래건수 (발주 상태 구매확정 기준)",
        "semantic_type": null
      },
      {
        "name": "total_deal_amount",
        "type": "type/BigInteger",
        "description": "누적거래금액 (발주 상태 구매확정 기준) ",
        "semantic_type": null
      },
      {
        "name": "avg_deal_amount",
        "type": "type/BigInteger",
        "description": "평균거래금액 (발주 상태 구매확정 기준)",
        "semantic_type": null
      },
      {
        "name": "user_redeal_cnt",
        "type": "type/Integer",
        "description": "재거래 고객수(2회이상)",
        "semantic_type": null
      },
      {
        "name": "redeal_rate",
        "type": "type/Integer",
        "description": "재거래율(2회이상)",
        "semantic_type": null
      },
      {
        "name": "quot_cnt",
        "type": "type/Integer",
        "description": "발송한 견적서 수 (파트너가 보낸 tb_quotation에 있는 모든 견적서 수)\n(tq.is_available 값 상관없음)",
        "semantic_type": null
      },
      {
        "name": "po_complete_cnt",
        "type": "type/Integer",
        "description": "발주 완료수(승인한 발주건수)\n-> 발주상태 제조시작 이후 모든 발주서 카운트 (제조시작, 배송, 구매확정)\n단, (구)발주서는 전부 제외 (poStatus : CREATED)",
        "semantic_type": null
      },
      {
        "name": "po_complete_rate",
        "type": "type/Integer",
        "description": "발주성공률 - 보낸 견적서 대비 발주를 성공할 확률 (po_complete_cnt / quot_cnt)\nsp_statistics_partner 내부 계산",
        "semantic_type": null
      },
      {
        "name": "profile_view_cnt",
        "type": "type/Integer",
        "description": "프로필 열람 수 (tb_partner_seen 카운트)",
        "semantic_type": null
      },
      {
        "name": "profile_complete",
        "type": "type/Integer",
        "description": "프로필 완성도 (sp_statistics_partner 내부 계산)",
        "semantic_type": null
      },
      {
        "name": "dibs_cnt",
        "type": "type/Integer",
        "description": "찜 받은 개수",
        "semantic_type": null
      },
      {
        "name": "total_review_score",
        "type": "type/Integer",
        "description": "리뷰 별점 총합",
        "semantic_type": "type/Score"
      },
      {
        "name": "total_review_cnt",
        "type": "type/Integer",
        "description": "리뷰 누적 개수",
        "semantic_type": null
      },
      {
        "name": "avg_review_score",
        "type": "type/Float",
        "description": "리뷰 누적 평점",
        "semantic_type": "type/Score"
      },
      {
        "name": "chat_cnt",
        "type": "type/Integer",
        "description": "채팅수",
        "semantic_type": null
      },
      {
        "name": "avg_chat_response_second",
        "type": "type/Integer",
        "description": "채팅평균응답시간(초)",
        "semantic_type": null
      },
      {
        "name": "update_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "No description",
        "semantic_type": "type/UpdatedTimestamp"
      },
      {
        "name": "total_portfolio_cnt",
        "type": "type/Integer",
        "description": "포트폴리오 수",
        "semantic_type": null
      },
      {
        "name": "id",
        "type": "type/UUID",
        "description": "No description",
        "semantic_type": "type/PK"
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total Deals",
        "description": "Total number of deals made by each partner",
        "business_value": "Helps to identify the most active partners",
        "sql_query": "SELECT partner_id, SUM(total_deal_cnt) FROM tb_statistics_partner GROUP BY partner_id;",
        "output_format": "List of partners with their total deal count",
        "table_name": "tb_statistics_partner"
      },
      {
        "kpi_name": "Average Deal Amount",
        "description": "Average deal amount for each partner",
        "business_value": "Helps to identify the partners with higher deal values",
        "sql_query": "SELECT partner_id, AVG(avg_deal_amount) FROM tb_statistics_partner GROUP BY partner_id;",
        "output_format": "List of partners with their average deal amount",
        "table_name": "tb_statistics_partner"
      },
      {
        "kpi_name": "Redeal Rate",
        "description": "Percentage of deals that are redeals for each partner",
        "business_value": "Helps to identify the partners with higher customer retention",
        "sql_query": "SELECT partner_id, (SUM(user_redeal_cnt) / SUM(total_deal_cnt)) * 100 as redeal_rate FROM tb_statistics_partner GROUP BY partner_id;",
        "output_format": "List of partners with their redeal rate",
        "table_name": "tb_statistics_partner"
      },
      {
        "kpi_name": "Quotation to Purchase Order Conversion Rate",
        "description": "Percentage of quotations that are converted into purchase orders",
        "business_value": "Helps to identify the efficiency of partners in converting quotations into orders",
        "sql_query": "SELECT partner_id, (SUM(po_complete_cnt) / SUM(quot_cnt)) * 100 as po_conversion_rate FROM tb_statistics_partner GROUP BY partner_id;",
        "output_format": "List of partners with their quotation to purchase order conversion rate",
        "table_name": "tb_statistics_partner"
      },
      {
        "kpi_name": "Profile View Count",
        "description": "Number of times the profile of each partner has been viewed",
        "business_value": "Helps to identify the most popular partners",
        "sql_query": "SELECT partner_id, SUM(profile_view_cnt) FROM tb_statistics_partner GROUP BY partner_id;",
        "output_format": "List of partners with their profile view count",
        "table_name": "tb_statistics_partner"
      },
      {
        "kpi_name": "Average Review Score",
        "description": "Average review score for each partner",
        "business_value": "Helps to identify the partners with the highest customer satisfaction",
        "sql_query": "SELECT partner_id, AVG(avg_review_score) FROM tb_statistics_partner GROUP BY partner_id;",
        "output_format": "List of partners with their average review score",
        "table_name": "tb_statistics_partner"
      },
      {
        "kpi_name": "Chat Count",
        "description": "Number of chats initiated by each partner",
        "business_value": "Helps to identify the most communicative partners",
        "sql_query": "SELECT partner_id, SUM(chat_cnt) FROM tb_statistics_partner GROUP BY partner_id;",
        "output_format": "List of partners with their chat count",
        "table_name": "tb_statistics_partner"
      },
      {
        "kpi_name": "Average Chat Response Time",
        "description": "Average response time for each partner in chats",
        "business_value": "Helps to identify the partners with the fastest response times",
        "sql_query": "SELECT partner_id, AVG(avg_chat_response_second) FROM tb_statistics_partner GROUP BY partner_id;",
        "output_format": "List of partners with their average chat response time",
        "table_name": "tb_statistics_partner"
      },
      {
        "kpi_name": "Total Portfolio Count",
        "description": "Total number of portfolios for each partner",
        "business_value": "Helps to identify the partners with the most diverse offerings",
        "sql_query": "SELECT partner_id, SUM(total_portfolio_cnt) FROM tb_statistics_partner GROUP BY partner_id;",
        "output_format": "List of partners with their total portfolio count",
        "table_name": "tb_statistics_partner"
      },
      {
        "kpi_name": "Total Review Count",
        "description": "Total number of reviews received by each partner",
        "business_value": "Helps to identify the most reviewed partners",
        "sql_query": "SELECT partner_id, SUM(total_review_cnt) FROM tb_statistics_partner GROUP BY partner_id;",
        "output_format": "List of partners with their total review count",
        "table_name": "tb_statistics_partner"
      },
      {
        "kpi_name": "Dibs Count",
        "description": "Total number of 'dibs' received by each partner",
        "business_value": "Helps to identify the most favored partners",
        "sql_query": "SELECT partner_id, SUM(dibs_cnt) FROM tb_statistics_partner GROUP BY partner_id;",
        "output_format": "List of partners with their total 'dibs' count",
        "table_name": "tb_statistics_partner"
      },
      {
        "kpi_name": "Profile Completion Rate",
        "description": "Percentage of profile completion for each partner",
        "business_value": "Helps to identify the partners with the most complete profiles",
        "sql_query": "SELECT partner_id, AVG(profile_complete) FROM tb_statistics_partner GROUP BY partner_id;",
        "output_format": "List of partners with their profile completion rate",
        "table_name": "tb_statistics_partner"
      },
      {
        "kpi_name": "Total Deal Amount",
        "description": "Total deal amount for each partner",
        "business_value": "Helps to identify the partners with the highest deal values",
        "sql_query": "SELECT partner_id, SUM(total_deal_amount) FROM tb_statistics_partner GROUP BY partner_id;",
        "output_format": "List of partners with their total deal amount",
        "table_name": "tb_statistics_partner"
      },
      {
        "kpi_name": "Purchase Order Completion Rate",
        "description": "Percentage of purchase orders that are completed by each partner",
        "business_value": "Helps to identify the efficiency of partners in completing orders",
        "sql_query": "SELECT partner_id, (SUM(po_complete_cnt) / SUM(total_deal_cnt)) * 100 as po_completion_rate FROM tb_statistics_partner GROUP BY partner_id;",
        "output_format": "List of partners with their purchase order completion rate",
        "table_name": "tb_statistics_partner"
      },
      {
        "kpi_name": "Average Review Score per Deal",
        "description": "Average review score per deal for each partner",
        "business_value": "Helps to identify the partners with the highest customer satisfaction per deal",
        "sql_query": "SELECT partner_id, (SUM(total_review_score) / SUM(total_deal_cnt)) as avg_review_score_per_deal FROM tb_statistics_partner GROUP BY partner_id;",
        "output_format": "List of partners with their average review score per deal",
        "table_name": "tb_statistics_partner"
      }
    ]
  },
  "tb_market_seller": {
    "table_info": {
      "name": "tb_market_seller",
      "description": "마켓 판매자",
      "total_fields": 6,
      "fields_used": 6,
      "foreign_keys": 2,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "seller_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/PK"
      },
      {
        "name": "name",
        "type": "type/Text",
        "description": "판매측 회사명",
        "semantic_type": "type/Name"
      },
      {
        "name": "user_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 218,
          "target_field": "user_id",
          "relationship": "FK to user_id"
        }
      },
      {
        "name": "partner_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 68,
          "target_field": "partner_id",
          "relationship": "FK to partner_id"
        }
      },
      {
        "name": "address",
        "type": "type/Text",
        "description": "회사 주소",
        "semantic_type": null
      },
      {
        "name": "address_detail",
        "type": "type/Text",
        "description": "회사 주소 상세",
        "semantic_type": null
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total Number of Sellers",
        "description": "Count of all sellers",
        "business_value": "Gives the total number of sellers in the market",
        "sql_query": "SELECT COUNT(*) FROM tb_market_seller WHERE seller_id IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_market_seller"
      },
      {
        "kpi_name": "Unique User Sellers",
        "description": "Count of unique users who are sellers",
        "business_value": "Shows the number of unique users who are selling products",
        "sql_query": "SELECT COUNT(DISTINCT user_id) FROM tb_market_seller WHERE user_id IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_market_seller"
      },
      {
        "kpi_name": "Unique Partner Sellers",
        "description": "Count of unique partners who are sellers",
        "business_value": "Shows the number of unique partners who are selling products",
        "sql_query": "SELECT COUNT(DISTINCT partner_id) FROM tb_market_seller WHERE partner_id IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_market_seller"
      },
      {
        "kpi_name": "Sellers Without Address",
        "description": "Count of sellers without an address",
        "business_value": "Indicates the number of sellers who have not provided an address",
        "sql_query": "SELECT COUNT(*) FROM tb_market_seller WHERE address IS NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_market_seller"
      },
      {
        "kpi_name": "Sellers Without Detailed Address",
        "description": "Count of sellers without a detailed address",
        "business_value": "Indicates the number of sellers who have not provided a detailed address",
        "sql_query": "SELECT COUNT(*) FROM tb_market_seller WHERE address_detail IS NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_market_seller"
      },
      {
        "kpi_name": "Sellers With Complete Address",
        "description": "Count of sellers with both address and detailed address",
        "business_value": "Indicates the number of sellers who have provided complete address information",
        "sql_query": "SELECT COUNT(*) FROM tb_market_seller WHERE address IS NOT NULL AND address_detail IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_market_seller"
      },
      {
        "kpi_name": "Sellers Per User",
        "description": "Average number of sellers per user",
        "business_value": "Shows the average number of seller roles per user",
        "sql_query": "SELECT AVG(count) FROM (SELECT user_id, COUNT(*) as count FROM tb_market_seller WHERE user_id IS NOT NULL GROUP BY user_id) as subquery",
        "output_format": "Single numeric value",
        "table_name": "tb_market_seller"
      },
      {
        "kpi_name": "Sellers Per Partner",
        "description": "Average number of sellers per partner",
        "business_value": "Shows the average number of seller roles per partner",
        "sql_query": "SELECT AVG(count) FROM (SELECT partner_id, COUNT(*) as count FROM tb_market_seller WHERE partner_id IS NOT NULL GROUP BY partner_id) as subquery",
        "output_format": "Single numeric value",
        "table_name": "tb_market_seller"
      },
      {
        "kpi_name": "Top 10 Users by Seller Count",
        "description": "Top 10 users with the most sellers",
        "business_value": "Identifies the users with the most sellers",
        "sql_query": "SELECT user_id, COUNT(*) as count FROM tb_market_seller WHERE user_id IS NOT NULL GROUP BY user_id ORDER BY count DESC LIMIT 10",
        "output_format": "List of user ids and corresponding seller counts",
        "table_name": "tb_market_seller"
      },
      {
        "kpi_name": "Top 10 Partners by Seller Count",
        "description": "Top 10 partners with the most sellers",
        "business_value": "Identifies the partners with the most sellers",
        "sql_query": "SELECT partner_id, COUNT(*) as count FROM tb_market_seller WHERE partner_id IS NOT NULL GROUP BY partner_id ORDER BY count DESC LIMIT 10",
        "output_format": "List of partner ids and corresponding seller counts",
        "table_name": "tb_market_seller"
      },
      {
        "kpi_name": "Number of Sellers by Address",
        "description": "Count of sellers grouped by address",
        "business_value": "Shows the distribution of sellers by address",
        "sql_query": "SELECT address, COUNT(*) as count FROM tb_market_seller WHERE address IS NOT NULL GROUP BY address",
        "output_format": "List of addresses and corresponding seller counts",
        "table_name": "tb_market_seller"
      },
      {
        "kpi_name": "Number of Sellers by Detailed Address",
        "description": "Count of sellers grouped by detailed address",
        "business_value": "Shows the distribution of sellers by detailed address",
        "sql_query": "SELECT address_detail, COUNT(*) as count FROM tb_market_seller WHERE address_detail IS NOT NULL GROUP BY address_detail",
        "output_format": "List of detailed addresses and corresponding seller counts",
        "table_name": "tb_market_seller"
      },
      {
        "kpi_name": "Number of Sellers Without User or Partner",
        "description": "Count of sellers without a user or partner",
        "business_value": "Indicates the number of sellers who are not associated with a user or partner",
        "sql_query": "SELECT COUNT(*) FROM tb_market_seller WHERE user_id IS NULL AND partner_id IS NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_market_seller"
      },
      {
        "kpi_name": "Number of Sellers With Both User and Partner",
        "description": "Count of sellers associated with both a user and a partner",
        "business_value": "Indicates the number of sellers who are associated with both a user and a partner",
        "sql_query": "SELECT COUNT(*) FROM tb_market_seller WHERE user_id IS NOT NULL AND partner_id IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_market_seller"
      },
      {
        "kpi_name": "Number of Sellers With Either User or Partner",
        "description": "Count of sellers associated with either a user or a partner, but not both",
        "business_value": "Indicates the number of sellers who are associated with either a user or a partner, but not both",
        "sql_query": "SELECT COUNT(*) FROM tb_market_seller WHERE (user_id IS NOT NULL AND partner_id IS NULL) OR (user_id IS NULL AND partner_id IS NOT NULL)",
        "output_format": "Single numeric value",
        "table_name": "tb_market_seller"
      }
    ]
  },
  "tb_oem_market_order": {
    "table_info": {
      "name": "tb_oem_market_order",
      "description": "주문 테이블 ",
      "total_fields": 56,
      "fields_used": 20,
      "foreign_keys": 2,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "client_info → cellphone1",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "client_info → company_name",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Company"
      },
      {
        "name": "client_info → email",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Email"
      },
      {
        "name": "client_info → manager_name",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "delivery_info → address",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "delivery_info → address_detail",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "delivery_info → cellphone1",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "delivery_info → cellphone2",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "delivery_info → create_date",
        "type": "type/DateTime",
        "description": "No description",
        "semantic_type": "type/CreationTimestamp"
      },
      {
        "name": "delivery_info → delivery_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "delivery_info → delivery_memo",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "delivery_info → delivery_name",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "delivery_info → is_default",
        "type": "type/Boolean",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "delivery_info → is_exchange_refund",
        "type": "type/Boolean",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "delivery_info → receiver",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "delivery_info → selected",
        "type": "type/Boolean",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "delivery_info → total_cnt",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "delivery_info → update_date",
        "type": "type/DateTime",
        "description": "No description",
        "semantic_type": "type/UpdatedTimestamp"
      },
      {
        "name": "delivery_info → user_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "delivery_info → zip_code",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": null
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total Orders",
        "description": "Total number of orders",
        "business_value": "Overall business volume",
        "sql_query": "SELECT COUNT(*) FROM tb_oem_market_order",
        "output_format": "Single numeric value",
        "table_name": "tb_oem_market_order"
      },
      {
        "kpi_name": "Total Unique Customers",
        "description": "Total number of unique customers",
        "business_value": "Customer base size",
        "sql_query": "SELECT COUNT(DISTINCT client_info) FROM tb_oem_market_order",
        "output_format": "Single numeric value",
        "table_name": "tb_oem_market_order"
      },
      {
        "kpi_name": "Average Orders per Customer",
        "description": "Average number of orders per customer",
        "business_value": "Customer engagement level",
        "sql_query": "SELECT AVG(order_count) FROM (SELECT client_info, COUNT(*) as order_count FROM tb_oem_market_order GROUP BY client_info)",
        "output_format": "Single numeric value",
        "table_name": "tb_oem_market_order"
      },
      {
        "kpi_name": "Total Deliveries",
        "description": "Total number of deliveries",
        "business_value": "Delivery volume",
        "sql_query": "SELECT COUNT(*) FROM tb_oem_market_order WHERE delivery_info IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_oem_market_order"
      },
      {
        "kpi_name": "Average Delivery Time",
        "description": "Average time between order creation and delivery",
        "business_value": "Efficiency of delivery process",
        "sql_query": "SELECT AVG(DATEDIFF(delivery_info ->> 'update_date', delivery_info ->> 'create_date')) FROM tb_oem_market_order WHERE delivery_info ->> 'create_date' IS NOT NULL AND delivery_info ->> 'update_date' IS NOT NULL",
        "output_format": "Single numeric value (days)",
        "table_name": "tb_oem_market_order"
      },
      {
        "kpi_name": "Total Refunds",
        "description": "Total number of refunds",
        "business_value": "Cost of refunds",
        "sql_query": "SELECT COUNT(*) FROM tb_oem_market_order WHERE delivery_info ->> 'is_exchange_refund' = 'true'",
        "output_format": "Single numeric value",
        "table_name": "tb_oem_market_order"
      },
      {
        "kpi_name": "Refund Rate",
        "description": "Percentage of orders that were refunded",
        "business_value": "Quality of products/service",
        "sql_query": "SELECT COUNT(CASE WHEN delivery_info ->> 'is_exchange_refund' = 'true' THEN 1 END) / COUNT(*) FROM tb_oem_market_order",
        "output_format": "Percentage",
        "table_name": "tb_oem_market_order"
      },
      {
        "kpi_name": "Total Default Deliveries",
        "description": "Total number of default deliveries",
        "business_value": "Default delivery preference",
        "sql_query": "SELECT COUNT(*) FROM tb_oem_market_order WHERE delivery_info ->> 'is_default' = 'true'",
        "output_format": "Single numeric value",
        "table_name": "tb_oem_market_order"
      },
      {
        "kpi_name": "Average Order Size",
        "description": "Average number of items per order",
        "business_value": "Customer purchase behavior",
        "sql_query": "SELECT AVG(delivery_info ->> 'total_cnt') FROM tb_oem_market_order WHERE delivery_info ->> 'total_cnt' IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_oem_market_order"
      },
      {
        "kpi_name": "Total Selected Deliveries",
        "description": "Total number of selected deliveries",
        "business_value": "Customer delivery preference",
        "sql_query": "SELECT COUNT(*) FROM tb_oem_market_order WHERE delivery_info ->> 'selected' = 'true'",
        "output_format": "Single numeric value",
        "table_name": "tb_oem_market_order"
      },
      {
        "kpi_name": "Total Unique Delivery Addresses",
        "description": "Total number of unique delivery addresses",
        "business_value": "Customer delivery location diversity",
        "sql_query": "SELECT COUNT(DISTINCT delivery_info ->> 'address') FROM tb_oem_market_order WHERE delivery_info ->> 'address' IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_oem_market_order"
      },
      {
        "kpi_name": "Average Deliveries per Customer",
        "description": "Average number of deliveries per customer",
        "business_value": "Customer engagement level",
        "sql_query": "SELECT AVG(delivery_count) FROM (SELECT client_info, COUNT(*) as delivery_count FROM tb_oem_market_order WHERE delivery_info IS NOT NULL GROUP BY client_info)",
        "output_format": "Single numeric value",
        "table_name": "tb_oem_market_order"
      },
      {
        "kpi_name": "Total Unique Delivery Names",
        "description": "Total number of unique delivery names",
        "business_value": "Customer delivery preference diversity",
        "sql_query": "SELECT COUNT(DISTINCT delivery_info ->> 'delivery_name') FROM tb_oem_market_order WHERE delivery_info ->> 'delivery_name' IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_oem_market_order"
      },
      {
        "kpi_name": "Total Unique Delivery IDs",
        "description": "Total number of unique delivery IDs",
        "business_value": "Delivery diversity",
        "sql_query": "SELECT COUNT(DISTINCT delivery_info ->> 'delivery_id') FROM tb_oem_market_order WHERE delivery_info ->> 'delivery_id' IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_oem_market_order"
      },
      {
        "kpi_name": "Total Unique User IDs",
        "description": "Total number of unique user IDs",
        "business_value": "User base size",
        "sql_query": "SELECT COUNT(DISTINCT delivery_info ->> 'user_id') FROM tb_oem_market_order WHERE delivery_info ->> 'user_id' IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_oem_market_order"
      }
    ]
  },
  "tb_subscribe_partner": {
    "table_info": {
      "name": "tb_subscribe_partner",
      "description": "파트너구독정보",
      "total_fields": 12,
      "fields_used": 12,
      "foreign_keys": 4,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "subscribe_id",
        "type": "type/BigInteger",
        "description": "구독고유번호(기본키)",
        "semantic_type": "type/PK"
      },
      {
        "name": "partner_id",
        "type": "type/Integer",
        "description": "파트너id(tb_partner테이블참조)",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 68,
          "target_field": "partner_id",
          "relationship": "FK to partner_id"
        }
      },
      {
        "name": "plan_id",
        "type": "type/Integer",
        "description": "파트너구독플랜고유번호(tb_subscribe_plan참조)",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 431,
          "target_field": "plan_id",
          "relationship": "FK to plan_id"
        }
      },
      {
        "name": "create_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "생성일",
        "semantic_type": "type/CreationTimestamp"
      },
      {
        "name": "start_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "구독시작일",
        "semantic_type": "type/CreationTimestamp"
      },
      {
        "name": "end_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "구독종료일(비활성화)",
        "semantic_type": null
      },
      {
        "name": "next_payment_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "다음결제일",
        "semantic_type": null
      },
      {
        "name": "fee_id",
        "type": "type/Integer",
        "description": "파트너 구독 플랜 요금 고유번호(tb_subscribe_plan_fee 참조)",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 245,
          "target_field": "fee_id",
          "relationship": "FK to fee_id"
        }
      },
      {
        "name": "is_priority",
        "type": "type/Boolean",
        "description": "랜딩, 파트너 찾기 - 인증 파트너, 파트너 프로필 추천 인증 파트너 목록에서의 우선 노출 여부 (한번 우선 노출된 파트너는 해당 값 false 로 변경되고 우선 순위에서 밀림. 공평한 노출 기회 부여하기 위함.)",
        "semantic_type": null
      },
      {
        "name": "is_active",
        "type": "type/Boolean",
        "description": "활성화: true 비활성화: false",
        "semantic_type": null
      },
      {
        "name": "application_detail_id",
        "type": "type/Integer",
        "description": "tb_subscribe_partner_application_detail fk",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 347,
          "target_field": "application_detail_id",
          "relationship": "FK to application_detail_id"
        }
      },
      {
        "name": "super_user_type",
        "type": "type/Integer",
        "description": "1:스탠다드, 2: 프리미엄",
        "semantic_type": null
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total Subscriptions",
        "description": "Total number of subscriptions",
        "business_value": "Understanding the total number of subscriptions",
        "sql_query": "SELECT COUNT(*) FROM tb_subscribe_partner WHERE is_active = true",
        "output_format": "Single integer value",
        "table_name": "tb_subscribe_partner"
      },
      {
        "kpi_name": "Total Active Subscriptions",
        "description": "Total number of active subscriptions",
        "business_value": "Understanding the total number of active subscriptions",
        "sql_query": "SELECT COUNT(*) FROM tb_subscribe_partner WHERE is_active = true AND end_date IS NULL",
        "output_format": "Single integer value",
        "table_name": "tb_subscribe_partner"
      },
      {
        "kpi_name": "Total Inactive Subscriptions",
        "description": "Total number of inactive subscriptions",
        "business_value": "Understanding the total number of inactive subscriptions",
        "sql_query": "SELECT COUNT(*) FROM tb_subscribe_partner WHERE is_active = false OR end_date IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_subscribe_partner"
      },
      {
        "kpi_name": "Subscription Duration",
        "description": "Average duration of subscriptions",
        "business_value": "Understanding the average lifespan of subscriptions",
        "sql_query": "SELECT AVG(DATEDIFF(end_date, start_date)) FROM tb_subscribe_partner WHERE end_date IS NOT NULL AND start_date IS NOT NULL AND end_date > start_date",
        "output_format": "Single decimal value",
        "table_name": "tb_subscribe_partner"
      },
      {
        "kpi_name": "Subscriptions by Partner",
        "description": "Number of subscriptions by partner",
        "business_value": "Understanding the distribution of subscriptions across partners",
        "sql_query": "SELECT partner_id, COUNT(*) FROM tb_subscribe_partner GROUP BY partner_id",
        "output_format": "List of partner IDs with their corresponding subscription counts",
        "table_name": "tb_subscribe_partner"
      },
      {
        "kpi_name": "Active Subscriptions by Partner",
        "description": "Number of active subscriptions by partner",
        "business_value": "Understanding the distribution of active subscriptions across partners",
        "sql_query": "SELECT partner_id, COUNT(*) FROM tb_subscribe_partner WHERE is_active = true AND end_date IS NULL GROUP BY partner_id",
        "output_format": "List of partner IDs with their corresponding active subscription counts",
        "table_name": "tb_subscribe_partner"
      },
      {
        "kpi_name": "Inactive Subscriptions by Partner",
        "description": "Number of inactive subscriptions by partner",
        "business_value": "Understanding the distribution of inactive subscriptions across partners",
        "sql_query": "SELECT partner_id, COUNT(*) FROM tb_subscribe_partner WHERE is_active = false OR end_date IS NOT NULL GROUP BY partner_id",
        "output_format": "List of partner IDs with their corresponding inactive subscription counts",
        "table_name": "tb_subscribe_partner"
      },
      {
        "kpi_name": "Subscriptions by Plan",
        "description": "Number of subscriptions by plan",
        "business_value": "Understanding the distribution of subscriptions across plans",
        "sql_query": "SELECT plan_id, COUNT(*) FROM tb_subscribe_partner GROUP BY plan_id",
        "output_format": "List of plan IDs with their corresponding subscription counts",
        "table_name": "tb_subscribe_partner"
      },
      {
        "kpi_name": "Active Subscriptions by Plan",
        "description": "Number of active subscriptions by plan",
        "business_value": "Understanding the distribution of active subscriptions across plans",
        "sql_query": "SELECT plan_id, COUNT(*) FROM tb_subscribe_partner WHERE is_active = true AND end_date IS NULL GROUP BY plan_id",
        "output_format": "List of plan IDs with their corresponding active subscription counts",
        "table_name": "tb_subscribe_partner"
      },
      {
        "kpi_name": "Inactive Subscriptions by Plan",
        "description": "Number of inactive subscriptions by plan",
        "business_value": "Understanding the distribution of inactive subscriptions across plans",
        "sql_query": "SELECT plan_id, COUNT(*) FROM tb_subscribe_partner WHERE is_active = false OR end_date IS NOT NULL GROUP BY plan_id",
        "output_format": "List of plan IDs with their corresponding inactive subscription counts",
        "table_name": "tb_subscribe_partner"
      },
      {
        "kpi_name": "Subscriptions by Fee",
        "description": "Number of subscriptions by fee",
        "business_value": "Understanding the distribution of subscriptions across fees",
        "sql_query": "SELECT fee_id, COUNT(*) FROM tb_subscribe_partner GROUP BY fee_id",
        "output_format": "List of fee IDs with their corresponding subscription counts",
        "table_name": "tb_subscribe_partner"
      },
      {
        "kpi_name": "Active Subscriptions by Fee",
        "description": "Number of active subscriptions by fee",
        "business_value": "Understanding the distribution of active subscriptions across fees",
        "sql_query": "SELECT fee_id, COUNT(*) FROM tb_subscribe_partner WHERE is_active = true AND end_date IS NULL GROUP BY fee_id",
        "output_format": "List of fee IDs with their corresponding active subscription counts",
        "table_name": "tb_subscribe_partner"
      },
      {
        "kpi_name": "Inactive Subscriptions by Fee",
        "description": "Number of inactive subscriptions by fee",
        "business_value": "Understanding the distribution of inactive subscriptions across fees",
        "sql_query": "SELECT fee_id, COUNT(*) FROM tb_subscribe_partner WHERE is_active = false OR end_date IS NOT NULL GROUP BY fee_id",
        "output_format": "List of fee IDs with their corresponding inactive subscription counts",
        "table_name": "tb_subscribe_partner"
      },
      {
        "kpi_name": "Subscriptions by Super User Type",
        "description": "Number of subscriptions by super user type",
        "business_value": "Understanding the distribution of subscriptions across super user types",
        "sql_query": "SELECT super_user_type, COUNT(*) FROM tb_subscribe_partner GROUP BY super_user_type",
        "output_format": "List of super user types with their corresponding subscription counts",
        "table_name": "tb_subscribe_partner"
      },
      {
        "kpi_name": "Active Subscriptions by Super User Type",
        "description": "Number of active subscriptions by super user type",
        "business_value": "Understanding the distribution of active subscriptions across super user types",
        "sql_query": "SELECT super_user_type, COUNT(*) FROM tb_subscribe_partner WHERE is_active = true AND end_date IS NULL GROUP BY super_user_type",
        "output_format": "List of super user types with their corresponding active subscription counts",
        "table_name": "tb_subscribe_partner"
      },
      {
        "kpi_name": "Inactive Subscriptions by Super User Type",
        "description": "Number of inactive subscriptions by super user type",
        "business_value": "Understanding the distribution of inactive subscriptions across super user types",
        "sql_query": "SELECT super_user_type, COUNT(*) FROM tb_subscribe_partner WHERE is_active = false OR end_date IS NOT NULL GROUP BY super_user_type",
        "output_format": "List of super user types with their corresponding inactive subscription counts",
        "table_name": "tb_subscribe_partner"
      }
    ]
  },
  "tb_sales_factory": {
    "table_info": {
      "name": "tb_sales_factory",
      "description": "자동영업화 공장 DB",
      "total_fields": 42,
      "fields_used": 20,
      "foreign_keys": 0,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "factory_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/PK"
      },
      {
        "name": "industrial_complex",
        "type": "type/Text",
        "description": "산단구분",
        "semantic_type": "type/Category"
      },
      {
        "name": "complex_name",
        "type": "type/Text",
        "description": "단지명",
        "semantic_type": null
      },
      {
        "name": "region",
        "type": "type/Text",
        "description": "시/도",
        "semantic_type": null
      },
      {
        "name": "area",
        "type": "type/Text",
        "description": "구/군",
        "semantic_type": null
      },
      {
        "name": "factory_street_address",
        "type": "type/Text",
        "description": "공장대표주소(도로명)",
        "semantic_type": null
      },
      {
        "name": "factory_lot_address",
        "type": "type/Text",
        "description": "공장대표주소(지번)",
        "semantic_type": null
      },
      {
        "name": "factory_zip_code",
        "type": "type/Text",
        "description": "공장우편번호",
        "semantic_type": null
      },
      {
        "name": "corporation_type",
        "type": "type/Text",
        "description": "주식회사/유한회사",
        "semantic_type": "type/Category"
      },
      {
        "name": "company_name",
        "type": "type/Text",
        "description": "회사명",
        "semantic_type": "type/Company"
      },
      {
        "name": "ein",
        "type": "type/Text",
        "description": "사업자등록번호",
        "semantic_type": null
      },
      {
        "name": "business_type",
        "type": "type/Text",
        "description": "사업유형",
        "semantic_type": "type/Category"
      },
      {
        "name": "factory_size",
        "type": "type/Text",
        "description": "공장크기",
        "semantic_type": "type/Category"
      },
      {
        "name": "representative_name",
        "type": "type/Text",
        "description": "대표자명",
        "semantic_type": null
      },
      {
        "name": "representative_cellphone",
        "type": "type/Text",
        "description": "대표자전화번호",
        "semantic_type": null
      },
      {
        "name": "contact_name",
        "type": "type/Text",
        "description": "담당자명",
        "semantic_type": "type/Category"
      },
      {
        "name": "contact_cellphone",
        "type": "type/Text",
        "description": "담당자전화번호",
        "semantic_type": "type/Category"
      },
      {
        "name": "factory_homepage_url",
        "type": "type/Text",
        "description": "공장홈페이지",
        "semantic_type": "type/URL"
      },
      {
        "name": "factory_cellphone",
        "type": "type/Text",
        "description": "공장전화번호",
        "semantic_type": null
      },
      {
        "name": "factory_fax_number",
        "type": "type/Text",
        "description": "공장팩스번호",
        "semantic_type": null
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total Factories",
        "description": "Total number of factories",
        "business_value": "Understanding the total number of factories",
        "sql_query": "SELECT COUNT(*) FROM tb_sales_factory WHERE factory_id IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_sales_factory"
      },
      {
        "kpi_name": "Factories by Region",
        "description": "Number of factories in each region",
        "business_value": "Regional distribution of factories",
        "sql_query": "SELECT region, COUNT(*) FROM tb_sales_factory WHERE region IS NOT NULL GROUP BY region",
        "output_format": "List of regions with corresponding factory count",
        "table_name": "tb_sales_factory"
      },
      {
        "kpi_name": "Factories by Industrial Complex",
        "description": "Number of factories in each industrial complex",
        "business_value": "Understanding the distribution of factories across industrial complexes",
        "sql_query": "SELECT industrial_complex, COUNT(*) FROM tb_sales_factory WHERE industrial_complex IS NOT NULL GROUP BY industrial_complex",
        "output_format": "List of industrial complexes with corresponding factory count",
        "table_name": "tb_sales_factory"
      },
      {
        "kpi_name": "Factories by Corporation Type",
        "description": "Number of factories for each corporation type",
        "business_value": "Understanding the distribution of factories across corporation types",
        "sql_query": "SELECT corporation_type, COUNT(*) FROM tb_sales_factory WHERE corporation_type IS NOT NULL GROUP BY corporation_type",
        "output_format": "List of corporation types with corresponding factory count",
        "table_name": "tb_sales_factory"
      },
      {
        "kpi_name": "Factories by Business Type",
        "description": "Number of factories for each business type",
        "business_value": "Understanding the distribution of factories across business types",
        "sql_query": "SELECT business_type, COUNT(*) FROM tb_sales_factory WHERE business_type IS NOT NULL GROUP BY business_type",
        "output_format": "List of business types with corresponding factory count",
        "table_name": "tb_sales_factory"
      },
      {
        "kpi_name": "Factories by Size",
        "description": "Number of factories for each size category",
        "business_value": "Understanding the distribution of factories across different sizes",
        "sql_query": "SELECT factory_size, COUNT(*) FROM tb_sales_factory WHERE factory_size IS NOT NULL GROUP BY factory_size",
        "output_format": "List of factory sizes with corresponding factory count",
        "table_name": "tb_sales_factory"
      },
      {
        "kpi_name": "Factories with Homepage",
        "description": "Number of factories with a homepage",
        "business_value": "Understanding the digital presence of factories",
        "sql_query": "SELECT COUNT(*) FROM tb_sales_factory WHERE factory_homepage_url IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_sales_factory"
      },
      {
        "kpi_name": "Factories with Contact Information",
        "description": "Number of factories with contact information",
        "business_value": "Understanding the availability of contact information for factories",
        "sql_query": "SELECT COUNT(*) FROM tb_sales_factory WHERE contact_cellphone IS NOT NULL OR factory_cellphone IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_sales_factory"
      },
      {
        "kpi_name": "Factories with Representative Information",
        "description": "Number of factories with representative information",
        "business_value": "Understanding the availability of representative information for factories",
        "sql_query": "SELECT COUNT(*) FROM tb_sales_factory WHERE representative_name IS NOT NULL AND representative_cellphone IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_sales_factory"
      },
      {
        "kpi_name": "Factories with Fax Number",
        "description": "Number of factories with a fax number",
        "business_value": "Understanding the availability of fax communication for factories",
        "sql_query": "SELECT COUNT(*) FROM tb_sales_factory WHERE factory_fax_number IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_sales_factory"
      },
      {
        "kpi_name": "Factories with EIN",
        "description": "Number of factories with an EIN",
        "business_value": "Understanding the number of factories with a registered EIN",
        "sql_query": "SELECT COUNT(*) FROM tb_sales_factory WHERE ein IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_sales_factory"
      },
      {
        "kpi_name": "Factories by Area",
        "description": "Number of factories in each area",
        "business_value": "Understanding the distribution of factories across areas",
        "sql_query": "SELECT area, COUNT(*) FROM tb_sales_factory WHERE area IS NOT NULL GROUP BY area",
        "output_format": "List of areas with corresponding factory count",
        "table_name": "tb_sales_factory"
      },
      {
        "kpi_name": "Factories with Complete Address",
        "description": "Number of factories with complete address information",
        "business_value": "Understanding the availability of complete address information for factories",
        "sql_query": "SELECT COUNT(*) FROM tb_sales_factory WHERE factory_street_address IS NOT NULL AND factory_lot_address IS NOT NULL AND factory_zip_code IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_sales_factory"
      },
      {
        "kpi_name": "Factories by Company Name",
        "description": "Number of factories for each company",
        "business_value": "Understanding the distribution of factories across companies",
        "sql_query": "SELECT company_name, COUNT(*) FROM tb_sales_factory WHERE company_name IS NOT NULL GROUP BY company_name",
        "output_format": "List of company names with corresponding factory count",
        "table_name": "tb_sales_factory"
      },
      {
        "kpi_name": "Factories with Contact Name",
        "description": "Number of factories with a contact name",
        "business_value": "Understanding the availability of contact names for factories",
        "sql_query": "SELECT COUNT(*) FROM tb_sales_factory WHERE contact_name IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_sales_factory"
      }
    ]
  },
  "tb_type_service": {
    "table_info": {
      "name": "tb_type_service",
      "description": "제조 서비스 및 세부 가공방식",
      "total_fields": 11,
      "fields_used": 11,
      "foreign_keys": 0,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "service_type_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/PK"
      },
      {
        "name": "service_name",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "old_id",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "parent_service_type_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "file_required",
        "type": "type/*",
        "description": "10 - 도면 있음 / 01 - 도면 없음 / 11 둘다 있음",
        "semantic_type": null
      },
      {
        "name": "sort",
        "type": "type/Integer",
        "description": "정렬",
        "semantic_type": null
      },
      {
        "name": "service_image_path",
        "type": "type/Text",
        "description": "서비스 이미지 경로 (asset 경로일수도 있고 cdn경로일수도 있음)",
        "semantic_type": null
      },
      {
        "name": "is_visible",
        "type": "type/Boolean",
        "description": "파트너 서비스 선택하기에서 보이는 지 여부 \n-> 파트너가 서비스 선택하기에서는 안보이고, rfq 생성할때는 보인다.\n-> rfq 생성할때, is_visible false 를 선택하면 해당 서비스의 상위서비스를 선택한 파트너들에게 보인다.",
        "semantic_type": null
      },
      {
        "name": "display_status",
        "type": "type/Integer",
        "description": "(1: 오픈예정, 2: 신규, 3: 일반, 4: 숨김, 5: 삭제됨)\n 일반적인 생애 주기는 다음과 같음\n - 오픈예정 => 신규 => 일반(혹은 숨김) => 삭제됨",
        "semantic_type": null
      },
      {
        "name": "root_service_type",
        "type": "type/Integer",
        "description": "1:부품제조, 2:완제품/위탁생산",
        "semantic_type": null
      },
      {
        "name": "description",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Description"
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total Service Types",
        "description": "Count of all service types",
        "business_value": "Understanding the total number of service types available",
        "sql_query": "SELECT COUNT(*) FROM tb_type_service WHERE service_type_id IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_type_service"
      },
      {
        "kpi_name": "Visible Service Types",
        "description": "Count of all visible service types",
        "business_value": "Understanding the total number of service types visible to partners",
        "sql_query": "SELECT COUNT(*) FROM tb_type_service WHERE is_visible = true",
        "output_format": "Single integer value",
        "table_name": "tb_type_service"
      },
      {
        "kpi_name": "Service Types Requiring File",
        "description": "Count of all service types that require a file",
        "business_value": "Understanding the total number of service types that require a file for processing",
        "sql_query": "SELECT COUNT(*) FROM tb_type_service WHERE file_required = '10' OR file_required = '11'",
        "output_format": "Single integer value",
        "table_name": "tb_type_service"
      },
      {
        "kpi_name": "Service Types Not Requiring File",
        "description": "Count of all service types that do not require a file",
        "business_value": "Understanding the total number of service types that do not require a file for processing",
        "sql_query": "SELECT COUNT(*) FROM tb_type_service WHERE file_required = '01'",
        "output_format": "Single integer value",
        "table_name": "tb_type_service"
      },
      {
        "kpi_name": "Open Service Types",
        "description": "Count of all service types that are open",
        "business_value": "Understanding the total number of service types that are currently open",
        "sql_query": "SELECT COUNT(*) FROM tb_type_service WHERE display_status = 1",
        "output_format": "Single integer value",
        "table_name": "tb_type_service"
      },
      {
        "kpi_name": "New Service Types",
        "description": "Count of all service types that are new",
        "business_value": "Understanding the total number of service types that are newly added",
        "sql_query": "SELECT COUNT(*) FROM tb_type_service WHERE display_status = 2",
        "output_format": "Single integer value",
        "table_name": "tb_type_service"
      },
      {
        "kpi_name": "Hidden Service Types",
        "description": "Count of all service types that are hidden",
        "business_value": "Understanding the total number of service types that are currently hidden",
        "sql_query": "SELECT COUNT(*) FROM tb_type_service WHERE display_status = 4",
        "output_format": "Single integer value",
        "table_name": "tb_type_service"
      },
      {
        "kpi_name": "Deleted Service Types",
        "description": "Count of all service types that are deleted",
        "business_value": "Understanding the total number of service types that are deleted",
        "sql_query": "SELECT COUNT(*) FROM tb_type_service WHERE display_status = 5",
        "output_format": "Single integer value",
        "table_name": "tb_type_service"
      },
      {
        "kpi_name": "Service Types With Images",
        "description": "Count of all service types that have images",
        "business_value": "Understanding the total number of service types that have associated images",
        "sql_query": "SELECT COUNT(*) FROM tb_type_service WHERE service_image_path IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_type_service"
      },
      {
        "kpi_name": "Service Types Without Images",
        "description": "Count of all service types that do not have images",
        "business_value": "Understanding the total number of service types that do not have associated images",
        "sql_query": "SELECT COUNT(*) FROM tb_type_service WHERE service_image_path IS NULL",
        "output_format": "Single integer value",
        "table_name": "tb_type_service"
      },
      {
        "kpi_name": "Service Types With Parent",
        "description": "Count of all service types that have a parent service type",
        "business_value": "Understanding the total number of service types that are sub-services of another service",
        "sql_query": "SELECT COUNT(*) FROM tb_type_service WHERE parent_service_type_id IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_type_service"
      },
      {
        "kpi_name": "Service Types Without Parent",
        "description": "Count of all service types that do not have a parent service type",
        "business_value": "Understanding the total number of service types that are primary services",
        "sql_query": "SELECT COUNT(*) FROM tb_type_service WHERE parent_service_type_id IS NULL",
        "output_format": "Single integer value",
        "table_name": "tb_type_service"
      },
      {
        "kpi_name": "Service Types With Description",
        "description": "Count of all service types that have a description",
        "business_value": "Understanding the total number of service types that have a description",
        "sql_query": "SELECT COUNT(*) FROM tb_type_service WHERE description IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_type_service"
      },
      {
        "kpi_name": "Service Types Without Description",
        "description": "Count of all service types that do not have a description",
        "business_value": "Understanding the total number of service types that do not have a description",
        "sql_query": "SELECT COUNT(*) FROM tb_type_service WHERE description IS NULL",
        "output_format": "Single integer value",
        "table_name": "tb_type_service"
      },
      {
        "kpi_name": "Service Types By Root Type",
        "description": "Count of all service types grouped by root service type",
        "business_value": "Understanding the distribution of service types by root service type",
        "sql_query": "SELECT root_service_type, COUNT(*) FROM tb_type_service GROUP BY root_service_type",
        "output_format": "List of root service types with count",
        "table_name": "tb_type_service"
      }
    ]
  },
  "tb_payment_method": {
    "table_info": {
      "name": "tb_payment_method",
      "description": "구독결제수단",
      "total_fields": 9,
      "fields_used": 9,
      "foreign_keys": 2,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "method_id",
        "type": "type/Integer",
        "description": "결제수단고유번호(기본키)",
        "semantic_type": "type/PK"
      },
      {
        "name": "partner_id",
        "type": "type/Integer",
        "description": "파트너id(tb_partner테이블참조)",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 68,
          "target_field": "partner_id",
          "relationship": "FK to partner_id"
        }
      },
      {
        "name": "billing_key",
        "type": "type/Text",
        "description": "빌링키(나이스페이 == customer_uid 같은 의미)",
        "semantic_type": null
      },
      {
        "name": "method_type",
        "type": "type/Integer",
        "description": "결제수단타입(1:주결제수단,2:백업결제수단)",
        "semantic_type": null
      },
      {
        "name": "nick_name",
        "type": "type/Text",
        "description": "카드 별명",
        "semantic_type": "type/Category"
      },
      {
        "name": "user_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 218,
          "target_field": "user_id",
          "relationship": "FK to user_id"
        }
      },
      {
        "name": "create_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "No description",
        "semantic_type": "type/CreationTimestamp"
      },
      {
        "name": "status",
        "type": "type/Integer",
        "description": "1: 활성화 2:삭제",
        "semantic_type": null
      },
      {
        "name": "card_owner_type",
        "type": "type/Integer",
        "description": "1: 개인카드 2:법인카드",
        "semantic_type": "type/Owner"
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total Number of Payment Methods",
        "description": "Counts the total number of payment methods",
        "business_value": "Helps to understand the diversity of payment methods",
        "sql_query": "SELECT COUNT(*) FROM tb_payment_method WHERE method_id IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_payment_method"
      },
      {
        "kpi_name": "Number of Active Payment Methods",
        "description": "Counts the number of active payment methods",
        "business_value": "Helps to understand the number of currently usable payment methods",
        "sql_query": "SELECT COUNT(*) FROM tb_payment_method WHERE status = 1",
        "output_format": "Single integer value",
        "table_name": "tb_payment_method"
      },
      {
        "kpi_name": "Number of Deleted Payment Methods",
        "description": "Counts the number of deleted payment methods",
        "business_value": "Helps to understand the number of payment methods that are no longer in use",
        "sql_query": "SELECT COUNT(*) FROM tb_payment_method WHERE status = 2",
        "output_format": "Single integer value",
        "table_name": "tb_payment_method"
      },
      {
        "kpi_name": "Number of Personal Cards",
        "description": "Counts the number of personal cards",
        "business_value": "Helps to understand the number of personal cards in use",
        "sql_query": "SELECT COUNT(*) FROM tb_payment_method WHERE card_owner_type = 1",
        "output_format": "Single integer value",
        "table_name": "tb_payment_method"
      },
      {
        "kpi_name": "Number of Corporate Cards",
        "description": "Counts the number of corporate cards",
        "business_value": "Helps to understand the number of corporate cards in use",
        "sql_query": "SELECT COUNT(*) FROM tb_payment_method WHERE card_owner_type = 2",
        "output_format": "Single integer value",
        "table_name": "tb_payment_method"
      },
      {
        "kpi_name": "Number of Payment Methods by Partner",
        "description": "Counts the number of payment methods by each partner",
        "business_value": "Helps to understand the distribution of payment methods across partners",
        "sql_query": "SELECT partner_id, COUNT(*) FROM tb_payment_method GROUP BY partner_id",
        "output_format": "List of partner_id and corresponding count",
        "table_name": "tb_payment_method"
      },
      {
        "kpi_name": "Number of Payment Methods by User",
        "description": "Counts the number of payment methods by each user",
        "business_value": "Helps to understand the distribution of payment methods across users",
        "sql_query": "SELECT user_id, COUNT(*) FROM tb_payment_method GROUP BY user_id",
        "output_format": "List of user_id and corresponding count",
        "table_name": "tb_payment_method"
      },
      {
        "kpi_name": "Number of Payment Methods by Type",
        "description": "Counts the number of payment methods by type",
        "business_value": "Helps to understand the distribution of payment methods by type",
        "sql_query": "SELECT method_type, COUNT(*) FROM tb_payment_method GROUP BY method_type",
        "output_format": "List of method_type and corresponding count",
        "table_name": "tb_payment_method"
      },
      {
        "kpi_name": "Number of New Payment Methods per Month",
        "description": "Counts the number of new payment methods added per month",
        "business_value": "Helps to understand the growth rate of payment methods",
        "sql_query": "SELECT DATE_TRUNC('month', create_date) AS month, COUNT(*) FROM tb_payment_method WHERE create_date IS NOT NULL GROUP BY month",
        "output_format": "List of month and corresponding count",
        "table_name": "tb_payment_method"
      },
      {
        "kpi_name": "Number of Deleted Payment Methods per Month",
        "description": "Counts the number of deleted payment methods per month",
        "business_value": "Helps to understand the rate of payment method deletion",
        "sql_query": "SELECT DATE_TRUNC('month', create_date) AS month, COUNT(*) FROM tb_payment_method WHERE status = 2 AND create_date IS NOT NULL GROUP BY month",
        "output_format": "List of month and corresponding count",
        "table_name": "tb_payment_method"
      },
      {
        "kpi_name": "Number of Active Payment Methods per Partner",
        "description": "Counts the number of active payment methods by each partner",
        "business_value": "Helps to understand the distribution of active payment methods across partners",
        "sql_query": "SELECT partner_id, COUNT(*) FROM tb_payment_method WHERE status = 1 GROUP BY partner_id",
        "output_format": "List of partner_id and corresponding count",
        "table_name": "tb_payment_method"
      },
      {
        "kpi_name": "Number of Active Payment Methods per User",
        "description": "Counts the number of active payment methods by each user",
        "business_value": "Helps to understand the distribution of active payment methods across users",
        "sql_query": "SELECT user_id, COUNT(*) FROM tb_payment_method WHERE status = 1 GROUP BY user_id",
        "output_format": "List of user_id and corresponding count",
        "table_name": "tb_payment_method"
      },
      {
        "kpi_name": "Number of Active Personal Cards per User",
        "description": "Counts the number of active personal cards by each user",
        "business_value": "Helps to understand the distribution of active personal cards across users",
        "sql_query": "SELECT user_id, COUNT(*) FROM tb_payment_method WHERE status = 1 AND card_owner_type = 1 GROUP BY user_id",
        "output_format": "List of user_id and corresponding count",
        "table_name": "tb_payment_method"
      },
      {
        "kpi_name": "Number of Active Corporate Cards per Partner",
        "description": "Counts the number of active corporate cards by each partner",
        "business_value": "Helps to understand the distribution of active corporate cards across partners",
        "sql_query": "SELECT partner_id, COUNT(*) FROM tb_payment_method WHERE status = 1 AND card_owner_type = 2 GROUP BY partner_id",
        "output_format": "List of partner_id and corresponding count",
        "table_name": "tb_payment_method"
      },
      {
        "kpi_name": "Number of Active Payment Methods by Type per Month",
        "description": "Counts the number of active payment methods by type per month",
        "business_value": "Helps to understand the monthly distribution of active payment methods by type",
        "sql_query": "SELECT DATE_TRUNC('month', create_date) AS month, method_type, COUNT(*) FROM tb_payment_method WHERE status = 1 AND create_date IS NOT NULL GROUP BY month, method_type",
        "output_format": "List of month, method_type and corresponding count",
        "table_name": "tb_payment_method"
      },
      {
        "kpi_name": "Number of Deleted Payment Methods by Type per Month",
        "description": "Counts the number of deleted payment methods by type per month",
        "business_value": "Helps to understand the monthly distribution of deleted payment methods by type",
        "sql_query": "SELECT DATE_TRUNC('month', create_date) AS month, method_type, COUNT(*) FROM tb_payment_method WHERE status = 2 AND create_date IS NOT NULL GROUP BY month, method_type",
        "output_format": "List of month, method_type and corresponding count",
        "table_name": "tb_payment_method"
      }
    ]
  },
  "tb_market_cart": {
    "table_info": {
      "name": "tb_market_cart",
      "description": "장바구니",
      "total_fields": 7,
      "fields_used": 7,
      "foreign_keys": 3,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "user_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 218,
          "target_field": "user_id",
          "relationship": "FK to user_id"
        }
      },
      {
        "name": "product_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 378,
          "target_field": "product_id",
          "relationship": "FK to product_id"
        }
      },
      {
        "name": "cnt",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "create_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "No description",
        "semantic_type": "type/CreationTimestamp"
      },
      {
        "name": "option",
        "type": "type/JSON",
        "description": "같은 제품 / 여러 장비 인 경우 각 장비마다 {이름,수량 등} 옵션을 배열로 받음",
        "semantic_type": "type/SerializedJSON"
      },
      {
        "name": "attribute_id",
        "type": "type/Integer",
        "description": "상품옵션 속성id",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 185,
          "target_field": "attribute_id",
          "relationship": "FK to attribute_id"
        }
      },
      {
        "name": "cart_item_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/PK"
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total Cart Items",
        "description": "Total number of items in all carts",
        "business_value": "Understand the total potential sales volume",
        "sql_query": "SELECT COUNT(*) FROM tb_market_cart WHERE cnt IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_market_cart"
      },
      {
        "kpi_name": "Unique Products in Carts",
        "description": "Number of unique products added to carts",
        "business_value": "Understand the variety of products in demand",
        "sql_query": "SELECT COUNT(DISTINCT product_id) FROM tb_market_cart WHERE product_id IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_market_cart"
      },
      {
        "kpi_name": "Average Cart Size",
        "description": "Average number of items per cart",
        "business_value": "Understand typical customer purchase volume",
        "sql_query": "SELECT AVG(cnt) FROM tb_market_cart WHERE cnt IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_market_cart"
      },
      {
        "kpi_name": "Cart Creation Rate",
        "description": "Number of carts created per day",
        "business_value": "Monitor daily customer engagement",
        "sql_query": "SELECT COUNT(*) / COUNT(DISTINCT DATE(create_date)) FROM tb_market_cart WHERE create_date IS NOT NULL AND create_date > '1900-01-01'",
        "output_format": "Single decimal value",
        "table_name": "tb_market_cart"
      },
      {
        "kpi_name": "Product Popularity",
        "description": "Most popular products by cart inclusion",
        "business_value": "Identify top selling products",
        "sql_query": "SELECT product_id, COUNT(*) FROM tb_market_cart WHERE product_id IS NOT NULL GROUP BY product_id ORDER BY COUNT(*) DESC",
        "output_format": "List of product IDs and counts",
        "table_name": "tb_market_cart"
      },
      {
        "kpi_name": "User Cart Activity",
        "description": "Number of carts per user",
        "business_value": "Understand individual user engagement",
        "sql_query": "SELECT user_id, COUNT(*) FROM tb_market_cart WHERE user_id IS NOT NULL GROUP BY user_id",
        "output_format": "List of user IDs and counts",
        "table_name": "tb_market_cart"
      },
      {
        "kpi_name": "Cart Item Diversity",
        "description": "Average number of unique products per cart",
        "business_value": "Understand product diversity in customer purchases",
        "sql_query": "SELECT AVG(cnt) FROM (SELECT COUNT(DISTINCT product_id) as cnt FROM tb_market_cart WHERE product_id IS NOT NULL GROUP BY user_id) as subquery",
        "output_format": "Single decimal value",
        "table_name": "tb_market_cart"
      },
      {
        "kpi_name": "Cart Conversion Rate",
        "description": "Percentage of carts that lead to a purchase",
        "business_value": "Measure effectiveness of cart to purchase conversion",
        "sql_query": "SELECT COUNT(CASE WHEN status = 'completed' THEN 1 END) / COUNT(*) FROM tb_market_cart WHERE status IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_market_cart"
      },
      {
        "kpi_name": "Cart Abandonment Rate",
        "description": "Percentage of carts that are abandoned",
        "business_value": "Measure potential lost sales and identify areas for improvement",
        "sql_query": "SELECT COUNT(CASE WHEN status = 'abandoned' THEN 1 END) / COUNT(*) FROM tb_market_cart WHERE status IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_market_cart"
      },
      {
        "kpi_name": "Average Cart Value",
        "description": "Average value of items in a cart",
        "business_value": "Understand potential revenue per cart",
        "sql_query": "SELECT AVG(sum) FROM (SELECT SUM(price * cnt) as sum FROM tb_market_cart JOIN tb_product ON tb_market_cart.product_id = tb_product.product_id WHERE price IS NOT NULL AND cnt IS NOT NULL GROUP BY user_id) as subquery",
        "output_format": "Single decimal value",
        "table_name": "tb_market_cart"
      },
      {
        "kpi_name": "Cart Completion Time",
        "description": "Average time from cart creation to purchase",
        "business_value": "Measure customer decision time",
        "sql_query": "SELECT AVG(DATEDIFF(purchase_date, create_date)) FROM tb_market_cart JOIN tb_purchase ON tb_market_cart.user_id = tb_purchase.user_id WHERE purchase_date IS NOT NULL AND create_date IS NOT NULL AND purchase_date > create_date",
        "output_format": "Single decimal value",
        "table_name": "tb_market_cart"
      },
      {
        "kpi_name": "Cart Retention Rate",
        "description": "Percentage of users who create a cart and return within a week",
        "business_value": "Measure customer retention and engagement",
        "sql_query": "SELECT COUNT(DISTINCT CASE WHEN DATEDIFF(return_date, create_date) <= 7 THEN user_id END) / COUNT(DISTINCT user_id) FROM tb_market_cart JOIN tb_user ON tb_market_cart.user_id = tb_user.user_id WHERE return_date IS NOT NULL AND create_date IS NOT NULL AND return_date > create_date",
        "output_format": "Single decimal value",
        "table_name": "tb_market_cart"
      },
      {
        "kpi_name": "Cart Item Return Rate",
        "description": "Percentage of cart items that are returned",
        "business_value": "Measure product satisfaction and quality",
        "sql_query": "SELECT COUNT(CASE WHEN status = 'returned' THEN 1 END) / COUNT(*) FROM tb_market_cart WHERE status IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_market_cart"
      },
      {
        "kpi_name": "Cart Item Exchange Rate",
        "description": "Percentage of cart items that are exchanged",
        "business_value": "Measure product satisfaction and fit",
        "sql_query": "SELECT COUNT(CASE WHEN status = 'exchanged' THEN 1 END) / COUNT(*) FROM tb_market_cart WHERE status IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_market_cart"
      },
      {
        "kpi_name": "Cart Item Refund Rate",
        "description": "Percentage of cart items that are refunded",
        "business_value": "Measure product satisfaction and quality",
        "sql_query": "SELECT COUNT(CASE WHEN status = 'refunded' THEN 1 END) / COUNT(*) FROM tb_market_cart WHERE status IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_market_cart"
      }
    ]
  },
  "tb_user_delivery": {
    "table_info": {
      "name": "tb_user_delivery",
      "description": "고객 배송지 정보",
      "total_fields": 13,
      "fields_used": 13,
      "foreign_keys": 1,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "delivery_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/PK"
      },
      {
        "name": "delivery_name",
        "type": "type/Text",
        "description": "배송지명",
        "semantic_type": null
      },
      {
        "name": "user_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 218,
          "target_field": "user_id",
          "relationship": "FK to user_id"
        }
      },
      {
        "name": "receiver",
        "type": "type/Text",
        "description": "수령인",
        "semantic_type": null
      },
      {
        "name": "address",
        "type": "type/Text",
        "description": "주소",
        "semantic_type": null
      },
      {
        "name": "address_detail",
        "type": "type/Text",
        "description": "상세주소",
        "semantic_type": null
      },
      {
        "name": "cellphone_1",
        "type": "type/Text",
        "description": "연락처1",
        "semantic_type": null
      },
      {
        "name": "cellphone_2",
        "type": "type/Text",
        "description": "연락처2",
        "semantic_type": null
      },
      {
        "name": "is_default",
        "type": "type/Boolean",
        "description": "기본배송지 여부",
        "semantic_type": null
      },
      {
        "name": "create_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "생셩일",
        "semantic_type": "type/CreationTimestamp"
      },
      {
        "name": "update_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "수정일",
        "semantic_type": "type/UpdatedTimestamp"
      },
      {
        "name": "zip_code",
        "type": "type/Text",
        "description": "우편번호",
        "semantic_type": "type/ZipCode"
      },
      {
        "name": "is_exchange_refund",
        "type": "type/Boolean",
        "description": "교환/반품 배송지 사용여부",
        "semantic_type": null
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total Deliveries",
        "description": "Total number of deliveries",
        "business_value": "Overall volume of deliveries",
        "sql_query": "SELECT COUNT(*) FROM tb_user_delivery WHERE delivery_id IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_user_delivery"
      },
      {
        "kpi_name": "Total Unique Users",
        "description": "Total number of unique users who have deliveries",
        "business_value": "Size of user base",
        "sql_query": "SELECT COUNT(DISTINCT user_id) FROM tb_user_delivery WHERE user_id IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_user_delivery"
      },
      {
        "kpi_name": "Default Delivery Addresses",
        "description": "Number of users who have set a default delivery address",
        "business_value": "User preference for a primary delivery location",
        "sql_query": "SELECT COUNT(*) FROM tb_user_delivery WHERE is_default = TRUE",
        "output_format": "Single numeric value",
        "table_name": "tb_user_delivery"
      },
      {
        "kpi_name": "Deliveries with Refund or Exchange",
        "description": "Number of deliveries associated with a refund or exchange",
        "business_value": "Insight into product return or exchange rate",
        "sql_query": "SELECT COUNT(*) FROM tb_user_delivery WHERE is_exchange_refund = TRUE",
        "output_format": "Single numeric value",
        "table_name": "tb_user_delivery"
      },
      {
        "kpi_name": "Average Deliveries per User",
        "description": "Average number of deliveries per user",
        "business_value": "Insight into user delivery frequency",
        "sql_query": "SELECT AVG(delivery_count) FROM (SELECT user_id, COUNT(*) as delivery_count FROM tb_user_delivery GROUP BY user_id) as subquery",
        "output_format": "Single numeric value",
        "table_name": "tb_user_delivery"
      },
      {
        "kpi_name": "Most Common Delivery Zip Code",
        "description": "Most common zip code for deliveries",
        "business_value": "Identify high-demand delivery areas",
        "sql_query": "SELECT zip_code, COUNT(*) as count FROM tb_user_delivery GROUP BY zip_code ORDER BY count DESC LIMIT 1",
        "output_format": "Single row with zip code and count",
        "table_name": "tb_user_delivery"
      },
      {
        "kpi_name": "Latest Delivery Update",
        "description": "Most recent update to a delivery record",
        "business_value": "Monitor data freshness",
        "sql_query": "SELECT MAX(update_date) FROM tb_user_delivery WHERE update_date IS NOT NULL",
        "output_format": "Single datetime value",
        "table_name": "tb_user_delivery"
      },
      {
        "kpi_name": "Oldest Delivery Record",
        "description": "Oldest creation date of a delivery record",
        "business_value": "Monitor data age",
        "sql_query": "SELECT MIN(create_date) FROM tb_user_delivery WHERE create_date IS NOT NULL",
        "output_format": "Single datetime value",
        "table_name": "tb_user_delivery"
      },
      {
        "kpi_name": "Deliveries with Multiple Contact Numbers",
        "description": "Number of deliveries with more than one contact number",
        "business_value": "Insight into user contact preference",
        "sql_query": "SELECT COUNT(*) FROM tb_user_delivery WHERE cellphone_1 IS NOT NULL AND cellphone_2 IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_user_delivery"
      },
      {
        "kpi_name": "Deliveries with Missing Contact Numbers",
        "description": "Number of deliveries with no contact number",
        "business_value": "Identify potential issues with delivery contact information",
        "sql_query": "SELECT COUNT(*) FROM tb_user_delivery WHERE cellphone_1 IS NULL AND cellphone_2 IS NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_user_delivery"
      },
      {
        "kpi_name": "Deliveries by User with Most Deliveries",
        "description": "Number of deliveries by the user with the most deliveries",
        "business_value": "Identify high-volume users",
        "sql_query": "SELECT user_id, COUNT(*) as count FROM tb_user_delivery GROUP BY user_id ORDER BY count DESC LIMIT 1",
        "output_format": "Single row with user_id and count",
        "table_name": "tb_user_delivery"
      },
      {
        "kpi_name": "Deliveries by User with Least Deliveries",
        "description": "Number of deliveries by the user with the least deliveries",
        "business_value": "Identify low-volume users",
        "sql_query": "SELECT user_id, COUNT(*) as count FROM tb_user_delivery GROUP BY user_id ORDER BY count ASC LIMIT 1",
        "output_format": "Single row with user_id and count",
        "table_name": "tb_user_delivery"
      },
      {
        "kpi_name": "Deliveries with Detailed Address",
        "description": "Number of deliveries with detailed address information",
        "business_value": "Insight into user address detail preference",
        "sql_query": "SELECT COUNT(*) FROM tb_user_delivery WHERE address_detail IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_user_delivery"
      },
      {
        "kpi_name": "Deliveries without Detailed Address",
        "description": "Number of deliveries without detailed address information",
        "business_value": "Identify potential issues with delivery address information",
        "sql_query": "SELECT COUNT(*) FROM tb_user_delivery WHERE address_detail IS NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_user_delivery"
      },
      {
        "kpi_name": "Deliveries with Same Receiver and User",
        "description": "Number of deliveries where the receiver is the same as the user",
        "business_value": "Insight into user delivery preference",
        "sql_query": "SELECT COUNT(*) FROM tb_user_delivery JOIN tb_user ON tb_user_delivery.user_id = tb_user.user_id WHERE tb_user_delivery.receiver = tb_user.user_name",
        "output_format": "Single numeric value",
        "table_name": "tb_user_delivery"
      },
      {
        "kpi_name": "Deliveries with Different Receiver and User",
        "description": "Number of deliveries where the receiver is different from the user",
        "business_value": "Insight into user delivery preference",
        "sql_query": "SELECT COUNT(*) FROM tb_user_delivery JOIN tb_user ON tb_user_delivery.user_id = tb_user.user_id WHERE tb_user_delivery.receiver <> tb_user.user_name",
        "output_format": "Single numeric value",
        "table_name": "tb_user_delivery"
      },
      {
        "kpi_name": "Deliveries with Missing Receiver",
        "description": "Number of deliveries with no receiver specified",
        "business_value": "Identify potential issues with delivery receiver information",
        "sql_query": "SELECT COUNT(*) FROM tb_user_delivery WHERE receiver IS NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_user_delivery"
      },
      {
        "kpi_name": "Deliveries with Missing Address",
        "description": "Number of deliveries with no address specified",
        "business_value": "Identify potential issues with delivery address information",
        "sql_query": "SELECT COUNT(*) FROM tb_user_delivery WHERE address IS NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_user_delivery"
      },
      {
        "kpi_name": "Deliveries with Missing Zip Code",
        "description": "Number of deliveries with no zip code specified",
        "business_value": "Identify potential issues with delivery zip code information",
        "sql_query": "SELECT COUNT(*) FROM tb_user_delivery WHERE zip_code IS NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_user_delivery"
      },
      {
        "kpi_name": "Deliveries with Missing Contact Number",
        "description": "Number of deliveries with no contact number specified",
        "business_value": "Identify potential issues with delivery contact information",
        "sql_query": "SELECT COUNT(*) FROM tb_user_delivery WHERE cellphone_1 IS NULL AND cellphone_2 IS NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_user_delivery"
      }
    ]
  },
  "tb_partner_equipment": {
    "table_info": {
      "name": "tb_partner_equipment",
      "description": "파트너 보유장비",
      "total_fields": 10,
      "fields_used": 10,
      "foreign_keys": 1,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "equipment_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/PK"
      },
      {
        "name": "equipment_name",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "equipment_cnt",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": null
      },
      {
        "name": "description",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Description"
      },
      {
        "name": "create_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "No description",
        "semantic_type": "type/CreationTimestamp"
      },
      {
        "name": "update_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "No description",
        "semantic_type": "type/UpdatedTimestamp"
      },
      {
        "name": "partner_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 68,
          "target_field": "partner_id",
          "relationship": "FK to partner_id"
        }
      },
      {
        "name": "like_cnt",
        "type": "type/Integer",
        "description": "좋아요 개수",
        "semantic_type": null
      },
      {
        "name": "comment_cnt",
        "type": "type/Integer",
        "description": "코멘트 개수",
        "semantic_type": null
      },
      {
        "name": "id",
        "type": "type/UUID",
        "description": "No description",
        "semantic_type": "type/PK"
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total Equipment Count",
        "description": "Total number of equipment",
        "business_value": "Understanding the total inventory of equipment",
        "sql_query": "SELECT COUNT(*) FROM tb_partner_equipment WHERE equipment_cnt IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_partner_equipment"
      },
      {
        "kpi_name": "Total Likes Count",
        "description": "Total number of likes across all equipment",
        "business_value": "Measure of overall user engagement and satisfaction",
        "sql_query": "SELECT SUM(like_cnt) FROM tb_partner_equipment WHERE like_cnt IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_partner_equipment"
      },
      {
        "kpi_name": "Total Comments Count",
        "description": "Total number of comments across all equipment",
        "business_value": "Measure of overall user engagement and feedback",
        "sql_query": "SELECT SUM(comment_cnt) FROM tb_partner_equipment WHERE comment_cnt IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_partner_equipment"
      },
      {
        "kpi_name": "Average Likes Per Equipment",
        "description": "Average number of likes per equipment",
        "business_value": "Measure of average user satisfaction per equipment",
        "sql_query": "SELECT AVG(like_cnt) FROM tb_partner_equipment WHERE like_cnt IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_partner_equipment"
      },
      {
        "kpi_name": "Average Comments Per Equipment",
        "description": "Average number of comments per equipment",
        "business_value": "Measure of average user engagement per equipment",
        "sql_query": "SELECT AVG(comment_cnt) FROM tb_partner_equipment WHERE comment_cnt IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_partner_equipment"
      },
      {
        "kpi_name": "Most Liked Equipment",
        "description": "Equipment with the highest number of likes",
        "business_value": "Identifying the most popular equipment",
        "sql_query": "SELECT equipment_name FROM tb_partner_equipment WHERE like_cnt IS NOT NULL ORDER BY like_cnt DESC LIMIT 1",
        "output_format": "Single string value",
        "table_name": "tb_partner_equipment"
      },
      {
        "kpi_name": "Most Commented Equipment",
        "description": "Equipment with the highest number of comments",
        "business_value": "Identifying the most discussed equipment",
        "sql_query": "SELECT equipment_name FROM tb_partner_equipment WHERE comment_cnt IS NOT NULL ORDER BY comment_cnt DESC LIMIT 1",
        "output_format": "Single string value",
        "table_name": "tb_partner_equipment"
      },
      {
        "kpi_name": "Least Liked Equipment",
        "description": "Equipment with the lowest number of likes",
        "business_value": "Identifying the least popular equipment",
        "sql_query": "SELECT equipment_name FROM tb_partner_equipment WHERE like_cnt IS NOT NULL ORDER BY like_cnt ASC LIMIT 1",
        "output_format": "Single string value",
        "table_name": "tb_partner_equipment"
      },
      {
        "kpi_name": "Least Commented Equipment",
        "description": "Equipment with the lowest number of comments",
        "business_value": "Identifying the least discussed equipment",
        "sql_query": "SELECT equipment_name FROM tb_partner_equipment WHERE comment_cnt IS NOT NULL ORDER BY comment_cnt ASC LIMIT 1",
        "output_format": "Single string value",
        "table_name": "tb_partner_equipment"
      },
      {
        "kpi_name": "New Equipment Count",
        "description": "Number of equipment added in the last 30 days",
        "business_value": "Tracking growth of equipment inventory",
        "sql_query": "SELECT COUNT(*) FROM tb_partner_equipment WHERE create_date IS NOT NULL AND create_date > NOW() - INTERVAL '30 days'",
        "output_format": "Single integer value",
        "table_name": "tb_partner_equipment"
      },
      {
        "kpi_name": "Updated Equipment Count",
        "description": "Number of equipment updated in the last 30 days",
        "business_value": "Tracking maintenance and updates of equipment inventory",
        "sql_query": "SELECT COUNT(*) FROM tb_partner_equipment WHERE update_date IS NOT NULL AND update_date > NOW() - INTERVAL '30 days'",
        "output_format": "Single integer value",
        "table_name": "tb_partner_equipment"
      },
      {
        "kpi_name": "Engagement Rate",
        "description": "Ratio of total comments and likes to total equipment",
        "business_value": "Measure of overall user engagement",
        "sql_query": "SELECT (SUM(comment_cnt) + SUM(like_cnt)) / COUNT(*) FROM tb_partner_equipment WHERE comment_cnt IS NOT NULL AND like_cnt IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_partner_equipment"
      },
      {
        "kpi_name": "Equipment Per Partner",
        "description": "Average number of equipment per partner",
        "business_value": "Understanding the distribution of equipment across partners",
        "sql_query": "SELECT AVG(equipment_cnt) FROM tb_partner_equipment WHERE partner_id IS NOT NULL GROUP BY partner_id",
        "output_format": "Single decimal value",
        "table_name": "tb_partner_equipment"
      },
      {
        "kpi_name": "Most Active Partner",
        "description": "Partner with the highest number of equipment",
        "business_value": "Identifying the most active partners in terms of equipment",
        "sql_query": "SELECT partner_id FROM tb_partner_equipment WHERE partner_id IS NOT NULL GROUP BY partner_id ORDER BY COUNT(*) DESC LIMIT 1",
        "output_format": "Single integer value",
        "table_name": "tb_partner_equipment"
      },
      {
        "kpi_name": "Least Active Partner",
        "description": "Partner with the lowest number of equipment",
        "business_value": "Identifying the least active partners in terms of equipment",
        "sql_query": "SELECT partner_id FROM tb_partner_equipment WHERE partner_id IS NOT NULL GROUP BY partner_id ORDER BY COUNT(*) ASC LIMIT 1",
        "output_format": "Single integer value",
        "table_name": "tb_partner_equipment"
      }
    ]
  },
  "tb_statistics_user": {
    "table_info": {
      "name": "tb_statistics_user",
      "description": "고객 통계 정보",
      "total_fields": 12,
      "fields_used": 12,
      "foreign_keys": 0,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "user_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/PK"
      },
      {
        "name": "rfq_cnt",
        "type": "type/Integer",
        "description": "견적요청서 수",
        "semantic_type": null
      },
      {
        "name": "quot_cnt",
        "type": "type/Integer",
        "description": "받은 견적서 수 (파트너한테 받은 tb_quotation에 있는 모든 견적서 수) (tq.is_available 값 상관없음)",
        "semantic_type": null
      },
      {
        "name": "po_cnt",
        "type": "type/Integer",
        "description": "발주 완료수 (승인받은 발주건수)  -> 발주상태 제조시작 이후 모든 발주서 카운트 (제조시작, 배송, 구매확정) 단, (구)발주서는 전부 제외 (poStatus : CREATED)'",
        "semantic_type": null
      },
      {
        "name": "cu_amount",
        "type": "type/BigInteger",
        "description": "누적 거래 금액 (발주 상태 구매확정 기준)",
        "semantic_type": null
      },
      {
        "name": "partner_redeal_cnt",
        "type": "type/Integer",
        "description": "재거래파트너수",
        "semantic_type": null
      },
      {
        "name": "chat_cnt",
        "type": "type/Integer",
        "description": "채팅수",
        "semantic_type": null
      },
      {
        "name": "update_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "No description",
        "semantic_type": "type/UpdatedTimestamp"
      },
      {
        "name": "point_save_amount",
        "type": "type/Integer",
        "description": "포인트 적립 금액",
        "semantic_type": null
      },
      {
        "name": "point_use_amount",
        "type": "type/Integer",
        "description": "포인트 사용 금액",
        "semantic_type": null
      },
      {
        "name": "deal_complete_cnt",
        "type": "type/Integer",
        "description": "거래 완료 수 (발주 상태 구매확정 기준)",
        "semantic_type": null
      },
      {
        "name": "consulting_rate",
        "type": "type/Integer",
        "description": "상담진행률 (RFQ 에 입찰한 파트너와 한번이라도 채팅 상담한 RFQ / 보낸 RFQ 수)",
        "semantic_type": null
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total RFQs",
        "description": "Total number of RFQs requested by users",
        "business_value": "Helps to understand the demand from users",
        "sql_query": "SELECT COUNT(rfq_cnt) FROM tb_statistics_user WHERE rfq_cnt IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_statistics_user"
      },
      {
        "kpi_name": "Total Quotations",
        "description": "Total number of quotations received by users",
        "business_value": "Helps to understand the supply from partners",
        "sql_query": "SELECT COUNT(quot_cnt) FROM tb_statistics_user WHERE quot_cnt IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_statistics_user"
      },
      {
        "kpi_name": "Total POs",
        "description": "Total number of Purchase Orders completed",
        "business_value": "Helps to understand the transaction volume",
        "sql_query": "SELECT COUNT(po_cnt) FROM tb_statistics_user WHERE po_cnt IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_statistics_user"
      },
      {
        "kpi_name": "Total Transaction Amount",
        "description": "Total transaction amount in CU",
        "business_value": "Helps to understand the transaction value",
        "sql_query": "SELECT SUM(cu_amount) FROM tb_statistics_user WHERE cu_amount IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_statistics_user"
      },
      {
        "kpi_name": "Total Partners Redealed",
        "description": "Total number of partners with whom redeal happened",
        "business_value": "Helps to understand the partner retention",
        "sql_query": "SELECT COUNT(partner_redeal_cnt) FROM tb_statistics_user WHERE partner_redeal_cnt IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_statistics_user"
      },
      {
        "kpi_name": "Total Chats",
        "description": "Total number of chats initiated by users",
        "business_value": "Helps to understand the user engagement",
        "sql_query": "SELECT COUNT(chat_cnt) FROM tb_statistics_user WHERE chat_cnt IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_statistics_user"
      },
      {
        "kpi_name": "Total Points Saved",
        "description": "Total points saved by users",
        "business_value": "Helps to understand the user reward system",
        "sql_query": "SELECT SUM(point_save_amount) FROM tb_statistics_user WHERE point_save_amount IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_statistics_user"
      },
      {
        "kpi_name": "Total Points Used",
        "description": "Total points used by users",
        "business_value": "Helps to understand the user reward system",
        "sql_query": "SELECT SUM(point_use_amount) FROM tb_statistics_user WHERE point_use_amount IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_statistics_user"
      },
      {
        "kpi_name": "Total Deals Completed",
        "description": "Total number of deals completed",
        "business_value": "Helps to understand the transaction success rate",
        "sql_query": "SELECT COUNT(deal_complete_cnt) FROM tb_statistics_user WHERE deal_complete_cnt IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_statistics_user"
      },
      {
        "kpi_name": "Average Consulting Rate",
        "description": "Average consulting rate for RFQs",
        "business_value": "Helps to understand the consultation efficiency",
        "sql_query": "SELECT AVG(consulting_rate) FROM tb_statistics_user WHERE consulting_rate IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_statistics_user"
      },
      {
        "kpi_name": "RFQ to Quotation Conversion Rate",
        "description": "Conversion rate from RFQs to Quotations",
        "business_value": "Helps to understand the conversion efficiency",
        "sql_query": "SELECT (COUNT(quot_cnt)*1.0/COUNT(rfq_cnt)) as conversion_rate FROM tb_statistics_user WHERE rfq_cnt IS NOT NULL AND quot_cnt IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_statistics_user"
      },
      {
        "kpi_name": "Quotation to PO Conversion Rate",
        "description": "Conversion rate from Quotations to POs",
        "business_value": "Helps to understand the conversion efficiency",
        "sql_query": "SELECT (COUNT(po_cnt)*1.0/COUNT(quot_cnt)) as conversion_rate FROM tb_statistics_user WHERE quot_cnt IS NOT NULL AND po_cnt IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_statistics_user"
      },
      {
        "kpi_name": "PO to Deal Completion Conversion Rate",
        "description": "Conversion rate from POs to Deal Completions",
        "business_value": "Helps to understand the conversion efficiency",
        "sql_query": "SELECT (COUNT(deal_complete_cnt)*1.0/COUNT(po_cnt)) as conversion_rate FROM tb_statistics_user WHERE po_cnt IS NOT NULL AND deal_complete_cnt IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_statistics_user"
      },
      {
        "kpi_name": "Average RFQs per User",
        "description": "Average number of RFQs per user",
        "business_value": "Helps to understand the user engagement",
        "sql_query": "SELECT AVG(rfq_cnt) FROM tb_statistics_user WHERE rfq_cnt IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_statistics_user"
      },
      {
        "kpi_name": "Average Quotations per User",
        "description": "Average number of quotations per user",
        "business_value": "Helps to understand the user engagement",
        "sql_query": "SELECT AVG(quot_cnt) FROM tb_statistics_user WHERE quot_cnt IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_statistics_user"
      },
      {
        "kpi_name": "Average POs per User",
        "description": "Average number of POs per user",
        "business_value": "Helps to understand the user engagement",
        "sql_query": "SELECT AVG(po_cnt) FROM tb_statistics_user WHERE po_cnt IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_statistics_user"
      },
      {
        "kpi_name": "Average Transaction Amount per User",
        "description": "Average transaction amount per user in CU",
        "business_value": "Helps to understand the user spending",
        "sql_query": "SELECT AVG(cu_amount) FROM tb_statistics_user WHERE cu_amount IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_statistics_user"
      },
      {
        "kpi_name": "Average Chats per User",
        "description": "Average number of chats per user",
        "business_value": "Helps to understand the user engagement",
        "sql_query": "SELECT AVG(chat_cnt) FROM tb_statistics_user WHERE chat_cnt IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_statistics_user"
      },
      {
        "kpi_name": "Average Points Saved per User",
        "description": "Average points saved per user",
        "business_value": "Helps to understand the user reward system",
        "sql_query": "SELECT AVG(point_save_amount) FROM tb_statistics_user WHERE point_save_amount IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_statistics_user"
      },
      {
        "kpi_name": "Average Points Used per User",
        "description": "Average points used per user",
        "business_value": "Helps to understand the user reward system",
        "sql_query": "SELECT AVG(point_use_amount) FROM tb_statistics_user WHERE point_use_amount IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_statistics_user"
      }
    ]
  },
  "tb_payment_tax_invoice": {
    "table_info": {
      "name": "tb_payment_tax_invoice",
      "description": "세금계산서",
      "total_fields": 12,
      "fields_used": 12,
      "foreign_keys": 1,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "tax_invoice_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/PK"
      },
      {
        "name": "mgt_key",
        "type": "type/Text",
        "description": "문서번호 (prefix_uuid?)",
        "semantic_type": "type/Category"
      },
      {
        "name": "issue_type",
        "type": "type/Text",
        "description": "발행타입 (정발행, 역발행, 위수탁)",
        "semantic_type": "type/Category"
      },
      {
        "name": "purpose_type",
        "type": "type/Text",
        "description": "영수(거래완료 후 발행), 청구(거래완료 전 선발행), 없음",
        "semantic_type": "type/Category"
      },
      {
        "name": "tax_type",
        "type": "type/Text",
        "description": "세금 형태 (과세, 영세, 면세)",
        "semantic_type": "type/Category"
      },
      {
        "name": "invoicee_type",
        "type": "type/Text",
        "description": "공급받는 사람 타입 (사업, 개인, 외국인)",
        "semantic_type": "type/Category"
      },
      {
        "name": "create_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "No description",
        "semantic_type": "type/CreationTimestamp"
      },
      {
        "name": "update_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "No description",
        "semantic_type": "type/UpdatedTimestamp"
      },
      {
        "name": "target_id",
        "type": "type/Integer",
        "description": "견적id, 마켓주문id",
        "semantic_type": null
      },
      {
        "name": "payment_service_type_id",
        "type": "type/Integer",
        "description": "결제관리수수료(1), 마켓(2)(삭제예정), 파트너과금(3), OEM마켓(4)",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 180,
          "target_field": "service_type_id",
          "relationship": "FK to service_type_id"
        }
      },
      {
        "name": "status",
        "type": "type/Integer",
        "description": "발행완료:1 / 전송성공(국세청):2 / 국세청조회완료(대출가능):3",
        "semantic_type": null
      },
      {
        "name": "nts_confirm_num",
        "type": "type/Text",
        "description": "국세청승인번호",
        "semantic_type": "type/Category"
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total Tax Invoices Issued",
        "description": "Total number of tax invoices issued",
        "business_value": "Understanding the volume of tax invoices issued",
        "sql_query": "SELECT COUNT(*) FROM tb_payment_tax_invoice WHERE status IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_payment_tax_invoice"
      },
      {
        "kpi_name": "Total Tax Invoices by Type",
        "description": "Total number of tax invoices issued by type",
        "business_value": "Understanding the distribution of tax invoice types",
        "sql_query": "SELECT issue_type, COUNT(*) FROM tb_payment_tax_invoice WHERE issue_type IS NOT NULL GROUP BY issue_type",
        "output_format": "List of types with corresponding counts",
        "table_name": "tb_payment_tax_invoice"
      },
      {
        "kpi_name": "Total Tax Invoices by Purpose",
        "description": "Total number of tax invoices issued by purpose",
        "business_value": "Understanding the distribution of tax invoice purposes",
        "sql_query": "SELECT purpose_type, COUNT(*) FROM tb_payment_tax_invoice WHERE purpose_type IS NOT NULL GROUP BY purpose_type",
        "output_format": "List of purposes with corresponding counts",
        "table_name": "tb_payment_tax_invoice"
      },
      {
        "kpi_name": "Total Tax Invoices by Tax Type",
        "description": "Total number of tax invoices issued by tax type",
        "business_value": "Understanding the distribution of tax types",
        "sql_query": "SELECT tax_type, COUNT(*) FROM tb_payment_tax_invoice WHERE tax_type IS NOT NULL GROUP BY tax_type",
        "output_format": "List of tax types with corresponding counts",
        "table_name": "tb_payment_tax_invoice"
      },
      {
        "kpi_name": "Total Tax Invoices by Invoicee Type",
        "description": "Total number of tax invoices issued by invoicee type",
        "business_value": "Understanding the distribution of invoicee types",
        "sql_query": "SELECT invoicee_type, COUNT(*) FROM tb_payment_tax_invoice WHERE invoicee_type IS NOT NULL GROUP BY invoicee_type",
        "output_format": "List of invoicee types with corresponding counts",
        "table_name": "tb_payment_tax_invoice"
      },
      {
        "kpi_name": "Total Tax Invoices by Status",
        "description": "Total number of tax invoices issued by status",
        "business_value": "Understanding the distribution of invoice statuses",
        "sql_query": "SELECT status, COUNT(*) FROM tb_payment_tax_invoice WHERE status IS NOT NULL GROUP BY status",
        "output_format": "List of statuses with corresponding counts",
        "table_name": "tb_payment_tax_invoice"
      },
      {
        "kpi_name": "Total Tax Invoices by Payment Service Type",
        "description": "Total number of tax invoices issued by payment service type",
        "business_value": "Understanding the distribution of payment service types",
        "sql_query": "SELECT payment_service_type_id, COUNT(*) FROM tb_payment_tax_invoice WHERE payment_service_type_id IS NOT NULL GROUP BY payment_service_type_id",
        "output_format": "List of payment service types with corresponding counts",
        "table_name": "tb_payment_tax_invoice"
      },
      {
        "kpi_name": "Total Tax Invoices by Creation Date",
        "description": "Total number of tax invoices issued by creation date",
        "business_value": "Understanding the distribution of invoice creation dates",
        "sql_query": "SELECT DATE(create_date), COUNT(*) FROM tb_payment_tax_invoice WHERE create_date IS NOT NULL GROUP BY DATE(create_date)",
        "output_format": "List of dates with corresponding counts",
        "table_name": "tb_payment_tax_invoice"
      },
      {
        "kpi_name": "Total Tax Invoices by Update Date",
        "description": "Total number of tax invoices issued by update date",
        "business_value": "Understanding the distribution of invoice update dates",
        "sql_query": "SELECT DATE(update_date), COUNT(*) FROM tb_payment_tax_invoice WHERE update_date IS NOT NULL GROUP BY DATE(update_date)",
        "output_format": "List of dates with corresponding counts",
        "table_name": "tb_payment_tax_invoice"
      },
      {
        "kpi_name": "Average Time Between Creation and Update",
        "description": "Average time between invoice creation and update",
        "business_value": "Understanding the average processing time for invoices",
        "sql_query": "SELECT AVG(DATEDIFF(update_date, create_date)) FROM tb_payment_tax_invoice WHERE create_date IS NOT NULL AND update_date IS NOT NULL AND update_date > create_date",
        "output_format": "Single numeric value",
        "table_name": "tb_payment_tax_invoice"
      },
      {
        "kpi_name": "Total Tax Invoices with NTS Confirmation",
        "description": "Total number of tax invoices with NTS confirmation number",
        "business_value": "Understanding the volume of confirmed invoices",
        "sql_query": "SELECT COUNT(*) FROM tb_payment_tax_invoice WHERE nts_confirm_num IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_payment_tax_invoice"
      },
      {
        "kpi_name": "Total Tax Invoices without NTS Confirmation",
        "description": "Total number of tax invoices without NTS confirmation number",
        "business_value": "Understanding the volume of unconfirmed invoices",
        "sql_query": "SELECT COUNT(*) FROM tb_payment_tax_invoice WHERE nts_confirm_num IS NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_payment_tax_invoice"
      },
      {
        "kpi_name": "Total Tax Invoices by Target ID",
        "description": "Total number of tax invoices issued by target ID",
        "business_value": "Understanding the distribution of target IDs",
        "sql_query": "SELECT target_id, COUNT(*) FROM tb_payment_tax_invoice WHERE target_id IS NOT NULL GROUP BY target_id",
        "output_format": "List of target IDs with corresponding counts",
        "table_name": "tb_payment_tax_invoice"
      },
      {
        "kpi_name": "Total Tax Invoices by Management Key",
        "description": "Total number of tax invoices issued by management key",
        "business_value": "Understanding the distribution of management keys",
        "sql_query": "SELECT mgt_key, COUNT(*) FROM tb_payment_tax_invoice WHERE mgt_key IS NOT NULL GROUP BY mgt_key",
        "output_format": "List of management keys with corresponding counts",
        "table_name": "tb_payment_tax_invoice"
      },
      {
        "kpi_name": "Total Tax Invoices by Tax Invoice ID",
        "description": "Total number of tax invoices issued by tax invoice ID",
        "business_value": "Understanding the distribution of tax invoice IDs",
        "sql_query": "SELECT tax_invoice_id, COUNT(*) FROM tb_payment_tax_invoice WHERE tax_invoice_id IS NOT NULL GROUP BY tax_invoice_id",
        "output_format": "List of tax invoice IDs with corresponding counts",
        "table_name": "tb_payment_tax_invoice"
      }
    ]
  },
  "tb_oem_market_payment": {
    "table_info": {
      "name": "tb_oem_market_payment",
      "description": "마켓 결제 테이블",
      "total_fields": 20,
      "fields_used": 20,
      "foreign_keys": 4,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "oem_market_payment_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/PK"
      },
      {
        "name": "method_id",
        "type": "type/Integer",
        "description": "등록한 결제수단 아이디",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 138,
          "target_field": "method_id",
          "relationship": "FK to method_id"
        }
      },
      {
        "name": "payment_root_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 169,
          "target_field": "payment_root_id",
          "relationship": "FK to payment_root_id"
        }
      },
      {
        "name": "payment_strategy_type_id",
        "type": "type/Integer",
        "description": "결제 수단 타입 ex) nicepay(1), 대출 - loan(2)",
        "semantic_type": null
      },
      {
        "name": "order_id",
        "type": "type/Integer",
        "description": "주문아이디",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 467,
          "target_field": "order_id",
          "relationship": "FK to order_id"
        }
      },
      {
        "name": "paid_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "결제 성공일",
        "semantic_type": null
      },
      {
        "name": "confirm_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "구매확정일",
        "semantic_type": null
      },
      {
        "name": "commission",
        "type": "type/BigInteger",
        "description": "수익금",
        "semantic_type": null
      },
      {
        "name": "fee_history_id",
        "type": "type/Integer",
        "description": "수수료 정책",
        "semantic_type": null
      },
      {
        "name": "tax_invoice_info",
        "type": "type/JSON",
        "description": "세금계산서 정보",
        "semantic_type": "type/SerializedJSON"
      },
      {
        "name": "payout_date_to_partner",
        "type": "type/DateTimeWithLocalTZ",
        "description": "파트너에게 지급대행 요청한 날짜",
        "semantic_type": null
      },
      {
        "name": "payout_amount_to_partner",
        "type": "type/BigInteger",
        "description": "파트너에게 지급대행 요청한 금액",
        "semantic_type": null
      },
      {
        "name": "is_payout_complete_to_capa",
        "type": "type/Boolean",
        "description": "true : capa에게 지급대행 완료 / false:  capa에게 지급대행 미완료 ",
        "semantic_type": null
      },
      {
        "name": "payout_date_to_capa",
        "type": "type/DateTimeWithLocalTZ",
        "description": "캐파에게 지급대행 요청한 날짜",
        "semantic_type": null
      },
      {
        "name": "payout_amount_to_capa",
        "type": "type/BigInteger",
        "description": "캐파에게 지급대행 요청한 금액",
        "semantic_type": null
      },
      {
        "name": "create_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "No description",
        "semantic_type": "type/CreationTimestamp"
      },
      {
        "name": "update_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "No description",
        "semantic_type": "type/UpdatedTimestamp"
      },
      {
        "name": "market_order_detail_id",
        "type": "type/Integer",
        "description": "oem market order detail id",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 86,
          "target_field": "order_detail_id",
          "relationship": "FK to order_detail_id"
        }
      },
      {
        "name": "is_payout_complete_to_partner",
        "type": "type/Boolean",
        "description": "판매자에게 지급대행 완료 여부",
        "semantic_type": null
      },
      {
        "name": "deduction_amount",
        "type": "type/Integer",
        "description": "차감금액 (반품으로 인해 발생)",
        "semantic_type": null
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total Commission Earned",
        "description": "Total commission earned from all payments",
        "business_value": "Helps understand the total revenue generated from commission",
        "sql_query": "SELECT SUM(commission) FROM tb_oem_market_payment WHERE commission IS NOT NULL",
        "output_format": "Single numeric value representing total commission",
        "table_name": "tb_oem_market_payment"
      },
      {
        "kpi_name": "Total Payout to Partners",
        "description": "Total amount paid out to partners",
        "business_value": "Helps understand the total expense towards partners",
        "sql_query": "SELECT SUM(payout_amount_to_partner) FROM tb_oem_market_payment WHERE payout_amount_to_partner IS NOT NULL",
        "output_format": "Single numeric value representing total payout to partners",
        "table_name": "tb_oem_market_payment"
      },
      {
        "kpi_name": "Total Payout to Capa",
        "description": "Total amount paid out to Capa",
        "business_value": "Helps understand the total expense towards Capa",
        "sql_query": "SELECT SUM(payout_amount_to_capa) FROM tb_oem_market_payment WHERE payout_amount_to_capa IS NOT NULL",
        "output_format": "Single numeric value representing total payout to Capa",
        "table_name": "tb_oem_market_payment"
      },
      {
        "kpi_name": "Total Deduction Amount",
        "description": "Total amount deducted due to returns",
        "business_value": "Helps understand the total loss due to returns",
        "sql_query": "SELECT SUM(deduction_amount) FROM tb_oem_market_payment WHERE deduction_amount IS NOT NULL",
        "output_format": "Single numeric value representing total deduction amount",
        "table_name": "tb_oem_market_payment"
      },
      {
        "kpi_name": "Average Commission per Order",
        "description": "Average commission earned per order",
        "business_value": "Helps understand the average revenue per order",
        "sql_query": "SELECT AVG(commission) FROM tb_oem_market_payment WHERE commission IS NOT NULL AND order_id IS NOT NULL",
        "output_format": "Single numeric value representing average commission per order",
        "table_name": "tb_oem_market_payment"
      },
      {
        "kpi_name": "Number of Completed Payouts to Partners",
        "description": "Number of completed payouts to partners",
        "business_value": "Helps understand the efficiency of payout process to partners",
        "sql_query": "SELECT COUNT(*) FROM tb_oem_market_payment WHERE is_payout_complete_to_partner = true",
        "output_format": "Single numeric value representing number of completed payouts to partners",
        "table_name": "tb_oem_market_payment"
      },
      {
        "kpi_name": "Number of Completed Payouts to Capa",
        "description": "Number of completed payouts to Capa",
        "business_value": "Helps understand the efficiency of payout process to Capa",
        "sql_query": "SELECT COUNT(*) FROM tb_oem_market_payment WHERE is_payout_complete_to_capa = true",
        "output_format": "Single numeric value representing number of completed payouts to Capa",
        "table_name": "tb_oem_market_payment"
      },
      {
        "kpi_name": "Average Payout Time to Partners",
        "description": "Average time taken to complete payout to partners",
        "business_value": "Helps understand the efficiency of payout process to partners",
        "sql_query": "SELECT AVG(DATEDIFF(payout_date_to_partner, confirm_date)) FROM tb_oem_market_payment WHERE payout_date_to_partner IS NOT NULL AND confirm_date IS NOT NULL AND payout_date_to_partner > confirm_date",
        "output_format": "Single numeric value representing average payout time to partners in days",
        "table_name": "tb_oem_market_payment"
      },
      {
        "kpi_name": "Average Payout Time to Capa",
        "description": "Average time taken to complete payout to Capa",
        "business_value": "Helps understand the efficiency of payout process to Capa",
        "sql_query": "SELECT AVG(DATEDIFF(payout_date_to_capa, confirm_date)) FROM tb_oem_market_payment WHERE payout_date_to_capa IS NOT NULL AND confirm_date IS NOT NULL AND payout_date_to_capa > confirm_date",
        "output_format": "Single numeric value representing average payout time to Capa in days",
        "table_name": "tb_oem_market_payment"
      },
      {
        "kpi_name": "Number of Payments by Method",
        "description": "Number of payments made by each payment method",
        "business_value": "Helps understand the popularity of different payment methods",
        "sql_query": "SELECT method_id, COUNT(*) FROM tb_oem_market_payment WHERE method_id IS NOT NULL GROUP BY method_id",
        "output_format": "List of method IDs and corresponding count of payments",
        "table_name": "tb_oem_market_payment"
      },
      {
        "kpi_name": "Number of Payments by Strategy Type",
        "description": "Number of payments made by each payment strategy type",
        "business_value": "Helps understand the popularity of different payment strategy types",
        "sql_query": "SELECT payment_strategy_type_id, COUNT(*) FROM tb_oem_market_payment WHERE payment_strategy_type_id IS NOT NULL GROUP BY payment_strategy_type_id",
        "output_format": "List of payment strategy type IDs and corresponding count of payments",
        "table_name": "tb_oem_market_payment"
      },
      {
        "kpi_name": "Total Commission by Method",
        "description": "Total commission earned from each payment method",
        "business_value": "Helps understand the revenue generated from different payment methods",
        "sql_query": "SELECT method_id, SUM(commission) FROM tb_oem_market_payment WHERE commission IS NOT NULL AND method_id IS NOT NULL GROUP BY method_id",
        "output_format": "List of method IDs and corresponding total commission",
        "table_name": "tb_oem_market_payment"
      },
      {
        "kpi_name": "Total Commission by Strategy Type",
        "description": "Total commission earned from each payment strategy type",
        "business_value": "Helps understand the revenue generated from different payment strategy types",
        "sql_query": "SELECT payment_strategy_type_id, SUM(commission) FROM tb_oem_market_payment WHERE commission IS NOT NULL AND payment_strategy_type_id IS NOT NULL GROUP BY payment_strategy_type_id",
        "output_format": "List of payment strategy type IDs and corresponding total commission",
        "table_name": "tb_oem_market_payment"
      },
      {
        "kpi_name": "Average Payout to Partners by Method",
        "description": "Average payout to partners for each payment method",
        "business_value": "Helps understand the expense towards partners for different payment methods",
        "sql_query": "SELECT method_id, AVG(payout_amount_to_partner) FROM tb_oem_market_payment WHERE payout_amount_to_partner IS NOT NULL AND method_id IS NOT NULL GROUP BY method_id",
        "output_format": "List of method IDs and corresponding average payout to partners",
        "table_name": "tb_oem_market_payment"
      },
      {
        "kpi_name": "Average Payout to Capa by Method",
        "description": "Average payout to Capa for each payment method",
        "business_value": "Helps understand the expense towards Capa for different payment methods",
        "sql_query": "SELECT method_id, AVG(payout_amount_to_capa) FROM tb_oem_market_payment WHERE payout_amount_to_capa IS NOT NULL AND method_id IS NOT NULL GROUP BY method_id",
        "output_format": "List of method IDs and corresponding average payout to Capa",
        "table_name": "tb_oem_market_payment"
      }
    ]
  },
  "tb_market_order_address": {
    "table_info": {
      "name": "tb_market_order_address",
      "description": "마켓 주문 배송정보 - Jake",
      "total_fields": 8,
      "fields_used": 8,
      "foreign_keys": 1,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "order_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 237,
          "target_field": "order_id",
          "relationship": "FK to order_id"
        }
      },
      {
        "name": "receiver",
        "type": "type/Text",
        "description": "받는사람 이름",
        "semantic_type": "type/Category"
      },
      {
        "name": "address",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "address_detail",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "cellphone1",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "cellphone2",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "zipcode",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/ZipCode"
      },
      {
        "name": "delivery_name",
        "type": "type/Text",
        "description": "배송지명",
        "semantic_type": "type/Category"
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total Orders",
        "description": "Total number of orders",
        "business_value": "Understand the volume of business",
        "sql_query": "SELECT COUNT(order_id) FROM tb_market_order_address WHERE order_id IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_market_order_address"
      },
      {
        "kpi_name": "Unique Receivers",
        "description": "Count of unique receivers",
        "business_value": "Understand the diversity of customer base",
        "sql_query": "SELECT COUNT(DISTINCT receiver) FROM tb_market_order_address WHERE receiver IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_market_order_address"
      },
      {
        "kpi_name": "Orders Per Receiver",
        "description": "Average number of orders per receiver",
        "business_value": "Measure customer loyalty and repeat business",
        "sql_query": "SELECT AVG(order_count) FROM (SELECT receiver, COUNT(order_id) as order_count FROM tb_market_order_address WHERE receiver IS NOT NULL GROUP BY receiver)",
        "output_format": "Single decimal value",
        "table_name": "tb_market_order_address"
      },
      {
        "kpi_name": "Unique Delivery Locations",
        "description": "Count of unique delivery locations",
        "business_value": "Understand geographical spread of deliveries",
        "sql_query": "SELECT COUNT(DISTINCT address) FROM tb_market_order_address WHERE address IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_market_order_address"
      },
      {
        "kpi_name": "Orders Per Delivery Location",
        "description": "Average number of orders per delivery location",
        "business_value": "Measure delivery efficiency and hotspot locations",
        "sql_query": "SELECT AVG(order_count) FROM (SELECT address, COUNT(order_id) as order_count FROM tb_market_order_address WHERE address IS NOT NULL GROUP BY address)",
        "output_format": "Single decimal value",
        "table_name": "tb_market_order_address"
      },
      {
        "kpi_name": "Unique Zipcodes",
        "description": "Count of unique zipcodes",
        "business_value": "Understand geographical spread of deliveries",
        "sql_query": "SELECT COUNT(DISTINCT zipcode) FROM tb_market_order_address WHERE zipcode IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_market_order_address"
      },
      {
        "kpi_name": "Orders Per Zipcode",
        "description": "Average number of orders per zipcode",
        "business_value": "Measure delivery efficiency and hotspot locations",
        "sql_query": "SELECT AVG(order_count) FROM (SELECT zipcode, COUNT(order_id) as order_count FROM tb_market_order_address WHERE zipcode IS NOT NULL GROUP BY zipcode)",
        "output_format": "Single decimal value",
        "table_name": "tb_market_order_address"
      },
      {
        "kpi_name": "Unique Delivery Names",
        "description": "Count of unique delivery names",
        "business_value": "Understand diversity of delivery methods",
        "sql_query": "SELECT COUNT(DISTINCT delivery_name) FROM tb_market_order_address WHERE delivery_name IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_market_order_address"
      },
      {
        "kpi_name": "Orders Per Delivery Name",
        "description": "Average number of orders per delivery name",
        "business_value": "Measure popularity and efficiency of delivery methods",
        "sql_query": "SELECT AVG(order_count) FROM (SELECT delivery_name, COUNT(order_id) as order_count FROM tb_market_order_address WHERE delivery_name IS NOT NULL GROUP BY delivery_name)",
        "output_format": "Single decimal value",
        "table_name": "tb_market_order_address"
      },
      {
        "kpi_name": "Unique Cellphone Numbers",
        "description": "Count of unique cellphone numbers",
        "business_value": "Understand diversity of customer contact points",
        "sql_query": "SELECT COUNT(DISTINCT cellphone1) FROM tb_market_order_address WHERE cellphone1 IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_market_order_address"
      },
      {
        "kpi_name": "Orders Per Cellphone Number",
        "description": "Average number of orders per cellphone number",
        "business_value": "Measure customer loyalty and repeat business",
        "sql_query": "SELECT AVG(order_count) FROM (SELECT cellphone1, COUNT(order_id) as order_count FROM tb_market_order_address WHERE cellphone1 IS NOT NULL GROUP BY cellphone1)",
        "output_format": "Single decimal value",
        "table_name": "tb_market_order_address"
      },
      {
        "kpi_name": "Unique Receiver-Cellphone Combinations",
        "description": "Count of unique receiver-cellphone combinations",
        "business_value": "Understand diversity of customer contact points",
        "sql_query": "SELECT COUNT(DISTINCT CONCAT(receiver, '_', cellphone1)) FROM tb_market_order_address WHERE receiver IS NOT NULL AND cellphone1 IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_market_order_address"
      },
      {
        "kpi_name": "Orders Per Receiver-Cellphone Combination",
        "description": "Average number of orders per receiver-cellphone combination",
        "business_value": "Measure customer loyalty and repeat business",
        "sql_query": "SELECT AVG(order_count) FROM (SELECT CONCAT(receiver, '_', cellphone1) as receiver_cellphone, COUNT(order_id) as order_count FROM tb_market_order_address WHERE receiver IS NOT NULL AND cellphone1 IS NOT NULL GROUP BY receiver_cellphone)",
        "output_format": "Single decimal value",
        "table_name": "tb_market_order_address"
      },
      {
        "kpi_name": "Unique Receiver-Delivery Name Combinations",
        "description": "Count of unique receiver-delivery name combinations",
        "business_value": "Understand diversity of customer delivery preferences",
        "sql_query": "SELECT COUNT(DISTINCT CONCAT(receiver, '_', delivery_name)) FROM tb_market_order_address WHERE receiver IS NOT NULL AND delivery_name IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_market_order_address"
      },
      {
        "kpi_name": "Orders Per Receiver-Delivery Name Combination",
        "description": "Average number of orders per receiver-delivery name combination",
        "business_value": "Measure customer loyalty and delivery preferences",
        "sql_query": "SELECT AVG(order_count) FROM (SELECT CONCAT(receiver, '_', delivery_name) as receiver_delivery, COUNT(order_id) as order_count FROM tb_market_order_address WHERE receiver IS NOT NULL AND delivery_name IS NOT NULL GROUP BY receiver_delivery)",
        "output_format": "Single decimal value",
        "table_name": "tb_market_order_address"
      }
    ]
  },
  "tb_rfq_file": {
    "table_info": {
      "name": "tb_rfq_file",
      "description": "rfq 관련 파일 통합 테이블",
      "total_fields": 11,
      "fields_used": 11,
      "foreign_keys": 3,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "rfq_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 172,
          "target_field": "rfq_id",
          "relationship": "FK to rfq_id"
        }
      },
      {
        "name": "file_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 405,
          "target_field": "file_id",
          "relationship": "FK to file_id"
        }
      },
      {
        "name": "create_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "No description",
        "semantic_type": "type/CreationTimestamp"
      },
      {
        "name": "cnt",
        "type": "type/Integer",
        "description": "개수",
        "semantic_type": null
      },
      {
        "name": "thickness",
        "type": "type/Float",
        "description": "제작두께",
        "semantic_type": null
      },
      {
        "name": "material_type_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 25,
          "target_field": "material_type_id",
          "relationship": "FK to material_type_id"
        }
      },
      {
        "name": "post_processing",
        "type": "type/JSON",
        "description": "후처리 가공선택",
        "semantic_type": "type/SerializedJSON"
      },
      {
        "name": "memo",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "file_type",
        "type": "type/Text",
        "description": "https://www.notion.so/ateamventures/59ff4f699e604d8292ffb6fec024bb83?pvs=4",
        "semantic_type": "type/PK"
      },
      {
        "name": "dimension",
        "type": "type/JSON",
        "description": "도면 크기정보 (가로, 세로, 높이, 부피)",
        "semantic_type": "type/SerializedJSON"
      },
      {
        "name": "is_processed_file",
        "type": "type/Boolean",
        "description": "파일 처리 여부 ( 도면 블러파일 등..)",
        "semantic_type": null
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total RFQ Files",
        "description": "Total number of RFQ files",
        "business_value": "Understanding the volume of RFQ files",
        "sql_query": "SELECT COUNT(*) FROM tb_rfq_file WHERE file_id IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_rfq_file"
      },
      {
        "kpi_name": "Total Unique RFQs",
        "description": "Total number of unique RFQs",
        "business_value": "Understanding the volume of unique RFQs",
        "sql_query": "SELECT COUNT(DISTINCT rfq_id) FROM tb_rfq_file WHERE rfq_id IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_rfq_file"
      },
      {
        "kpi_name": "Average File Count per RFQ",
        "description": "Average number of files per RFQ",
        "business_value": "Understanding the average number of files associated with each RFQ",
        "sql_query": "SELECT AVG(cnt) FROM tb_rfq_file WHERE rfq_id IS NOT NULL AND cnt IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_rfq_file"
      },
      {
        "kpi_name": "Total Processed Files",
        "description": "Total number of processed files",
        "business_value": "Understanding the volume of processed files",
        "sql_query": "SELECT COUNT(*) FROM tb_rfq_file WHERE is_processed_file = TRUE",
        "output_format": "Single integer value",
        "table_name": "tb_rfq_file"
      },
      {
        "kpi_name": "Average Thickness of Files",
        "description": "Average thickness of all files",
        "business_value": "Understanding the average thickness of files",
        "sql_query": "SELECT AVG(thickness) FROM tb_rfq_file WHERE thickness IS NOT NULL",
        "output_format": "Single decimal value",
        "table_name": "tb_rfq_file"
      },
      {
        "kpi_name": "Most Common Material Type",
        "description": "Most common material type used in files",
        "business_value": "Understanding the most used material type",
        "sql_query": "SELECT material_type_id, COUNT(*) FROM tb_rfq_file WHERE material_type_id IS NOT NULL GROUP BY material_type_id ORDER BY COUNT(*) DESC LIMIT 1",
        "output_format": "Single row with material_type_id and count",
        "table_name": "tb_rfq_file"
      },
      {
        "kpi_name": "RFQs by File Type",
        "description": "Number of RFQs by file type",
        "business_value": "Understanding the distribution of RFQs by file type",
        "sql_query": "SELECT file_type, COUNT(DISTINCT rfq_id) FROM tb_rfq_file WHERE file_type IS NOT NULL AND rfq_id IS NOT NULL GROUP BY file_type",
        "output_format": "Multiple rows with file_type and count",
        "table_name": "tb_rfq_file"
      },
      {
        "kpi_name": "Files Created Over Time",
        "description": "Number of files created over time",
        "business_value": "Understanding the trend of file creation",
        "sql_query": "SELECT DATE(create_date) as date, COUNT(*) FROM tb_rfq_file WHERE create_date IS NOT NULL GROUP BY DATE(create_date) ORDER BY date",
        "output_format": "Multiple rows with date and count",
        "table_name": "tb_rfq_file"
      },
      {
        "kpi_name": "RFQs with Post Processing",
        "description": "Number of RFQs with post processing",
        "business_value": "Understanding the volume of RFQs requiring post processing",
        "sql_query": "SELECT COUNT(DISTINCT rfq_id) FROM tb_rfq_file WHERE post_processing IS NOT NULL AND rfq_id IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_rfq_file"
      },
      {
        "kpi_name": "Average File Count per Material Type",
        "description": "Average number of files per material type",
        "business_value": "Understanding the distribution of files across material types",
        "sql_query": "SELECT material_type_id, AVG(cnt) FROM tb_rfq_file WHERE material_type_id IS NOT NULL AND cnt IS NOT NULL GROUP BY material_type_id",
        "output_format": "Multiple rows with material_type_id and average count",
        "table_name": "tb_rfq_file"
      },
      {
        "kpi_name": "RFQs with Multiple Files",
        "description": "Number of RFQs with multiple files",
        "business_value": "Understanding the volume of RFQs with multiple associated files",
        "sql_query": "SELECT COUNT(*) FROM (SELECT rfq_id FROM tb_rfq_file WHERE rfq_id IS NOT NULL GROUP BY rfq_id HAVING COUNT(*) > 1) AS subquery",
        "output_format": "Single integer value",
        "table_name": "tb_rfq_file"
      },
      {
        "kpi_name": "RFQs by Creation Date",
        "description": "Number of RFQs by creation date",
        "business_value": "Understanding the distribution of RFQs over time",
        "sql_query": "SELECT DATE(create_date) as date, COUNT(DISTINCT rfq_id) FROM tb_rfq_file WHERE create_date IS NOT NULL AND rfq_id IS NOT NULL GROUP BY DATE(create_date) ORDER BY date",
        "output_format": "Multiple rows with date and count",
        "table_name": "tb_rfq_file"
      },
      {
        "kpi_name": "RFQs with Thickness Over Average",
        "description": "Number of RFQs with thickness over the average thickness",
        "business_value": "Understanding the volume of RFQs with above average thickness",
        "sql_query": "SELECT COUNT(DISTINCT rfq_id) FROM tb_rfq_file WHERE thickness IS NOT NULL AND thickness > (SELECT AVG(thickness) FROM tb_rfq_file WHERE thickness IS NOT NULL)",
        "output_format": "Single integer value",
        "table_name": "tb_rfq_file"
      },
      {
        "kpi_name": "RFQs with Post Processing Over Time",
        "description": "Number of RFQs with post processing over time",
        "business_value": "Understanding the trend of RFQs requiring post processing",
        "sql_query": "SELECT DATE(create_date) as date, COUNT(DISTINCT rfq_id) FROM tb_rfq_file WHERE create_date IS NOT NULL AND rfq_id IS NOT NULL AND post_processing IS NOT NULL GROUP BY DATE(create_date) ORDER BY date",
        "output_format": "Multiple rows with date and count",
        "table_name": "tb_rfq_file"
      },
      {
        "kpi_name": "RFQs with Processed Files",
        "description": "Number of RFQs with processed files",
        "business_value": "Understanding the volume of RFQs with processed files",
        "sql_query": "SELECT COUNT(DISTINCT rfq_id) FROM tb_rfq_file WHERE is_processed_file = TRUE AND rfq_id IS NOT NULL",
        "output_format": "Single integer value",
        "table_name": "tb_rfq_file"
      }
    ]
  },
  "tb_partner_product": {
    "table_info": {
      "name": "tb_partner_product",
      "description": "생산품",
      "total_fields": 4,
      "fields_used": 4,
      "foreign_keys": 1,
      "related_tables": 0
    },
    "field_details": [
      {
        "name": "product_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/PK"
      },
      {
        "name": "partner_id",
        "type": "type/Integer",
        "description": "No description",
        "semantic_type": "type/FK",
        "foreign_key": {
          "target_table": 68,
          "target_field": "partner_id",
          "relationship": "FK to partner_id"
        }
      },
      {
        "name": "product",
        "type": "type/Text",
        "description": "No description",
        "semantic_type": "type/Category"
      },
      {
        "name": "create_date",
        "type": "type/DateTimeWithLocalTZ",
        "description": "No description",
        "semantic_type": "type/CreationTimestamp"
      }
    ],
    "kpis": [
      {
        "kpi_name": "Total Products",
        "description": "Total number of products",
        "business_value": "Understanding the size of the product portfolio",
        "sql_query": "SELECT COUNT(*) FROM tb_partner_product WHERE product_id IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_partner_product"
      },
      {
        "kpi_name": "Unique Partners",
        "description": "Number of unique partners",
        "business_value": "Understanding the size of the partner network",
        "sql_query": "SELECT COUNT(DISTINCT partner_id) FROM tb_partner_product WHERE partner_id IS NOT NULL",
        "output_format": "Single numeric value",
        "table_name": "tb_partner_product"
      },
      {
        "kpi_name": "Products per Partner",
        "description": "Average number of products per partner",
        "business_value": "Understanding the product distribution across partners",
        "sql_query": "SELECT AVG(product_count) FROM (SELECT partner_id, COUNT(*) as product_count FROM tb_partner_product WHERE partner_id IS NOT NULL GROUP BY partner_id) subquery",
        "output_format": "Single numeric value",
        "table_name": "tb_partner_product"
      },
      {
        "kpi_name": "New Products per Month",
        "description": "Number of new products added per month",
        "business_value": "Tracking the growth of the product portfolio",
        "sql_query": "SELECT DATE_TRUNC('month', create_date) as month, COUNT(*) FROM tb_partner_product WHERE create_date IS NOT NULL AND create_date > '1900-01-01' GROUP BY month",
        "output_format": "Time series",
        "table_name": "tb_partner_product"
      },
      {
        "kpi_name": "New Partners per Month",
        "description": "Number of new partners added per month",
        "business_value": "Tracking the growth of the partner network",
        "sql_query": "SELECT DATE_TRUNC('month', create_date) as month, COUNT(DISTINCT partner_id) FROM tb_partner_product WHERE create_date IS NOT NULL AND create_date > '1900-01-01' GROUP BY month",
        "output_format": "Time series",
        "table_name": "tb_partner_product"
      },
      {
        "kpi_name": "Product Lifespan",
        "description": "Average lifespan of a product (from creation to now)",
        "business_value": "Understanding the longevity of products",
        "sql_query": "SELECT AVG(DATE_PART('day', CURRENT_DATE - create_date)) FROM tb_partner_product WHERE create_date IS NOT NULL AND create_date > '1900-01-01'",
        "output_format": "Single numeric value",
        "table_name": "tb_partner_product"
      },
      {
        "kpi_name": "Partner Lifespan",
        "description": "Average lifespan of a partner (from first product to now)",
        "business_value": "Understanding the longevity of partner relationships",
        "sql_query": "SELECT AVG(DATE_PART('day', CURRENT_DATE - MIN(create_date))) FROM tb_partner_product WHERE partner_id IS NOT NULL AND create_date IS NOT NULL AND create_date > '1900-01-01' GROUP BY partner_id",
        "output_format": "Single numeric value",
        "table_name": "tb_partner_product"
      },
      {
        "kpi_name": "Product Diversity per Partner",
        "description": "Average number of unique products per partner",
        "business_value": "Understanding the diversity of products offered by each partner",
        "sql_query": "SELECT AVG(product_count) FROM (SELECT partner_id, COUNT(DISTINCT product) as product_count FROM tb_partner_product WHERE partner_id IS NOT NULL GROUP BY partner_id) subquery",
        "output_format": "Single numeric value",
        "table_name": "tb_partner_product"
      },
      {
        "kpi_name": "Partner Diversity per Product",
        "description": "Average number of unique partners per product",
        "business_value": "Understanding the diversity of partners offering each product",
        "sql_query": "SELECT AVG(partner_count) FROM (SELECT product, COUNT(DISTINCT partner_id) as partner_count FROM tb_partner_product WHERE product IS NOT NULL GROUP BY product) subquery",
        "output_format": "Single numeric value",
        "table_name": "tb_partner_product"
      },
      {
        "kpi_name": "Most Popular Products",
        "description": "Top 10 most common products",
        "business_value": "Identifying the most popular products",
        "sql_query": "SELECT product, COUNT(*) FROM tb_partner_product WHERE product IS NOT NULL GROUP BY product ORDER BY COUNT(*) DESC LIMIT 10",
        "output_format": "List of products and counts",
        "table_name": "tb_partner_product"
      },
      {
        "kpi_name": "Most Active Partners",
        "description": "Top 10 partners with the most products",
        "business_value": "Identifying the most active partners",
        "sql_query": "SELECT partner_id, COUNT(*) FROM tb_partner_product WHERE partner_id IS NOT NULL GROUP BY partner_id ORDER BY COUNT(*) DESC LIMIT 10",
        "output_format": "List of partners and counts",
        "table_name": "tb_partner_product"
      },
      {
        "kpi_name": "Product Creation Trend",
        "description": "Trend of product creation over time",
        "business_value": "Tracking the pace of product creation",
        "sql_query": "SELECT DATE_TRUNC('month', create_date) as month, COUNT(*) FROM tb_partner_product WHERE create_date IS NOT NULL AND create_date > '1900-01-01' GROUP BY month ORDER BY month",
        "output_format": "Time series",
        "table_name": "tb_partner_product"
      },
      {
        "kpi_name": "Partner Creation Trend",
        "description": "Trend of partner creation over time",
        "business_value": "Tracking the pace of partner creation",
        "sql_query": "SELECT DATE_TRUNC('month', create_date) as month, COUNT(DISTINCT partner_id) FROM tb_partner_product WHERE create_date IS NOT NULL AND create_date > '1900-01-01' GROUP BY month ORDER BY month",
        "output_format": "Time series",
        "table_name": "tb_partner_product"
      },
      {
        "kpi_name": "Product Churn Rate",
        "description": "Rate at which products are discontinued (assuming a product is discontinued if it hasn't been seen for a year)",
        "business_value": "Understanding the rate of product turnover",
        "sql_query": "SELECT COUNT(*) FROM tb_partner_product WHERE create_date IS NOT NULL AND create_date > '1900-01-01' AND create_date < DATE_TRUNC('year', CURRENT_DATE) - INTERVAL '1 year'",
        "output_format": "Single numeric value",
        "table_name": "tb_partner_product"
      },
      {
        "kpi_name": "Partner Churn Rate",
        "description": "Rate at which partners are lost (assuming a partner is lost if they haven't added a product for a year)",
        "business_value": "Understanding the rate of partner turnover",
        "sql_query": "SELECT COUNT(DISTINCT partner_id) FROM tb_partner_product WHERE create_date IS NOT NULL AND create_date > '1900-01-01' AND create_date < DATE_TRUNC('year', CURRENT_DATE) - INTERVAL '1 year'",
        "output_format": "Single numeric value",
        "table_name": "tb_partner_product"
      }
    ]
  }
}