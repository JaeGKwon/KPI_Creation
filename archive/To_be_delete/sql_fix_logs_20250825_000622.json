[
  {
    "kpi_name": "User Activity Frequency",
    "table_name": "tb_user_activity_log",
    "original_sql": "SELECT AVG(count) FROM (SELECT user_id, COUNT(*) as count FROM tb_user_activity_log WHERE user_id IS NOT NULL GROUP BY user_id) as subquery",
    "fixed_sql": "SELECT AVG(count) \nFROM (SELECT user_id, COUNT(*) as count \n      FROM tb_user_activity_log \n      WHERE user_id IS NOT NULL \n      GROUP BY user_id) subquery;",
    "fixes_applied": [
      "Applied LLM-based SQL fixes"
    ],
    "timestamp": "2025-08-25T00:03:35.958835"
  },
  {
    "kpi_name": "User Activity Distribution",
    "table_name": "tb_user_activity_log",
    "original_sql": "SELECT count, COUNT(*) as user_count FROM (SELECT user_id, COUNT(*) as count FROM tb_user_activity_log WHERE user_id IS NOT NULL GROUP BY user_id) as subquery GROUP BY count",
    "fixed_sql": "SELECT count, COUNT(*) as user_count \nFROM (SELECT user_id, COUNT(*) as count \n      FROM tb_user_activity_log \n      WHERE user_id IS NOT NULL \n      GROUP BY user_id) as subquery \nGROUP BY count;",
    "fixes_applied": [
      "Applied LLM-based SQL fixes"
    ],
    "timestamp": "2025-08-25T00:03:38.945308"
  },
  {
    "kpi_name": "User Retention Rate",
    "table_name": "tb_user_activity_log",
    "original_sql": "SELECT COUNT(DISTINCT user_id) * 1.0 / (SELECT COUNT(DISTINCT user_id) FROM tb_user_activity_log WHERE user_id IS NOT NULL) FROM (SELECT user_id, COUNT(*) as count FROM tb_user_activity_log WHERE user_id IS NOT NULL GROUP BY user_id HAVING COUNT(*) > 1) as subquery",
    "fixed_sql": "SELECT COUNT(DISTINCT user_id) * 1.0 / (SELECT COUNT(DISTINCT user_id) FROM tb_user_activity_log WHERE user_id IS NOT NULL) \nFROM (\n    SELECT user_id, COUNT(*) as count \n    FROM tb_user_activity_log \n    WHERE user_id IS NOT NULL \n    GROUP BY user_id \n    HAVING COUNT(*) > 1\n) as subquery;",
    "fixes_applied": [
      "Applied LLM-based SQL fixes"
    ],
    "timestamp": "2025-08-25T00:03:47.581858"
  },
  {
    "kpi_name": "Products with Maximum Discount",
    "table_name": "tb_market_product",
    "original_sql": "SELECT COUNT(*) FROM tb_market_product WHERE (base_price - discounted_price) / base_price = (SELECT MAX((base_price - discounted_price) / base_price) FROM tb_market_product WHERE base_price IS NOT NULL AND discounted_price IS NOT NULL)",
    "fixed_sql": "SELECT COUNT(*) \nFROM tb_market_product \nWHERE (base_price - discounted_price) / base_price = (\n    SELECT MAX((base_price - discounted_price) / base_price) \n    FROM tb_market_product \n    WHERE base_price IS NOT NULL AND discounted_price IS NOT NULL\n)",
    "fixes_applied": [
      "Applied LLM-based SQL fixes"
    ],
    "timestamp": "2025-08-25T00:05:49.739159"
  }
]